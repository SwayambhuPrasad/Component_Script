{
  "root": true,
  "extends": [
    "airbnb-typescript/base",
    "prettier"
    // "plugin:import/errors",
    // "plugin:import/warnings",
    // "plugin:import/typescript"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": ["./tsconfig.json", "./framework/tsconfig.json"]
  },
  "plugins": ["@typescript-eslint", "import"],
  "rules": {
    "eqeqeq": ["warn", "smart"], // important check missing from recommended
    "no-underscore-dangle": "off",
    "quotes": [
      //force double, but allow template literal
      "warn",
      "double",
      {
        "avoidEscape": true,
        "allowTemplateLiterals": true
      }
    ],

    "class-methods-use-this": "off", // so empty functions could work
    "import/export": "off", // so export declare namespace could work
    "import/extensions": "off", // typescript doesn't support this
    "import/prefer-default-export": "off", // prefer named exports
    "lines-between-class-members": "off", // be more lenient on member declarations
    "max-classes-per-file": "off", // helper classes are common
    "max-len": ["warn", 150], // more lenient on max length per line
    "no-console": "off", // this is just too much work
    "no-plusplus": "off", // allow increment/decrement operators
    "no-continue": "off", // allow unlabeled continues
    "no-mixed-operators": "off", // this is just cumbersome
    "no-multi-assign": "off", // it is handy sometimes
    "no-param-reassign": "off", // the output object is passed as parameters all the time
    "no-shadow": "off", // TODO: this throws false-positives?
    "no-sequences": "off", // it is handy sometimes
    "no-bitwise": "off", // we use this extensively
    "one-var-declaration-per-line": "off", // auto-fix has order issues with `one-var`
    "prefer-destructuring": "off", // auto-fix is not smart enough to merge different instances

    "@typescript-eslint/no-unused-expressions": "warn",
    "@typescript-eslint/no-unused-vars": "off", // may become useful in some parent classes
    "@typescript-eslint/no-namespace": [
      "warn",
      {
        // we need to declare static properties
        "allowDeclarations": true,
        "allowDefinitionFiles": true
      }
    ],
    "@typescript-eslint/explicit-member-accessibility": ["error", { "accessibility": "no-public" }],
    "@typescript-eslint/member-ordering": [
      "warn",
      {
        "default": [
          // Index signature
          "signature",

          // Fields
          "public-static-field",
          "protected-static-field",
          "private-static-field",

          "public-decorated-field",
          "protected-decorated-field",
          "private-decorated-field",

          "public-instance-field",
          "protected-instance-field",
          "private-instance-field",

          "public-abstract-field",
          "protected-abstract-field",
          "private-abstract-field",

          "public-field",
          "protected-field",
          "private-field",

          "static-field",
          "instance-field",
          "abstract-field",

          "decorated-field",

          "field",

          // Constructors
          "public-constructor",
          "protected-constructor",
          "private-constructor",

          "constructor",

          // Getters
          "public-static-get",
          "protected-static-get",
          "private-static-get",

          "public-decorated-get",
          "protected-decorated-get",
          "private-decorated-get",

          "public-instance-get",
          "protected-instance-get",
          "private-instance-get",

          "public-abstract-get",
          "protected-abstract-get",
          "private-abstract-get",

          "public-get",
          "protected-get",
          "private-get",

          "static-get",
          "instance-get",
          "abstract-get",

          "decorated-get",

          "get",

          // Setters
          "public-static-set",
          "protected-static-set",
          "private-static-set",

          "public-decorated-set",
          "protected-decorated-set",
          "private-decorated-set",

          "public-instance-set",
          "protected-instance-set",
          "private-instance-set",

          "public-abstract-set",
          "protected-abstract-set",
          "private-abstract-set",

          "public-set",
          "protected-set",
          "private-set",

          "static-set",
          "instance-set",
          "abstract-set",

          "decorated-set",

          "set",

          // Methods
          "public-static-method",
          "protected-static-method",
          "private-static-method",

          "public-decorated-method",
          "protected-decorated-method",
          "private-decorated-method",

          "public-instance-method",
          "protected-instance-method",
          "private-instance-method",

          "public-abstract-method",
          "protected-abstract-method",
          "private-abstract-method",

          "public-method",
          "protected-method",
          "private-method",

          "static-method",
          "instance-method",
          "abstract-method",

          "decorated-method",

          "method"
        ]
      }
    ]
  }
}
