{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/assets/Background/CheckPrompt.ts"],"names":["_decorator","Component","ProgressBar","tween","AudioClip","UIView","ccclass","property","CheckPrompt","onLoad","correct","node","active","tryAgain","progressBar","progress","showCorrect","correctAudio","play","show","_playProgressTween","hide","showTryAgain","incorrectAudio","Promise","resolve","set","to","progressDuration","call","start"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAA8BC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,K,OAAAA,K;AAAeC,MAAAA,S,OAAAA,S;;AACtEC,MAAAA,M,iBAAAA,M;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;6BAGjBQ,W,WADZF,OAAO,CAAC,aAAD,C,UAEJC,QAAQ;AAAA;AAAA,2B,UACRA,QAAQ;AAAA;AAAA,2B,UAERA,QAAQ,CAACL,WAAD,C,UACRK,QAAQ,CAACH,SAAD,C,UACRG,QAAQ,CAACH,SAAD,C,2BAPZ,MACaI,WADb,SACiCP,SADjC,CAC2C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAQzC;AAECQ,QAAAA,MAAM,GAAG;AACR,eAAKC,OAAL,CAAaC,IAAb,CAAkBC,MAAlB,GAA2B,KAA3B;AACA,eAAKC,QAAL,CAAcF,IAAd,CAAmBC,MAAnB,GAA4B,KAA5B;AACA,eAAKE,WAAL,CAAiBH,IAAjB,CAAsBC,MAAtB,GAA+B,KAA/B,CAHQ,CAIT;;AACC,eAAKE,WAAL,CAAiBC,QAAjB,GAA4B,CAA5B;AACA;;AAEKC,QAAAA,WAAW,GAAG;AAAA;;AAAA;AACnB,YAAA,KAAI,CAACC,YAAL,CAAkBC,IAAlB;;AACA,kBAAM,KAAI,CAACR,OAAL,CAAaS,IAAb,EAAN,CAFmB,CAGnB;;AACA,YAAA,KAAI,CAACL,WAAL,CAAiBC,QAAjB,GAA4B,CAA5B;AACA,YAAA,KAAI,CAACD,WAAL,CAAiBH,IAAjB,CAAsBC,MAAtB,GAA+B,IAA/B;AACA,kBAAM,KAAI,CAACQ,kBAAL,EAAN;AACA,YAAA,KAAI,CAACN,WAAL,CAAiBH,IAAjB,CAAsBC,MAAtB,GAA+B,KAA/B;AACA,kBAAM,KAAI,CAACF,OAAL,CAAaW,IAAb,EAAN;AARmB;AASnB;;AAEKC,QAAAA,YAAY,GAAG;AAAA;;AAAA;AACpB,YAAA,MAAI,CAACC,cAAL,CAAoBL,IAApB;;AACA,kBAAM,MAAI,CAACL,QAAL,CAAcM,IAAd,EAAN,CAFoB,CAGpB;;AACA,YAAA,MAAI,CAACL,WAAL,CAAiBC,QAAjB,GAA4B,CAA5B;AACA,YAAA,MAAI,CAACD,WAAL,CAAiBH,IAAjB,CAAsBC,MAAtB,GAA+B,IAA/B;AACA,kBAAM,MAAI,CAACQ,kBAAL,EAAN;AACA,YAAA,MAAI,CAACN,WAAL,CAAiBH,IAAjB,CAAsBC,MAAtB,GAA+B,KAA/B;AACA,kBAAM,MAAI,CAACC,QAAL,CAAcQ,IAAd,EAAN,CARoB,CASrB;AATqB;AAUpB;;AAEOD,QAAAA,kBAAkB,GAAG;AAC5B,iBAAO,IAAII,OAAJ,CAAaC,OAAD,IAAW;AAC1BtB,YAAAA,KAAK,CAAC,KAAKW,WAAN,CAAL,CAAwBY,GAAxB,CAA4B;AAACX,cAAAA,QAAQ,EAAC;AAAV,aAA5B,EAA0CY,EAA1C,CAA6C,KAAKC,gBAAlD,EAAoE;AAACb,cAAAA,QAAQ,EAAE;AAAX,aAApE,EAAmFc,IAAnF,CAAwFJ,OAAxF,EAAiGK,KAAjG;AACH,WAFM,CAAP;AAGA;;AA7CuC,O;;;;;iBACG,I;;;;;;;iBACC,I;;2FAC3CvB,Q;;;;;iBAA4B,G;;;;;;;iBAC4B,I;;;;;;;iBACb,I;;;;;;;iBACE,I","sourcesContent":["import { _decorator, Component, Node, UITransform, ProgressBar, tween, Button, AudioClip } from 'cc';\r\nimport { UIView } from '../extensions/as_framework/framework/assets/scripts';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('CheckPrompt')\r\nexport class CheckPrompt extends Component {\r\n   @property(UIView) correct: UIView | null = null;\r\n   @property(UIView) tryAgain: UIView | null = null;\r\n   @property progressDuration = 2.5;\r\n   @property(ProgressBar) progressBar: ProgressBar | null = null;\r\n   @property(AudioClip) correctAudio:AudioClip=null;\r\n   @property(AudioClip) incorrectAudio:AudioClip=null;\r\n\r\n  // @property(Button) CheckButton: Button | null = null;\r\n\r\n   onLoad() {\r\n    this.correct.node.active = false;\r\n    this.tryAgain.node.active = false;\r\n    this.progressBar.node.active = false;\r\n   // this.CheckButton.node.active = true;\r\n    this.progressBar.progress = 0;\r\n   }\r\n\r\n   async showCorrect() {\r\n    this.correctAudio.play();\r\n    await this.correct.show();\r\n    //this.CheckButton.node.active = false;\r\n    this.progressBar.progress = 0;\r\n    this.progressBar.node.active = true;\r\n    await this._playProgressTween();\r\n    this.progressBar.node.active = false;\r\n    await this.correct.hide();\r\n   }\r\n\r\n   async showTryAgain() {\r\n    this.incorrectAudio.play();\r\n    await this.tryAgain.show();\r\n    //this.CheckButton.node.active = false;\r\n    this.progressBar.progress = 0;\r\n    this.progressBar.node.active = true;\r\n    await this._playProgressTween();\r\n    this.progressBar.node.active = false;\r\n    await this.tryAgain.hide();\r\n   // this.CheckButton.node.active = true;\r\n   }\r\n\r\n   private _playProgressTween() {\r\n    return new Promise((resolve)=>{\r\n        tween(this.progressBar).set({progress:0}).to(this.progressDuration, {progress: 1}).call(resolve).start();\r\n    })\r\n   }\r\n}\r\n\r\n"]}