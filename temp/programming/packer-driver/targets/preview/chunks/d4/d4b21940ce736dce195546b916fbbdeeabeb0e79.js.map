{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/extensions/as_framework/framework/assets/scripts/latex/katex/contrib/mhchem.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","url","define","exports","require","module","__filename","__dirname","webpackUniversalModuleDefinition","root","factory","amd","a","i","self","__WEBPACK_EXTERNAL_MODULE__771__","__webpack_modules__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","n","getter","__esModule","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","__webpack_exports__","katex__WEBPACK_IMPORTED_MODULE_0__","katex__WEBPACK_IMPORTED_MODULE_0___default","__defineMacro","context","chemParse","consumeArgs","tokens","stateMachine","str","expectedLoc","length","loc","start","text","tex","texify","go","mhchemParser","input","state","buffer","replace","lastInput","watchdog","output","machine","stateMachines","t","transitions","iterateTransitions","matches","patterns","match_","pattern","task","iA","action_","actions","type_","option","concatArray","nextState","revisit","remainder","toContinue","b","Array","isArray","iB","push","empty","else","else2","space","space$","x","x$","i$","letters","digits","e99","m","match","splice","substr","_","stateOfAggregation$","findObserveGroups","$$","_$$","_9","_X","operator","arrowUpDown","bond","CMT","orbital","others","frac","overset","underset","underbrace","color0","color1","color2","ce","oxidation$","amount","amount2","formula$","uprightEntities","begExcl","begIncl","endIncl","endExcl","beg2Excl","beg2Incl","end2Incl","end2Excl","combine","_match","indexOf","_findObserveGroups","endChars","braces","charAt","endMatchBegin","endMatchEnd","e","match1","substring","group2","matchRet","join","mm","p","q","rm","text_","insert","insertP1","p1","insertP1P2","p2","copy","ret","texMath","texMathTight","k","kind_","color0Output","color","createTransitions","stateArray","split","concat","patternArray","j","r","rd","dq","D","qd","as","oAfterD","tmp","dKv","dType","chargeOrBond","afterOD","isAfterD","c1","c2","c3","c4","hyphenFollows","aToO","sbTrue","sb","sbFalse","beginsWithBondTrue","beginsWithBondFalse","parenthesisLevel","stateOfAggregation","comma","withSpace","entityFollows","rdt","rq","rqt","oxidationOutput","fracOutput","oversetOutput","undersetOutput","underbraceOutput","colorOutput","pq","f","bd","oxidation","romanNumeral","tightOperator","pu","enumber","trim","number","md","mq","b5","cdot","mrm","output0","reverse","outputO","isInner","res","cee","inputi","_go2","_goInner","buf","_getBond","c","b6","arrow","_getArrow","_getOperator","assertNever","assertString","_cjsExports"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;AACkBC,MAAAA,I,iBAAhBC,Y;;AACgBC,MAAAA,K,iBAAhBD,Y;;;8BAEHA,Y,GAAe,cAAYE,G;;AACjCJ,MAAAA,UAAU,CAACK,MAAX,CAAkBH,YAAlB,EAAgC,UAAUI,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC,SAAC,SAASC,gCAAT,CAA0CC,IAA1C,EAAgDC,OAAhD,EAAyD;AACxD,cAAI,OAAOP,OAAP,KAAmB,QAAnB,IAA+B,OAAOE,MAAP,KAAkB,QAArD,EACEA,MAAM,CAACF,OAAP,GAAiBO,OAAO,CAACN,OAAO,CAAC,aAAD,CAAR,CAAxB,CADF,KAEK,IAAI,OAAOF,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACS,GAA3C,EAAgDT,MAAM,CAAC,CAAC,OAAD,CAAD,EAAYQ,OAAZ,CAAN,CAAhD,KACA;AACH,gBAAIE,CAAC,GAAG,OAAOT,OAAP,KAAmB,QAAnB,GAA8BO,OAAO,CAACN,OAAO,CAAC,aAAD,CAAR,CAArC,GAAgEM,OAAO,CAACD,IAAI,CAAC,OAAD,CAAL,CAA/E;;AACA,iBAAK,IAAII,CAAT,IAAcD,CAAd;AAAiB,eAAC,OAAOT,OAAP,KAAmB,QAAnB,GAA8BA,OAA9B,GAAwCM,IAAzC,EAA+CI,CAA/C,IAAoDD,CAAC,CAACC,CAAD,CAArD;AAAjB;AACD;AACF,SARD,EAQG,OAAOC,IAAP,KAAgB,WAAhB,GAA8BA,IAA9B,GAAqC,IARxC,EAQ8C,UAAUC,gCAAV,EAA4C;AACxF;AAAO;AAAU,wBAAY;AAC3B;;AACA;AAAS;AACT;;AAAS,kBAAIC,mBAAmB,GAAG;AACjC;AAAM;AAAK;AAAM,2BAAUX,MAAV,EAAkB;AACjCA,kBAAAA,MAAM,CAACF,OAAP,GAAiBY,gCAAjB;AAEA;AACD;AAED;;AAPiC,eAA1B;AAST;;AACA;AAAS;;AACT;;AAAS,kBAAIE,wBAAwB,GAAG,EAA/B;AACT;;AACA;AAAS;;AACT;;AAAS,uBAASC,mBAAT,CAA6BC,QAA7B,EAAuC;AAC9C;AAAS;;AACT;AAAS,oBAAIC,YAAY,GAAGH,wBAAwB,CAACE,QAAD,CAA3C;AACT;;AAAS,oBAAIC,YAAY,KAAKC,SAArB,EAAgC;AACvC;AAAS,yBAAOD,YAAY,CAACjB,OAApB;AACT;AACD;AACD;AAAS;;AACT;;;AAAS,oBAAIE,MAAM,GAAIY,wBAAwB,CAACE,QAAD,CAAxB,GAAqC;AAC1D;AAAS;;AACT;AAAS;;AACT;AAAShB,kBAAAA,OAAO,EAAE;AAClB;;AAJ0D,iBAAnD;AAMT;;AACA;AAAS;;AACT;;AAASa,gBAAAA,mBAAmB,CAACG,QAAD,CAAnB,CAA8Bd,MAA9B,EAAsCA,MAAM,CAACF,OAA7C,EAAsDe,mBAAtD;AACT;;AACA;AAAS;;AACT;;;AAAS,uBAAOb,MAAM,CAACF,OAAd;AACT;AACD;AACD;;AACA;;AACA;;AAAS;;AAAgD;;;AAAS,eAAE,YAAY;AAC9E;AAAS;;AACT;AAASe,gBAAAA,mBAAmB,CAACI,CAApB,GAAwB,UAAUjB,MAAV,EAAkB;AACjD;AAAS,sBAAIkB,MAAM,GACjBlB,MAAM,IAAIA,MAAM,CAACmB,UAAjB;AACI;AAAS,8BAAY;AACnB,2BAAOnB,MAAM,CAAC,SAAD,CAAb;AACD,mBAHL;AAII;AAAS,8BAAY;AACnB,2BAAOA,MAAP;AACD,mBAPE;AAQT;;AAASa,kBAAAA,mBAAmB,CAACO,CAApB,CAAsBF,MAAtB,EAA8B;AAAEX,oBAAAA,CAAC,EAAEW;AAAL,mBAA9B;AACT;;;AAAS,yBAAOA,MAAP;AACT;AACD,iBAZQ;AAaT;;AACD,eAhBkE,EAAD;AAiBlE;;AACA;;AAAS;;AAA8C;;AAAS,eAAE,YAAY;AAC5E;AAAS;;AACT;AAASL,gBAAAA,mBAAmB,CAACO,CAApB,GAAwB,UAAUtB,OAAV,EAAmBuB,UAAnB,EAA+B;AAC9D;AAAS,uBAAK,IAAIC,GAAT,IAAgBD,UAAhB,EAA4B;AACnC;AAAS,wBACPR,mBAAmB,CAACU,CAApB,CAAsBF,UAAtB,EAAkCC,GAAlC,KACA,CAACT,mBAAmB,CAACU,CAApB,CAAsBzB,OAAtB,EAA+BwB,GAA/B,CAFM,EAGP;AACA;AAASE,sBAAAA,MAAM,CAACC,cAAP,CAAsB3B,OAAtB,EAA+BwB,GAA/B,EAAoC;AAC3CI,wBAAAA,UAAU,EAAE,IAD+B;AAE3CC,wBAAAA,GAAG,EAAEN,UAAU,CAACC,GAAD;AAF4B,uBAApC;AAIT;AACD;AACD;;AACD;AACD;;AACD,iBAfQ;AAgBT;;AACD,eAnBgE,EAAD;AAoBhE;;AACA;;AAAS;;AAA+C;;AAAS,eAAE,YAAY;AAC7E;AAAST,gBAAAA,mBAAmB,CAACU,CAApB,GAAwB,UAAUK,GAAV,EAAeC,IAAf,EAAqB;AACpD,yBAAOL,MAAM,CAACM,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,GAArC,EAA0CC,IAA1C,CAAP;AACD,iBAFQ;AAGT;;AACD,eALiE,EAAD;AAMjE;;AACA;;AACA,kBAAII,mBAAmB,GAAG,EAA1B,CAxF2B,CAyF3B;;AACA,eAAE,YAAY;AACZ;AAAqB,oBAAIC,kCAAkC,GAAGrB,mBAAmB,CAAC,GAAD,CAA5D;AACrB;;;AAAqB,oBAAIsB,0CAA0C,GACjE,aAActB,mBAAmB,CAACI,CAApB,CAAsBiB,kCAAtB,CADK;AAErB;;AAEA;;AAEA;;AAEA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACA;AACA;AACA;AACA;AACA;;;AACAC,gBAAAA,0CAA0C,GAAGC,aAA7C,CAA2D,MAA3D,EAAmE,UAAUC,OAAV,EAAmB;AACpF,yBAAOC,SAAS,CAACD,OAAO,CAACE,WAAR,CAAoB,CAApB,EAAuB,CAAvB,CAAD,EAA4B,IAA5B,CAAhB;AACD,iBAFD;;AAIAJ,gBAAAA,0CAA0C,GAAGC,aAA7C,CAA2D,MAA3D,EAAmE,UAAUC,OAAV,EAAmB;AACpF,yBAAOC,SAAS,CAACD,OAAO,CAACE,WAAR,CAAoB,CAApB,EAAuB,CAAvB,CAAD,EAA4B,IAA5B,CAAhB;AACD,iBAFD,EA5DY,CA8DR;AACJ;AACA;;;AAEAJ,gBAAAA,0CAA0C,GAAGC,aAA7C,CACE,cADF,EAEE,iDACE,oEAHJ,EAlEY,CAwEZ;AACA;AACA;AACA;;;AAEA,oBAAIE,SAAS,GAAG,SAASA,SAAT,CAAmBE,MAAnB,EAA2BC,YAA3B,EAAyC;AACvD;AACA,sBAAIC,GAAG,GAAG,EAAV;AACA,sBAAIC,WAAW,GAAGH,MAAM,CAACA,MAAM,CAACI,MAAP,GAAgB,CAAjB,CAAN,CAA0BC,GAA1B,CAA8BC,KAAhD;;AAEA,uBAAK,IAAItC,CAAC,GAAGgC,MAAM,CAACI,MAAP,GAAgB,CAA7B,EAAgCpC,CAAC,IAAI,CAArC,EAAwCA,CAAC,EAAzC,EAA6C;AAC3C,wBAAIgC,MAAM,CAAChC,CAAD,CAAN,CAAUqC,GAAV,CAAcC,KAAd,GAAsBH,WAA1B,EAAuC;AACrC;AACAD,sBAAAA,GAAG,IAAI,GAAP;AACAC,sBAAAA,WAAW,GAAGH,MAAM,CAAChC,CAAD,CAAN,CAAUqC,GAAV,CAAcC,KAA5B;AACD;;AAEDJ,oBAAAA,GAAG,IAAIF,MAAM,CAAChC,CAAD,CAAN,CAAUuC,IAAjB;AACAJ,oBAAAA,WAAW,IAAIH,MAAM,CAAChC,CAAD,CAAN,CAAUuC,IAAV,CAAeH,MAA9B;AACD;;AAED,sBAAII,GAAG,GAAGC,MAAM,CAACC,EAAP,CAAUC,YAAY,CAACD,EAAb,CAAgBR,GAAhB,EAAqBD,YAArB,CAAV,CAAV;AACA,yBAAOO,GAAP;AACD,iBAlBD,CA7EY,CA+FT;AACH;AACA;;AAEA;;;AAEA,oBAAIG,YAAY,GAAG;AACjB;AACA;AACA;AACA;AACA;AACA;AACAD,kBAAAA,EAAE,EAAE,SAASA,EAAT,CAAYE,KAAZ,EAAmBX,YAAnB,EAAiC;AACnC,wBAAI,CAACW,KAAL,EAAY;AACV,6BAAO,EAAP;AACD;;AAED,wBAAIX,YAAY,KAAKzB,SAArB,EAAgC;AAC9ByB,sBAAAA,YAAY,GAAG,IAAf;AACD;;AAED,wBAAIY,KAAK,GAAG,GAAZ,CATmC,CASlB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,wBAAIC,MAAM,GAAG,EAAb;AACAA,oBAAAA,MAAM,CAAC,kBAAD,CAAN,GAA6B,CAA7B;AACAF,oBAAAA,KAAK,GAAGA,KAAK,CAACG,OAAN,CAAc,KAAd,EAAqB,GAArB,CAAR;AACAH,oBAAAA,KAAK,GAAGA,KAAK,CAACG,OAAN,CAAc,6BAAd,EAA6C,GAA7C,CAAR;AACAH,oBAAAA,KAAK,GAAGA,KAAK,CAACG,OAAN,CAAc,WAAd,EAA2B,KAA3B,CAAR,CAjDmC,CAiDQ;AAC3C;AACA;AACA;;AAEA,wBAAIC,SAAJ;AACA,wBAAIC,QAAQ,GAAG,EAAf;AACA;;AAEA,wBAAIC,MAAM,GAAG,EAAb;;AAEA,2BAAO,IAAP,EAAa;AACX,0BAAIF,SAAS,KAAKJ,KAAlB,EAAyB;AACvBK,wBAAAA,QAAQ,GAAG,EAAX;AACAD,wBAAAA,SAAS,GAAGJ,KAAZ;AACD,uBAHD,MAGO;AACLK,wBAAAA,QAAQ;AACT,uBANU,CAMT;AACF;AACA;;;AAEA,0BAAIE,OAAO,GAAGR,YAAY,CAACS,aAAb,CAA2BnB,YAA3B,CAAd;AACA,0BAAIoB,CAAC,GAAGF,OAAO,CAACG,WAAR,CAAoBT,KAApB,KAA8BM,OAAO,CAACG,WAAR,CAAoB,GAApB,CAAtC;;AAEAC,sBAAAA,kBAAkB,EAAE,KAAK,IAAIvD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqD,CAAC,CAACjB,MAAtB,EAA8BpC,CAAC,EAA/B,EAAmC;AACrD,4BAAIwD,OAAO,GAAGb,YAAY,CAACc,QAAb,CAAsBC,MAAtB,CAA6BL,CAAC,CAACrD,CAAD,CAAD,CAAK2D,OAAlC,EAA2Cf,KAA3C,CAAd;;AAEA,4BAAIY,OAAJ,EAAa;AACX;AACA;AACA;AACA,8BAAII,IAAI,GAAGP,CAAC,CAACrD,CAAD,CAAD,CAAK4D,IAAhB;;AAEA,+BAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGD,IAAI,CAACE,OAAL,CAAa1B,MAAnC,EAA2CyB,EAAE,EAA7C,EAAiD;AAC/C,gCAAI9C,CAAJ,CAD+C,CACxC;AACP;AACA;;AAEA,gCAAIoC,OAAO,CAACY,OAAR,CAAgBH,IAAI,CAACE,OAAL,CAAaD,EAAb,EAAiBG,KAAjC,CAAJ,EAA6C;AAC3CjD,8BAAAA,CAAC,GAAGoC,OAAO,CAACY,OAAR,CAAgBH,IAAI,CAACE,OAAL,CAAaD,EAAb,EAAiBG,KAAjC,EACFlB,MADE,EAEFU,OAAO,CAACE,MAFN,EAGFE,IAAI,CAACE,OAAL,CAAaD,EAAb,EAAiBI,MAHf,CAAJ;AAKD,6BAND,MAMO,IAAItB,YAAY,CAACoB,OAAb,CAAqBH,IAAI,CAACE,OAAL,CAAaD,EAAb,EAAiBG,KAAtC,CAAJ,EAAkD;AACvDjD,8BAAAA,CAAC,GAAG4B,YAAY,CAACoB,OAAb,CAAqBH,IAAI,CAACE,OAAL,CAAaD,EAAb,EAAiBG,KAAtC,EACFlB,MADE,EAEFU,OAAO,CAACE,MAFN,EAGFE,IAAI,CAACE,OAAL,CAAaD,EAAb,EAAiBI,MAHf,CAAJ;AAKD,6BANM,MAMA;AACL,oCAAM,CACJ,YADI,EAEJ,mCAAmCL,IAAI,CAACE,OAAL,CAAaD,EAAb,EAAiBG,KAApD,GAA4D,GAFxD,CAAN,CADK,CAIF;AACJ,6BAtB8C,CAsB7C;AACF;AACA;;;AAEArB,4BAAAA,YAAY,CAACuB,WAAb,CAAyBhB,MAAzB,EAAiCnC,CAAjC;AACD,2BAjCU,CAiCT;AACF;AACA;AACA;AACA;AACA;;;AAEA8B,0BAAAA,KAAK,GAAGe,IAAI,CAACO,SAAL,IAAkBtB,KAA1B;;AAEA,8BAAID,KAAK,CAACR,MAAN,GAAe,CAAnB,EAAsB;AACpB,gCAAI,CAACwB,IAAI,CAACQ,OAAV,EAAmB;AACjBxB,8BAAAA,KAAK,GAAGY,OAAO,CAACa,SAAhB;AACD;;AAED,gCAAI,CAACT,IAAI,CAACU,UAAV,EAAsB;AACpB,oCAAMf,kBAAN;AACD;AACF,2BARD,MAQO;AACL,mCAAOL,MAAP;AACD;AACF;AACF,uBAtEU,CAsET;AACF;AACA;;;AAEA,0BAAID,QAAQ,IAAI,CAAhB,EAAmB;AACjB,8BAAM,CAAC,YAAD,EAAe,8BAAf,CAAN,CADiB,CACqC;AACvD;AACF;AACF,mBAjJgB;AAkJjBiB,kBAAAA,WAAW,EAAE,SAASA,WAAT,CAAqBnE,CAArB,EAAwBwE,CAAxB,EAA2B;AACtC,wBAAIA,CAAJ,EAAO;AACL,0BAAIC,KAAK,CAACC,OAAN,CAAcF,CAAd,CAAJ,EAAsB;AACpB,6BAAK,IAAIG,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGH,CAAC,CAACnC,MAAxB,EAAgCsC,EAAE,EAAlC,EAAsC;AACpC3E,0BAAAA,CAAC,CAAC4E,IAAF,CAAOJ,CAAC,CAACG,EAAD,CAAR;AACD;AACF,uBAJD,MAIO;AACL3E,wBAAAA,CAAC,CAAC4E,IAAF,CAAOJ,CAAP;AACD;AACF;AACF,mBA5JgB;AA6JjBd,kBAAAA,QAAQ,EAAE;AACR;AACA;AACA;AACA;AACAA,oBAAAA,QAAQ,EAAE;AACR;AACAmB,sBAAAA,KAAK,EAAE,IAFC;AAGRC,sBAAAA,IAAI,EAAE,IAHE;AAIRC,sBAAAA,KAAK,EAAE,IAJC;AAKRC,sBAAAA,KAAK,EAAE,KALC;AAMR,iCAAW,iBANH;AAORC,sBAAAA,MAAM,EAAE,MAPA;AAQR,6BAAO,QARC;AASRC,sBAAAA,CAAC,EAAE,IATK;AAURC,sBAAAA,EAAE,EAAE,KAVI;AAWRC,sBAAAA,EAAE,EAAE,KAXI;AAYRC,sBAAAA,OAAO,EACL,sQAbM;AAcR,iCACE,wNAfM;AAgBR,sDAAgC,8BAhBxB;AAiBR,wDAAkC,kCAjB1B;AAkBR,sDACE,iMAnBM;AAoBRC,sBAAAA,MAAM,EAAE,SApBA;AAqBR,+BAAS,qDArBD;AAsBR,4CAAsB,8BAtBd;AAuBR,0CAAoB,SAASC,GAAT,CAAa1C,KAAb,EAAoB;AACtC,4BAAI2C,CAAC,GAAG3C,KAAK,CAAC4C,KAAN,CACN,uMADM,CAAR;;AAIA,4BAAID,CAAC,IAAIA,CAAC,CAAC,CAAD,CAAV,EAAe;AACb,iCAAO;AACL7B,4BAAAA,MAAM,EAAE6B,CAAC,CAACE,MAAF,CAAS,CAAT,CADH;AAELpB,4BAAAA,SAAS,EAAEzB,KAAK,CAAC8C,MAAN,CAAaH,CAAC,CAAC,CAAD,CAAD,CAAKnD,MAAlB;AAFN,2BAAP;AAID;;AAED,+BAAO,IAAP;AACD,uBApCO;AAqCR,qCAAe,SAASuD,CAAT,CAAW/C,KAAX,EAAkB;AAC/B,4BAAI2C,CAAC,GAAG3C,KAAK,CAAC4C,KAAN,CACN,2GADM,CAAR;;AAIA,4BAAID,CAAC,IAAIA,CAAC,CAAC,CAAD,CAAV,EAAe;AACb,iCAAO;AACL7B,4BAAAA,MAAM,EAAE6B,CAAC,CAACE,MAAF,CAAS,CAAT,CADH;AAELpB,4BAAAA,SAAS,EAAEzB,KAAK,CAAC8C,MAAN,CAAaH,CAAC,CAAC,CAAD,CAAD,CAAKnD,MAAlB;AAFN,2BAAP;AAID;;AAED,+BAAO,IAAP;AACD,uBAlDO;AAmDR,gDAA0B,SAASwD,mBAAT,CAA6BhD,KAA7B,EAAoC;AAC5D;AACA,4BAAI7C,CAAC,GAAG4C,YAAY,CAACc,QAAb,CAAsBoC,iBAAtB,CACNjD,KADM,EAEN,EAFM,EAGN,wBAHM,EAIN,GAJM,EAKN,EALM,CAAR,CAF4D,CAQzD;;AAEH,4BAAI7C,CAAC,IAAIA,CAAC,CAACsE,SAAF,CAAYmB,KAAZ,CAAkB,mBAAlB,CAAT,EAAiD;AAC/C,iCAAOzF,CAAP;AACD,yBAZ2D,CAY1D;;;AAEF,4BAAIwF,CAAC,GAAG3C,KAAK,CAAC4C,KAAN,CAAY,mCAAZ,CAAR,CAd4D,CAcF;;AAE1D,4BAAID,CAAJ,EAAO;AACL,iCAAO;AACL7B,4BAAAA,MAAM,EAAE6B,CAAC,CAAC,CAAD,CADJ;AAELlB,4BAAAA,SAAS,EAAEzB,KAAK,CAAC8C,MAAN,CAAaH,CAAC,CAAC,CAAD,CAAD,CAAKnD,MAAlB;AAFN,2BAAP;AAID;;AAED,+BAAO,IAAP;AACD,uBA3EO;AA4ER,oDAA8B,wBA5EtB;AA6ER,6BAAO,iBA7EC;AA8ER,6BAAO,iBA9EC;AA+ER,4BAAM,UA/EE;AAgFR,2BAAK,OAhFG;AAiFR,2BAAK,MAjFG;AAkFR,4BAAM,6BAlFE;AAmFR,6BAAO,mBAnFC;AAoFR,4BAAM,WApFE;AAqFR,kCAAY,SAASuD,CAAT,CAAW/C,KAAX,EAAkB;AAC5B,+BAAOD,YAAY,CAACc,QAAb,CAAsBoC,iBAAtB,CAAwCjD,KAAxC,EAA+C,IAA/C,EAAqD,EAArD,EAAyD,EAAzD,EAA6D,GAA7D,CAAP;AACD,uBAvFO;AAwFR,kCAAY,SAASkD,EAAT,CAAYlD,KAAZ,EAAmB;AAC7B,+BAAOD,YAAY,CAACc,QAAb,CAAsBoC,iBAAtB,CAAwCjD,KAAxC,EAA+C,GAA/C,EAAoD,GAApD,EAAyD,GAAzD,EAA8D,EAA9D,CAAP;AACD,uBA1FO;AA2FR,4BAAM,oBA3FE;AA4FR,kCAAY,SAASqC,CAAT,CAAWrC,KAAX,EAAkB;AAC5B,+BAAOD,YAAY,CAACc,QAAb,CAAsBoC,iBAAtB,CACLjD,KADK,EAEL,GAFK,EAGL,gBAHK,EAIL,GAJK,EAKL,EALK,EAML,EANK,EAOL,GAPK,EAQL,GARK,EASL,EATK,EAUL,IAVK,CAAP;AAYD,uBAzGO;AA0GR,gCAAU,SAASqC,CAAT,CAAWrC,KAAX,EAAkB;AAC1B,+BAAOD,YAAY,CAACc,QAAb,CAAsBoC,iBAAtB,CAAwCjD,KAAxC,EAA+C,GAA/C,EAAoD,gBAApD,EAAsE,GAAtE,EAA2E,EAA3E,CAAP;AACD,uBA5GO;AA6GR,8BAAQ,qBA7GA;AA8GR,+BAAS,YA9GD;AA+GR,2BAAK,IA/GG;AAgHR,kCAAY,SAAS+C,CAAT,CAAW/C,KAAX,EAAkB;AAC5B,+BAAOD,YAAY,CAACc,QAAb,CAAsBoC,iBAAtB,CAAwCjD,KAAxC,EAA+C,IAA/C,EAAqD,EAArD,EAAyD,EAAzD,EAA6D,GAA7D,CAAP;AACD,uBAlHO;AAmHR,kCAAY,SAASmD,GAAT,CAAanD,KAAb,EAAoB;AAC9B,+BAAOD,YAAY,CAACc,QAAb,CAAsBoC,iBAAtB,CAAwCjD,KAAxC,EAA+C,GAA/C,EAAoD,GAApD,EAAyD,GAAzD,EAA8D,EAA9D,CAAP;AACD,uBArHO;AAsHRoD,sBAAAA,EAAE,EAAE,wBAtHI;AAuHR,kCAAY,SAASC,EAAT,CAAYrD,KAAZ,EAAmB;AAC7B,+BAAOD,YAAY,CAACc,QAAb,CAAsBoC,iBAAtB,CACLjD,KADK,EAEL,GAFK,EAGL,gBAHK,EAIL,GAJK,EAKL,EALK,EAML,EANK,EAOL,GAPK,EAQL,GARK,EASL,EATK,EAUL,IAVK,CAAP;AAYD,uBApIO;AAqIR,gCAAU,SAASqD,EAAT,CAAYrD,KAAZ,EAAmB;AAC3B,+BAAOD,YAAY,CAACc,QAAb,CAAsBoC,iBAAtB,CAAwCjD,KAAxC,EAA+C,GAA/C,EAAoD,gBAApD,EAAsE,GAAtE,EAA2E,EAA3E,CAAP;AACD,uBAvIO;AAwIR,8BAAQ,oBAxIA;AAyIR,4BAAM,8BAzIE;AA0IR,4BAAM,OA1IE;AA2IR,+BAAS,SAAS+C,CAAT,CAAW/C,KAAX,EAAkB;AACzB,+BAAOD,YAAY,CAACc,QAAb,CAAsBoC,iBAAtB,CAAwCjD,KAAxC,EAA+C,EAA/C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,EAA7D,CAAP;AACD,uBA7IO;AA8IR,iCAAW,SAAS+C,CAAT,CAAW/C,KAAX,EAAkB;AAC3B,+BAAOD,YAAY,CAACc,QAAb,CAAsBoC,iBAAtB,CAAwCjD,KAAxC,EAA+C,GAA/C,EAAoD,EAApD,EAAwD,EAAxD,EAA4D,GAA5D,CAAP;AACD,uBAhJO;AAiJR,+BAAS,SAASkD,EAAT,CAAYlD,KAAZ,EAAmB;AAC1B,+BAAOD,YAAY,CAACc,QAAb,CAAsBoC,iBAAtB,CAAwCjD,KAAxC,EAA+C,EAA/C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,EAA7D,CAAP;AACD,uBAnJO;AAoJR,mCAAa,SAASkD,EAAT,CAAYlD,KAAZ,EAAmB;AAC9B,+BAAOD,YAAY,CAACc,QAAb,CAAsBoC,iBAAtB,CAAwCjD,KAAxC,EAA+C,IAA/C,EAAqD,EAArD,EAAyD,EAAzD,EAA6D,IAA7D,CAAP;AACD,uBAtJO;AAuJR,iCAAW,SAASkD,EAAT,CAAYlD,KAAZ,EAAmB;AAC5B,+BAAOD,YAAY,CAACc,QAAb,CAAsBoC,iBAAtB,CAAwCjD,KAAxC,EAA+C,GAA/C,EAAoD,EAApD,EAAwD,EAAxD,EAA4D,GAA5D,CAAP;AACD,uBAzJO;AA0JR,6BAAO,QA1JC;AA2JR,2BAAK,YA3JG;AA4JR,2BAAK,KA5JG;AA6JR,4BAAM,gCA7JE;AA8JR;AACA,4BAAM,aA/JE;AAgKR,2CAAqB,sCAhKb;AAiKR,2BAAK,IAjKG;AAkKR,qCAAe,8BAlKP;AAmKRsD,sBAAAA,QAAQ,EAAE,iEAnKF;AAoKRC,sBAAAA,WAAW,EAAE,0CApKL;AAqKR,uCAAiB,SAASC,IAAT,CAAcxD,KAAd,EAAqB;AACpC,+BAAOD,YAAY,CAACc,QAAb,CAAsBoC,iBAAtB,CAAwCjD,KAAxC,EAA+C,SAA/C,EAA0D,EAA1D,EAA8D,EAA9D,EAAkE,GAAlE,CAAP;AACD,uBAvKO;AAwKR,4BAAM,wDAxKE;AAyKRyD,sBAAAA,GAAG,EAAE,cAzKG;AA0KR,iCAAW,SAASV,CAAT,CAAW/C,KAAX,EAAkB;AAC3B,+BAAOD,YAAY,CAACc,QAAb,CAAsBoC,iBAAtB,CAAwCjD,KAAxC,EAA+C,GAA/C,EAAoD,EAApD,EAAwD,EAAxD,EAA4D,GAA5D,CAAP;AACD,uBA5KO;AA6KR,0CAAoB,sBA7KZ;AA8KR,6BAAO,gBA9KC;AA+KR;AACA,iCAAW,SAASqC,CAAT,CAAWrC,KAAX,EAAkB;AAC3B,+BAAOD,YAAY,CAACc,QAAb,CAAsBoC,iBAAtB,CACLjD,KADK,EAEL,EAFK,EAGL,gBAHK,EAIL,GAJK,EAKL,EALK,EAML,EANK,EAOL,GAPK,EAQL,GARK,EASL,EATK,EAUL,IAVK,CAAP;AAYD,uBA7LO;AA8LR,+BAAS,SAASqC,CAAT,CAAWrC,KAAX,EAAkB;AACzB,+BAAOD,YAAY,CAACc,QAAb,CAAsBoC,iBAAtB,CAAwCjD,KAAxC,EAA+C,EAA/C,EAAmD,gBAAnD,EAAqE,GAArE,EAA0E,EAA1E,CAAP;AACD,uBAhMO;AAiMR,8BAAQ,2BAjMA;AAkMR,6BAAO,+BAlMC;AAmMR0D,sBAAAA,OAAO,EAAE,qDAnMD;AAoMR;AACAC,sBAAAA,MAAM,EAAE,SArMA;AAsMR,uCAAiB,SAASC,IAAT,CAAc5D,KAAd,EAAqB;AACpC,+BAAOD,YAAY,CAACc,QAAb,CAAsBoC,iBAAtB,CACLjD,KADK,EAEL,SAFK,EAGL,EAHK,EAIL,EAJK,EAKL,GALK,EAML,GANK,EAOL,EAPK,EAQL,EARK,EASL,GATK,CAAP;AAWD,uBAlNO;AAmNR,0CAAoB,SAAS6D,OAAT,CAAiB7D,KAAjB,EAAwB;AAC1C,+BAAOD,YAAY,CAACc,QAAb,CAAsBoC,iBAAtB,CACLjD,KADK,EAEL,YAFK,EAGL,EAHK,EAIL,EAJK,EAKL,GALK,EAML,GANK,EAOL,EAPK,EAQL,EARK,EASL,GATK,CAAP;AAWD,uBA/NO;AAgOR,2CAAqB,SAAS8D,QAAT,CAAkB9D,KAAlB,EAAyB;AAC5C,+BAAOD,YAAY,CAACc,QAAb,CAAsBoC,iBAAtB,CACLjD,KADK,EAEL,aAFK,EAGL,EAHK,EAIL,EAJK,EAKL,GALK,EAML,GANK,EAOL,EAPK,EAQL,EARK,EASL,GATK,CAAP;AAWD,uBA5OO;AA6OR,6CAAuB,SAAS+D,UAAT,CAAoB/D,KAApB,EAA2B;AAChD,+BAAOD,YAAY,CAACc,QAAb,CAAsBoC,iBAAtB,CACLjD,KADK,EAEL,eAFK,EAGL,EAHK,EAIL,EAJK,EAKL,IALK,EAML,GANK,EAOL,EAPK,EAQL,EARK,EASL,GATK,CAAP;AAWD,uBAzPO;AA0PR,yCAAmB,SAASgE,MAAT,CAAgBhE,KAAhB,EAAuB;AACxC,+BAAOD,YAAY,CAACc,QAAb,CAAsBoC,iBAAtB,CAAwCjD,KAAxC,EAA+C,UAA/C,EAA2D,EAA3D,EAA+D,EAA/D,EAAmE,GAAnE,CAAP;AACD,uBA5PO;AA6PR,gDAA0B,SAASiE,MAAT,CAAgBjE,KAAhB,EAAuB;AAC/C,+BAAOD,YAAY,CAACc,QAAb,CAAsBoC,iBAAtB,CACLjD,KADK,EAEL,UAFK,EAGL,EAHK,EAIL,EAJK,EAKL,GALK,EAML,GANK,EAOL,EAPK,EAQL,EARK,EASL,GATK,CAAP;AAWD,uBAzQO;AA0QR,8CAAwB,SAASkE,MAAT,CAAgBlE,KAAhB,EAAuB;AAC7C,+BAAOD,YAAY,CAACc,QAAb,CAAsBoC,iBAAtB,CACLjD,KADK,EAEL,SAFK,EAGL,IAHK,EAIL,EAJK,EAKL,SALK,EAML,GANK,EAOL,EAPK,EAQL,EARK,EASL,GATK,CAAP;AAWD,uBAtRO;AAuRR,qCAAe,SAASmE,EAAT,CAAYnE,KAAZ,EAAmB;AAChC,+BAAOD,YAAY,CAACc,QAAb,CAAsBoC,iBAAtB,CAAwCjD,KAAxC,EAA+C,OAA/C,EAAwD,EAAxD,EAA4D,EAA5D,EAAgE,GAAhE,CAAP;AACD,uBAzRO;AA0RRoE,sBAAAA,UAAU,EAAE,wCA1RJ;AA2RR,sCAAgB,4CA3RR;AA4RR;AACA,uCAAiB,SA7RT;AA8RR,8BAAQ,gEA9RA;AA+RRC,sBAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBrE,KAAhB,EAAuB;AAC7B,4BAAI4C,KAAJ,CAD6B,CAClB;;AAEXA,wBAAAA,KAAK,GAAG5C,KAAK,CAAC4C,KAAN,CACN,0LADM,CAAR;;AAIA,4BAAIA,KAAJ,EAAW;AACT,iCAAO;AACL9B,4BAAAA,MAAM,EAAE8B,KAAK,CAAC,CAAD,CADR;AAELnB,4BAAAA,SAAS,EAAEzB,KAAK,CAAC8C,MAAN,CAAaF,KAAK,CAAC,CAAD,CAAL,CAASpD,MAAtB;AAFN,2BAAP;AAID;;AAED,4BAAIrC,CAAC,GAAG4C,YAAY,CAACc,QAAb,CAAsBoC,iBAAtB,CAAwCjD,KAAxC,EAA+C,EAA/C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,EAA7D,CAAR;;AAEA,4BAAI7C,CAAJ,EAAO;AACL;AACAyF,0BAAAA,KAAK,GAAGzF,CAAC,CAAC2D,MAAF,CAAS8B,KAAT,CACN,oFADM,CAAR;;AAIA,8BAAIA,KAAJ,EAAW;AACT,mCAAO;AACL9B,8BAAAA,MAAM,EAAE8B,KAAK,CAAC,CAAD,CADR;AAELnB,8BAAAA,SAAS,EAAEzB,KAAK,CAAC8C,MAAN,CAAaF,KAAK,CAAC,CAAD,CAAL,CAASpD,MAAtB;AAFN,6BAAP;AAID;AACF;;AAED,+BAAO,IAAP;AACD,uBA9TO;AA+TR8E,sBAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBtE,KAAjB,EAAwB;AAC/B,+BAAO,KAAK,QAAL,EAAeA,KAAf,CAAP;AACD,uBAjUO;AAkUR,uCAAiB,6BAlUT;AAmURuE,sBAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBvE,KAAlB,EAAyB;AACjC,4BAAIA,KAAK,CAAC4C,KAAN,CAAY,cAAZ,CAAJ,EAAiC;AAC/B,iCAAO,IAAP;AACD,yBAHgC,CAG/B;;;AAEF,4BAAIA,KAAK,GAAG5C,KAAK,CAAC4C,KAAN,CACV,qGADU,CAAZ;;AAIA,4BAAIA,KAAJ,EAAW;AACT,iCAAO;AACL9B,4BAAAA,MAAM,EAAE8B,KAAK,CAAC,CAAD,CADR;AAELnB,4BAAAA,SAAS,EAAEzB,KAAK,CAAC8C,MAAN,CAAaF,KAAK,CAAC,CAAD,CAAL,CAASpD,MAAtB;AAFN,2BAAP;AAID;;AAED,+BAAO,IAAP;AACD,uBApVO;AAqVRgF,sBAAAA,eAAe,EAAE,0CArVT;AAsVR,2BAAK,aAtVG;AAuVR,4BAAM,eAvVE;AAwVR,2BAAK;AAxVG,qBALF;AA+VRvB,oBAAAA,iBAAiB,EAAE,SAASA,iBAAT,CACjBjD,KADiB,EAEjByE,OAFiB,EAGjBC,OAHiB,EAIjBC,OAJiB,EAKjBC,OALiB,EAMjBC,QANiB,EAOjBC,QAPiB,EAQjBC,QARiB,EASjBC,QATiB,EAUjBC,OAViB,EAWjB;AACA;AACA,0BAAIC,MAAM,GAAG,SAASA,MAAT,CAAgBlF,KAAhB,EAAuBe,OAAvB,EAAgC;AAC3C,4BAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,8BAAIf,KAAK,CAACmF,OAAN,CAAcpE,OAAd,MAA2B,CAA/B,EAAkC;AAChC,mCAAO,IAAP;AACD;;AAED,iCAAOA,OAAP;AACD,yBAND,MAMO;AACL,8BAAI6B,KAAK,GAAG5C,KAAK,CAAC4C,KAAN,CAAY7B,OAAZ,CAAZ;;AAEA,8BAAI,CAAC6B,KAAL,EAAY;AACV,mCAAO,IAAP;AACD;;AAED,iCAAOA,KAAK,CAAC,CAAD,CAAZ;AACD;AACF,uBAhBD;AAiBA;;;AAEA,0BAAIwC,kBAAkB,GAAG,SAASA,kBAAT,CAA4BpF,KAA5B,EAAmC5C,CAAnC,EAAsCiI,QAAtC,EAAgD;AACvE,4BAAIC,MAAM,GAAG,CAAb;;AAEA,+BAAOlI,CAAC,GAAG4C,KAAK,CAACR,MAAjB,EAAyB;AACvB,8BAAIrC,CAAC,GAAG6C,KAAK,CAACuF,MAAN,CAAanI,CAAb,CAAR;;AAEA,8BAAIwF,KAAK,GAAGsC,MAAM,CAAClF,KAAK,CAAC8C,MAAN,CAAa1F,CAAb,CAAD,EAAkBiI,QAAlB,CAAlB;;AAEA,8BAAIzC,KAAK,KAAK,IAAV,IAAkB0C,MAAM,KAAK,CAAjC,EAAoC;AAClC,mCAAO;AACLE,8BAAAA,aAAa,EAAEpI,CADV;AAELqI,8BAAAA,WAAW,EAAErI,CAAC,GAAGwF,KAAK,CAACpD;AAFlB,6BAAP;AAID,2BALD,MAKO,IAAIrC,CAAC,KAAK,GAAV,EAAe;AACpBmI,4BAAAA,MAAM;AACP,2BAFM,MAEA,IAAInI,CAAC,KAAK,GAAV,EAAe;AACpB,gCAAImI,MAAM,KAAK,CAAf,EAAkB;AAChB,oCAAM,CAAC,uBAAD,EAA0B,yCAA1B,CAAN;AACD,6BAFD,MAEO;AACLA,8BAAAA,MAAM;AACP;AACF;;AAEDlI,0BAAAA,CAAC;AACF;;AAED,4BAAIkI,MAAM,GAAG,CAAb,EAAgB;AACd,iCAAO,IAAP;AACD;;AAED,+BAAO,IAAP;AACD,uBA/BD;;AAiCA,0BAAI1C,KAAK,GAAGsC,MAAM,CAAClF,KAAD,EAAQyE,OAAR,CAAlB;;AAEA,0BAAI7B,KAAK,KAAK,IAAd,EAAoB;AAClB,+BAAO,IAAP;AACD;;AAED5C,sBAAAA,KAAK,GAAGA,KAAK,CAAC8C,MAAN,CAAaF,KAAK,CAACpD,MAAnB,CAAR;AACAoD,sBAAAA,KAAK,GAAGsC,MAAM,CAAClF,KAAD,EAAQ0E,OAAR,CAAd;;AAEA,0BAAI9B,KAAK,KAAK,IAAd,EAAoB;AAClB,+BAAO,IAAP;AACD;;AAED,0BAAI8C,CAAC,GAAGN,kBAAkB,CAACpF,KAAD,EAAQ4C,KAAK,CAACpD,MAAd,EAAsBmF,OAAO,IAAIC,OAAjC,CAA1B;;AAEA,0BAAIc,CAAC,KAAK,IAAV,EAAgB;AACd,+BAAO,IAAP;AACD;;AAED,0BAAIC,MAAM,GAAG3F,KAAK,CAAC4F,SAAN,CAAgB,CAAhB,EAAmBjB,OAAO,GAAGe,CAAC,CAACD,WAAL,GAAmBC,CAAC,CAACF,aAA/C,CAAb;;AAEA,0BAAI,EAAEX,QAAQ,IAAIC,QAAd,CAAJ,EAA6B;AAC3B,+BAAO;AACLhE,0BAAAA,MAAM,EAAE6E,MADH;AAELlE,0BAAAA,SAAS,EAAEzB,KAAK,CAAC8C,MAAN,CAAa4C,CAAC,CAACD,WAAf;AAFN,yBAAP;AAID,uBALD,MAKO;AACL,4BAAII,MAAM,GAAG,KAAK5C,iBAAL,CACXjD,KAAK,CAAC8C,MAAN,CAAa4C,CAAC,CAACD,WAAf,CADW,EAEXZ,QAFW,EAGXC,QAHW,EAIXC,QAJW,EAKXC,QALW,CAAb;;AAQA,4BAAIa,MAAM,KAAK,IAAf,EAAqB;AACnB,iCAAO,IAAP;AACD;AACD;;;AAEA,4BAAIC,QAAQ,GAAG,CAACH,MAAD,EAASE,MAAM,CAAC/E,MAAhB,CAAf;AACA,+BAAO;AACLA,0BAAAA,MAAM,EAAEmE,OAAO,GAAGa,QAAQ,CAACC,IAAT,CAAc,EAAd,CAAH,GAAuBD,QADjC;AAELrE,0BAAAA,SAAS,EAAEoE,MAAM,CAACpE;AAFb,yBAAP;AAID;AACF,qBA9cO;AA+cR;AACA;AACA;AACA;AACA;AACAX,oBAAAA,MAAM,EAAE,SAASA,MAAT,CAAgB6B,CAAhB,EAAmB3C,KAAnB,EAA0B;AAChC,0BAAIe,OAAO,GAAGhB,YAAY,CAACc,QAAb,CAAsBA,QAAtB,CAA+B8B,CAA/B,CAAd;;AAEA,0BAAI5B,OAAO,KAAKnD,SAAhB,EAA2B;AACzB,8BAAM,CAAC,YAAD,EAAe,mCAAmC+E,CAAnC,GAAuC,GAAtD,CAAN,CADyB,CACyC;AACnE,uBAFD,MAEO,IAAI,OAAO5B,OAAP,KAAmB,UAAvB,EAAmC;AACxC,+BAAOhB,YAAY,CAACc,QAAb,CAAsBA,QAAtB,CAA+B8B,CAA/B,EAAkC3C,KAAlC,CAAP,CADwC,CACS;AAClD,uBAFM,MAEA;AACL;AACA,4BAAI4C,KAAK,GAAG5C,KAAK,CAAC4C,KAAN,CAAY7B,OAAZ,CAAZ;;AAEA,4BAAI6B,KAAJ,EAAW;AACT,8BAAIoD,EAAJ;;AAEA,8BAAIpD,KAAK,CAAC,CAAD,CAAT,EAAc;AACZoD,4BAAAA,EAAE,GAAG,CAACpD,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,CAAL;AACD,2BAFD,MAEO,IAAIA,KAAK,CAAC,CAAD,CAAT,EAAc;AACnBoD,4BAAAA,EAAE,GAAGpD,KAAK,CAAC,CAAD,CAAV;AACD,2BAFM,MAEA;AACLoD,4BAAAA,EAAE,GAAGpD,KAAK,CAAC,CAAD,CAAV;AACD;;AAED,iCAAO;AACL9B,4BAAAA,MAAM,EAAEkF,EADH;AAELvE,4BAAAA,SAAS,EAAEzB,KAAK,CAAC8C,MAAN,CAAaF,KAAK,CAAC,CAAD,CAAL,CAASpD,MAAtB;AAFN,2BAAP;AAID;;AAED,+BAAO,IAAP;AACD;AACF;AAlfO,mBA7JO;AAipBjB;AACA;AACA;AACA2B,kBAAAA,OAAO,EAAE;AACP,0BAAM,SAAShE,CAAT,CAAW+C,MAAX,EAAmByC,CAAnB,EAAsB;AAC1BzC,sBAAAA,MAAM,CAAC/C,CAAP,GAAW,CAAC+C,MAAM,CAAC/C,CAAP,IAAY,EAAb,IAAmBwF,CAA9B;AACD,qBAHM;AAIP,0BAAM,SAAShB,CAAT,CAAWzB,MAAX,EAAmByC,CAAnB,EAAsB;AAC1BzC,sBAAAA,MAAM,CAACyB,CAAP,GAAW,CAACzB,MAAM,CAACyB,CAAP,IAAY,EAAb,IAAmBgB,CAA9B;AACD,qBANM;AAOP,0BAAM,SAASsD,CAAT,CAAW/F,MAAX,EAAmByC,CAAnB,EAAsB;AAC1BzC,sBAAAA,MAAM,CAAC+F,CAAP,GAAW,CAAC/F,MAAM,CAAC+F,CAAP,IAAY,EAAb,IAAmBtD,CAA9B;AACD,qBATM;AAUP,0BAAM,SAASxE,CAAT,CAAW+B,MAAX,EAAmByC,CAAnB,EAAsB;AAC1BzC,sBAAAA,MAAM,CAAC/B,CAAP,GAAW,CAAC+B,MAAM,CAAC/B,CAAP,IAAY,EAAb,IAAmBwE,CAA9B;AACD,qBAZM;AAaP,0BAAM,SAASuD,CAAT,CAAWhG,MAAX,EAAmByC,CAAnB,EAAsB;AAC1BzC,sBAAAA,MAAM,CAACgG,CAAP,GAAW,CAAChG,MAAM,CAACgG,CAAP,IAAY,EAAb,IAAmBvD,CAA9B;AACD,qBAfM;AAgBP,0BAAM,SAAS3E,CAAT,CAAWkC,MAAX,EAAmByC,CAAnB,EAAsB;AAC1BzC,sBAAAA,MAAM,CAAClC,CAAP,GAAW,CAACkC,MAAM,CAAClC,CAAP,IAAY,EAAb,IAAmB2E,CAA9B;AACD,qBAlBM;AAmBP,2BAAO,SAASwD,EAAT,CAAYjG,MAAZ,EAAoByC,CAApB,EAAuB;AAC5BzC,sBAAAA,MAAM,CAACiG,EAAP,GAAY,CAACjG,MAAM,CAACiG,EAAP,IAAa,EAAd,IAAoBxD,CAAhC;AACD,qBArBM;AAsBP,6BAAS,SAAShD,IAAT,CAAcO,MAAd,EAAsByC,CAAtB,EAAyB;AAChCzC,sBAAAA,MAAM,CAACkG,KAAP,GAAe,CAAClG,MAAM,CAACkG,KAAP,IAAgB,EAAjB,IAAuBzD,CAAtC;AACD,qBAxBM;AAyBP0D,oBAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBnG,MAAhB,EAAwByC,CAAxB,EAA2BxF,CAA3B,EAA8B;AACpC,6BAAO;AACLiE,wBAAAA,KAAK,EAAEjE;AADF,uBAAP;AAGD,qBA7BM;AA8BP,iCAAa,SAASmJ,QAAT,CAAkBpG,MAAlB,EAA0ByC,CAA1B,EAA6BxF,CAA7B,EAAgC;AAC3C,6BAAO;AACLiE,wBAAAA,KAAK,EAAEjE,CADF;AAELoJ,wBAAAA,EAAE,EAAE5D;AAFC,uBAAP;AAID,qBAnCM;AAoCP,oCAAgB,SAAS6D,UAAT,CAAoBtG,MAApB,EAA4ByC,CAA5B,EAA+BxF,CAA/B,EAAkC;AAChD,6BAAO;AACLiE,wBAAAA,KAAK,EAAEjE,CADF;AAELoJ,wBAAAA,EAAE,EAAE5D,CAAC,CAAC,CAAD,CAFA;AAGL8D,wBAAAA,EAAE,EAAE9D,CAAC,CAAC,CAAD;AAHA,uBAAP;AAKD,qBA1CM;AA2CP+D,oBAAAA,IAAI,EAAE,SAASA,IAAT,CAAcxG,MAAd,EAAsByC,CAAtB,EAAyB;AAC7B,6BAAOA,CAAP;AACD,qBA7CM;AA8CPwD,oBAAAA,EAAE,EAAE,SAASA,EAAT,CAAYjG,MAAZ,EAAoByC,CAApB,EAAuB;AACzB,6BAAO;AACLvB,wBAAAA,KAAK,EAAE,IADF;AAELmF,wBAAAA,EAAE,EAAE5D,CAAC,IAAI;AAFJ,uBAAP;AAID,qBAnDM;AAoDPhD,oBAAAA,IAAI,EAAE,SAASA,IAAT,CAAcO,MAAd,EAAsByC,CAAtB,EAAyB;AAC7B,6BAAO5C,YAAY,CAACD,EAAb,CAAgB6C,CAAhB,EAAmB,MAAnB,CAAP;AACD,qBAtDM;AAuDP,8BAAU,SAAShD,IAAT,CAAcO,MAAd,EAAsByC,CAAtB,EAAyB;AACjC,0BAAIgE,GAAG,GAAG,CAAC,GAAD,CAAV;AACA5G,sBAAAA,YAAY,CAACuB,WAAb,CAAyBqF,GAAzB,EAA8B5G,YAAY,CAACD,EAAb,CAAgB6C,CAAhB,EAAmB,MAAnB,CAA9B;AACAgE,sBAAAA,GAAG,CAAC5E,IAAJ,CAAS,GAAT;AACA,6BAAO4E,GAAP;AACD,qBA5DM;AA6DP,gCAAY,SAASC,OAAT,CAAiB1G,MAAjB,EAAyByC,CAAzB,EAA4B;AACtC,6BAAO5C,YAAY,CAACD,EAAb,CAAgB6C,CAAhB,EAAmB,UAAnB,CAAP;AACD,qBA/DM;AAgEP,sCAAkB,SAASkE,YAAT,CAAsB3G,MAAtB,EAA8ByC,CAA9B,EAAiC;AACjD,6BAAO5C,YAAY,CAACD,EAAb,CAAgB6C,CAAhB,EAAmB,gBAAnB,CAAP;AACD,qBAlEM;AAmEPa,oBAAAA,IAAI,EAAE,SAASA,IAAT,CAActD,MAAd,EAAsByC,CAAtB,EAAyBmE,CAAzB,EAA4B;AAChC,6BAAO;AACL1F,wBAAAA,KAAK,EAAE,MADF;AAEL2F,wBAAAA,KAAK,EAAED,CAAC,IAAInE;AAFP,uBAAP;AAID,qBAxEM;AAyEP,qCAAiB,SAASqE,YAAT,CAAsB9G,MAAtB,EAA8ByC,CAA9B,EAAiC;AAChD,6BAAO;AACLvB,wBAAAA,KAAK,EAAE,QADF;AAEL6F,wBAAAA,KAAK,EAAEtE,CAAC,CAAC,CAAD;AAFH,uBAAP;AAID,qBA9EM;AA+EPwB,oBAAAA,EAAE,EAAE,SAASA,EAAT,CAAYjE,MAAZ,EAAoByC,CAApB,EAAuB;AACzB,6BAAO5C,YAAY,CAACD,EAAb,CAAgB6C,CAAhB,CAAP;AACD,qBAjFM;AAkFP,2BAAO,SAASI,CAAT,CAAW7C,MAAX,EAAmByC,CAAnB,EAAsB;AAC3B;AACA,0BAAIgE,GAAG,GAAG,EAAV;;AAEA,0BAAIhE,CAAC,CAACC,KAAF,CAAQ,QAAR,CAAJ,EAAuB;AACrB+D,wBAAAA,GAAG,CAAC5E,IAAJ,CAASY,CAAC,CAACG,MAAF,CAAS,CAAT,EAAY,CAAZ,CAAT;AACAH,wBAAAA,CAAC,GAAGA,CAAC,CAACG,MAAF,CAAS,CAAT,CAAJ;AACD;;AAED,0BAAIjF,CAAC,GAAG8E,CAAC,CAACC,KAAF,CAAQ,wDAAR,CAAR;AACA/E,sBAAAA,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAD,CAAKsC,OAAL,CAAa,KAAb,EAAoB,EAApB,CAAP;AACAwG,sBAAAA,GAAG,CAAC5E,IAAJ,CAAS;AACPX,wBAAAA,KAAK,EAAE,MADA;AAEPmF,wBAAAA,EAAE,EAAE1I,CAAC,CAAC,CAAD,CAFE;AAGP4I,wBAAAA,EAAE,EAAE5I,CAAC,CAAC,CAAD;AAHE,uBAAT;;AAMA,0BAAIA,CAAC,CAAC,CAAD,CAAL,EAAU;AACRA,wBAAAA,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAD,CAAKsC,OAAL,CAAa,KAAb,EAAoB,EAApB,CAAP;AACAwG,wBAAAA,GAAG,CAAC5E,IAAJ,CAAS;AACPX,0BAAAA,KAAK,EAAE,UADA;AAEPmF,0BAAAA,EAAE,EAAE1I,CAAC,CAAC,CAAD;AAFE,yBAAT;AAID;;AAED,6BAAO8I,GAAP;AACD,qBA5GM;AA6GP,2BAAO,SAAS5D,CAAT,CAAW7C,MAAX,EAAmByC,CAAnB,EAAsB;AAC3B,6BAAO5C,YAAY,CAACD,EAAb,CAAgB6C,CAAhB,EAAmB,KAAnB,CAAP;AACD;AA/GM,mBAppBQ;AAqwBjB;AACA;AACA;AACA;AACA;AACAuE,kBAAAA,iBAAiB,EAAE,SAASA,iBAAT,CAA2B/I,CAA3B,EAA8B;AAC/C,wBAAI4C,OAAJ,EAAad,KAAb;AACA;;AAEA,wBAAIkH,UAAJ;AACA,wBAAI/J,CAAJ,CAL+C,CAKxC;AACP;AACA;;AAEA;;AAEA,wBAAIsD,WAAW,GAAG,EAAlB;;AAEA,yBAAKK,OAAL,IAAgB5C,CAAhB,EAAmB;AACjB,2BAAK8B,KAAL,IAAc9B,CAAC,CAAC4C,OAAD,CAAf,EAA0B;AACxBoG,wBAAAA,UAAU,GAAGlH,KAAK,CAACmH,KAAN,CAAY,GAAZ,CAAb;AACAjJ,wBAAAA,CAAC,CAAC4C,OAAD,CAAD,CAAWd,KAAX,EAAkBkH,UAAlB,GAA+BA,UAA/B;;AAEA,6BAAK/J,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG+J,UAAU,CAAC3H,MAA3B,EAAmCpC,CAAC,EAApC,EAAwC;AACtCsD,0BAAAA,WAAW,CAACyG,UAAU,CAAC/J,CAAD,CAAX,CAAX,GAA6B,EAA7B;AACD;AACF;AACF,qBAtB8C,CAsB7C;AACF;AACA;;;AAEA,yBAAK2D,OAAL,IAAgB5C,CAAhB,EAAmB;AACjB,2BAAK8B,KAAL,IAAc9B,CAAC,CAAC4C,OAAD,CAAf,EAA0B;AACxBoG,wBAAAA,UAAU,GAAGhJ,CAAC,CAAC4C,OAAD,CAAD,CAAWd,KAAX,EAAkBkH,UAAlB,IAAgC,EAA7C;;AAEA,6BAAK/J,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG+J,UAAU,CAAC3H,MAA3B,EAAmCpC,CAAC,EAApC,EAAwC;AACtC;AACA;AACA;AACA;;AAEA;AACA,8BAAI6I,CAAC,GAAG9H,CAAC,CAAC4C,OAAD,CAAD,CAAWd,KAAX,CAAR;;AAEA,8BAAIgG,CAAC,CAAC/E,OAAN,EAAe;AACb+E,4BAAAA,CAAC,CAAC/E,OAAF,GAAY,GAAGmG,MAAH,CAAUpB,CAAC,CAAC/E,OAAZ,CAAZ;;AAEA,iCAAK,IAAI4F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,CAAC,CAAC/E,OAAF,CAAU1B,MAA9B,EAAsCsH,CAAC,EAAvC,EAA2C;AACzC,kCAAI,OAAOb,CAAC,CAAC/E,OAAF,CAAU4F,CAAV,CAAP,KAAwB,QAA5B,EAAsC;AACpCb,gCAAAA,CAAC,CAAC/E,OAAF,CAAU4F,CAAV,IAAe;AACb1F,kCAAAA,KAAK,EAAE6E,CAAC,CAAC/E,OAAF,CAAU4F,CAAV;AADM,iCAAf;AAGD;AACF;AACF,2BAVD,MAUO;AACLb,4BAAAA,CAAC,CAAC/E,OAAF,GAAY,EAAZ;AACD,2BArBqC,CAqBpC;AACF;AACA;;;AAEA,8BAAIoG,YAAY,GAAGvG,OAAO,CAACqG,KAAR,CAAc,GAAd,CAAnB;;AAEA,+BAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,YAAY,CAAC9H,MAAjC,EAAyC+H,CAAC,EAA1C,EAA8C;AAC5C,gCAAIJ,UAAU,CAAC/J,CAAD,CAAV,KAAkB,GAAtB,EAA2B;AACzB;AACA,mCAAK,IAAIqD,CAAT,IAAcC,WAAd,EAA2B;AACzBA,gCAAAA,WAAW,CAACD,CAAD,CAAX,CAAesB,IAAf,CAAoB;AAClBhB,kCAAAA,OAAO,EAAEuG,YAAY,CAACC,CAAD,CADH;AAElBvG,kCAAAA,IAAI,EAAEiF;AAFY,iCAApB;AAID;AACF,6BARD,MAQO;AACLvF,8BAAAA,WAAW,CAACyG,UAAU,CAAC/J,CAAD,CAAX,CAAX,CAA2B2E,IAA3B,CAAgC;AAC9BhB,gCAAAA,OAAO,EAAEuG,YAAY,CAACC,CAAD,CADS;AAE9BvG,gCAAAA,IAAI,EAAEiF;AAFwB,+BAAhC;AAID;AACF;AACF;AACF;AACF;;AAED,2BAAOvF,WAAP;AACD,mBAx1BgB;AAy1BjBF,kBAAAA,aAAa,EAAE;AAz1BE,iBAAnB,CArGY,CA+7BT;AACH;AACA;;AAEAT,gBAAAA,YAAY,CAACS,aAAb,GAA6B;AAC3B;AACA;AACA;AACA;AACA2D,kBAAAA,EAAE,EAAE;AACF;AACAzD,oBAAAA,WAAW,EAAEX,YAAY,CAACmH,iBAAb,CAA+B;AAC1ClF,sBAAAA,KAAK,EAAE;AACL,6BAAK;AACHd,0BAAAA,OAAO,EAAE;AADN;AADA,uBADmC;AAM1Ce,sBAAAA,IAAI,EAAE;AACJ,iCAAS;AACPf,0BAAAA,OAAO,EAAE,sBADF;AAEPM,0BAAAA,OAAO,EAAE,IAFF;AAGPE,0BAAAA,UAAU,EAAE;AAHL;AADL,uBANoC;AAa1C0C,sBAAAA,UAAU,EAAE;AACV,2BAAG;AACDlD,0BAAAA,OAAO,EAAE;AADR;AADO,uBAb8B;AAkB1CuC,sBAAAA,GAAG,EAAE;AACH+D,wBAAAA,CAAC,EAAE;AACDtG,0BAAAA,OAAO,EAAE,MADR;AAEDK,0BAAAA,SAAS,EAAE;AAFV,yBADA;AAKHkG,wBAAAA,EAAE,EAAE;AACFvG,0BAAAA,OAAO,EAAE,MADP;AAEFK,0BAAAA,SAAS,EAAE;AAFT;AALD,uBAlBqC;AA4B1CgC,sBAAAA,WAAW,EAAE;AACX,oCAAY;AACVrC,0BAAAA,OAAO,EAAE,CAAC,UAAD,EAAa,QAAb,EAAuB,UAAvB,CADC;AAEVK,0BAAAA,SAAS,EAAE;AAFD;AADD,uBA5B6B;AAkC1CiD,sBAAAA,eAAe,EAAE;AACf,iCAAS;AACPtD,0BAAAA,OAAO,EAAE,CAAC,IAAD,EAAO,QAAP,CADF;AAEPK,0BAAAA,SAAS,EAAE;AAFJ;AADM,uBAlCyB;AAwC1CmC,sBAAAA,OAAO,EAAE;AACP,mCAAW;AACTxC,0BAAAA,OAAO,EAAE,IADA;AAETK,0BAAAA,SAAS,EAAE;AAFF;AADJ,uBAxCiC;AA8C1C,4BAAM;AACJ,mCAAW;AACTL,0BAAAA,OAAO,EAAE,IADA;AAETK,0BAAAA,SAAS,EAAE;AAFF,yBADP;AAKJ,gCAAQ;AACNL,0BAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,IAAX,CADH;AAENK,0BAAAA,SAAS,EAAE;AAFL,yBALJ;AASJ,6BAAK;AACHL,0BAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,IAAX,CADN;AAEHK,0BAAAA,SAAS,EAAE;AAFR;AATD,uBA9CoC;AA4D1C,2BAAK;AACHpD,wBAAAA,CAAC,EAAE;AACD+C,0BAAAA,OAAO,EAAE,OADR;AAEDK,0BAAAA,SAAS,EAAE;AAFV,yBADA;AAKH,+BAAO;AACLL,0BAAAA,OAAO,EAAE,IADJ;AAELK,0BAAAA,SAAS,EAAE;AAFN,yBALJ;AASH2E,wBAAAA,CAAC,EAAE;AACDhF,0BAAAA,OAAO,EAAE,IADR;AAEDK,0BAAAA,SAAS,EAAE;AAFV,yBATA;AAaH,iCAAS;AACPL,0BAAAA,OAAO,EAAE,IADF;AAEPK,0BAAAA,SAAS,EAAE;AAFJ,yBAbN;AAiBHmG,wBAAAA,EAAE,EAAE;AACFxG,0BAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,IAAX,CADP;AAEFK,0BAAAA,SAAS,EAAE;AAFT,yBAjBD;AAqBH,2BAAG;AACDL,0BAAAA,OAAO,EAAE,CAAC,UAAD,EAAa,QAAb,EAAuB,UAAvB,CADR;AAEDK,0BAAAA,SAAS,EAAE;AAFV;AArBA,uBA5DqC;AAsF1C8C,sBAAAA,MAAM,EAAE;AACN,+BAAO;AACLnD,0BAAAA,OAAO,EAAE,IADJ;AAELK,0BAAAA,SAAS,EAAE;AAFN;AADD,uBAtFkC;AA4F1C,qCAAe;AACb,sCAAc;AACZL,0BAAAA,OAAO,EAAE,CACP,UADO,EAEP,QAFO,EAGP;AACEE,4BAAAA,KAAK,EAAE,UADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BAHO,CADG;AASZE,0BAAAA,SAAS,EAAE;AATC;AADD,uBA5F2B;AAyG1C+B,sBAAAA,QAAQ,EAAE;AACR,sCAAc;AACZpC,0BAAAA,OAAO,EAAE,CAAC,UAAD,EAAa,QAAb,EAAuB,UAAvB,CADG;AAEZK,0BAAAA,SAAS,EAAE;AAFC;AADN,uBAzGgC;AA+G1C,4BAAM;AACJ,+BAAO;AACLL,0BAAAA,OAAO,EAAE,CAAC,gBAAD,EAAmB,QAAnB,CADJ;AAELK,0BAAAA,SAAS,EAAE;AAFN,yBADH;AAKJvD,wBAAAA,CAAC,EAAE;AACDkD,0BAAAA,OAAO,EAAE,IADR;AAEDK,0BAAAA,SAAS,EAAE;AAFV,yBALC;AASJoG,wBAAAA,CAAC,EAAE;AACDzG,0BAAAA,OAAO,EAAE,CACP,QADO,EAEP;AACEE,4BAAAA,KAAK,EAAE,MADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BAFO,CADR;AAQDE,0BAAAA,SAAS,EAAE;AARV,yBATC;AAmBJ2E,wBAAAA,CAAC,EAAE;AACDhF,0BAAAA,OAAO,EAAE,IADR;AAEDK,0BAAAA,SAAS,EAAE;AAFV,yBAnBC;AAuBJqG,wBAAAA,EAAE,EAAE;AACF1G,0BAAAA,OAAO,EAAE,IADP;AAEFK,0BAAAA,SAAS,EAAE;AAFT,yBAvBA;AA2BJ,iCAAS;AACPL,0BAAAA,OAAO,EAAE,CACP,QADO,EAEP;AACEE,4BAAAA,KAAK,EAAE,MADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BAFO,CADF;AAQPE,0BAAAA,SAAS,EAAE;AARJ;AA3BL,uBA/GoC;AAqJ1C,4BAAM;AACJ,+BAAO;AACLL,0BAAAA,OAAO,EAAE,CACP,QADO,EAEP;AACEE,4BAAAA,KAAK,EAAE,QADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BAFO,CADJ;AAQLE,0BAAAA,SAAS,EAAE;AARN;AADH,uBArJoC;AAiK1C,2CAAqB;AACnBpD,wBAAAA,CAAC,EAAE;AACD+C,0BAAAA,OAAO,EAAE,CACP,QADO,EAEP;AACEE,4BAAAA,KAAK,EAAE,QADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BAFO,CADR;AAQDE,0BAAAA,SAAS,EAAE;AARV,yBADgB;AAWnBvD,wBAAAA,CAAC,EAAE;AACDkD,0BAAAA,OAAO,EAAE,CACP,QADO,EAEP;AACEE,4BAAAA,KAAK,EAAE,QADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BAFO,CADR;AAQDE,0BAAAA,SAAS,EAAE;AARV;AAXgB,uBAjKqB;AAuL1C,2BAAK;AACH,iCAAS;AACPL,0BAAAA,OAAO,EAAE,CACP;AACEE,4BAAAA,KAAK,EAAE,QADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BADO,EAKP,qBALO,EAMP;AACED,4BAAAA,KAAK,EAAE,MADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BANO,CADF;AAYPE,0BAAAA,SAAS,EAAE;AAZJ,yBADN;AAeH,2BAAG;AACDL,0BAAAA,OAAO,EAAE;AACPE,4BAAAA,KAAK,EAAE,MADA;AAEPC,4BAAAA,MAAM,EAAE;AAFD;AADR,yBAfA;AAqBHlE,wBAAAA,CAAC,EAAE;AACD+D,0BAAAA,OAAO,EAAE,CACP,QADO,EAEP;AACEE,4BAAAA,KAAK,EAAE,QADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BAFO,CADR;AAQDE,0BAAAA,SAAS,EAAE;AARV,yBArBA;AA+BHsG,wBAAAA,EAAE,EAAE;AACF3G,0BAAAA,OAAO,EAAE,CACP;AACEE,4BAAAA,KAAK,EAAE,QADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BADO,EAKP;AACED,4BAAAA,KAAK,EAAE,MADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BALO,CADP;AAWFE,0BAAAA,SAAS,EAAE;AAXT,yBA/BD;AA4CHI,wBAAAA,CAAC,EAAE;AACDT,0BAAAA,OAAO,EAAE;AADR,yBA5CA;AA+CH/C,wBAAAA,CAAC,EAAE;AACD+C,0BAAAA,OAAO,EAAE;AACPE,4BAAAA,KAAK,EAAE,aADA;AAEPC,4BAAAA,MAAM,EAAE;AAFD,2BADR;AAKDE,0BAAAA,SAAS,EAAE;AALV,yBA/CA;AAsDH2E,wBAAAA,CAAC,EAAE;AACDhF,0BAAAA,OAAO,EAAE;AACPE,4BAAAA,KAAK,EAAE,aADA;AAEPC,4BAAAA,MAAM,EAAE;AAFD,2BADR;AAKDE,0BAAAA,SAAS,EAAE;AALV,yBAtDA;AA6DH,mCAAW;AACTL,0BAAAA,OAAO,EAAE;AACPE,4BAAAA,KAAK,EAAE,aADA;AAEPC,4BAAAA,MAAM,EAAE;AAFD,2BADA;AAKTE,0BAAAA,SAAS,EAAE;AALF,yBA7DR;AAoEH,kCAAU;AACRL,0BAAAA,OAAO,EAAE,CACP,QADO,EAEP;AACEE,4BAAAA,KAAK,EAAE,MADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BAFO,CADD;AAQRE,0BAAAA,SAAS,EAAE;AARH;AApEP,uBAvLqC;AAsQ1C+C,sBAAAA,OAAO,EAAE;AACP,+BAAO;AACLpD,0BAAAA,OAAO,EAAE,IADJ;AAELK,0BAAAA,SAAS,EAAE;AAFN;AADA,uBAtQiC;AA4Q1CiB,sBAAAA,OAAO,EAAE;AACP,iDAAyB;AACvBtB,0BAAAA,OAAO,EAAE,IADc;AAEvBK,0BAAAA,SAAS,EAAE;AAFY,yBADlB;AAKP,gCAAQ;AACNL,0BAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,IAAX,CADH;AAENK,0BAAAA,SAAS,EAAE;AAFL,yBALD;AASP,qCAAa;AACXL,0BAAAA,OAAO,EAAE,WADE;AAEXK,0BAAAA,SAAS,EAAE;AAFA;AATN,uBA5QiC;AA0R1CkB,sBAAAA,MAAM,EAAE;AACNtE,wBAAAA,CAAC,EAAE;AACD+C,0BAAAA,OAAO,EAAE,IADR;AAEDK,0BAAAA,SAAS,EAAE;AAFV,yBADG;AAKN,+BAAO;AACLL,0BAAAA,OAAO,EAAE,IADJ;AAELK,0BAAAA,SAAS,EAAE;AAFN,yBALD;AASN2E,wBAAAA,CAAC,EAAE;AACDhF,0BAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,IAAX,CADR;AAEDK,0BAAAA,SAAS,EAAE;AAFV,yBATG;AAaNpE,wBAAAA,CAAC,EAAE;AACD+D,0BAAAA,OAAO,EAAE,IADR;AAEDK,0BAAAA,SAAS,EAAE;AAFV;AAbG,uBA1RkC;AA4S1C,iCAAW;AACT,kCAAU;AADD,uBA5S+B;AA+S1CY,sBAAAA,KAAK,EAAE;AACLhF,wBAAAA,CAAC,EAAE;AACDoE,0BAAAA,SAAS,EAAE;AADV,yBADE;AAIL,2BAAG;AACDL,0BAAAA,OAAO,EAAE;AADR,yBAJE;AAOL,+BAAO;AACLA,0BAAAA,OAAO,EAAE;AADJ,yBAPF;AAUL,2CAAmB;AACjBA,0BAAAA,OAAO,EAAE,QADQ;AAEjBK,0BAAAA,SAAS,EAAE;AAFM,yBAVd;AAcL,6BAAK;AACHL,0BAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,SAAX,CADN;AAEHK,0BAAAA,SAAS,EAAE;AAFR;AAdA,uBA/SmC;AAkU1C,0CAAoB;AAClB,+BAAO;AACLL,0BAAAA,OAAO,EAAE,CACP,QADO,EAEP;AACEE,4BAAAA,KAAK,EAAE,WADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BAFO;AADJ,yBADW;AAUlB,6BAAK;AACHH,0BAAAA,OAAO,EAAE,CACP,QADO,EAEP;AACEE,4BAAAA,KAAK,EAAE,WADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BAFO,CADN;AAQHE,0BAAAA,SAAS,EAAE;AARR;AAVa,uBAlUsB;AAuV1C,iCAAW;AACT,gCAAQ;AACNL,0BAAAA,OAAO,EAAE,KADH;AAENK,0BAAAA,SAAS,EAAE;AAFL,yBADC;AAKT,kCAAU;AACRL,0BAAAA,OAAO,EAAE,KADD;AAERK,0BAAAA,SAAS,EAAE;AAFH;AALD,uBAvV+B;AAiW1C,6BAAO;AACL,0CAAkB;AAChBL,0BAAAA,OAAO,EAAE,CACP,QADO,EAEP;AACEE,4BAAAA,KAAK,EAAE,MADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BAFO,CADO;AAQhBE,0BAAAA,SAAS,EAAE;AARK,yBADb;AAWL,6BAAK;AACHL,0BAAAA,OAAO,EAAE,CACP;AACEE,4BAAAA,KAAK,EAAE,QADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BADO,EAKP;AACED,4BAAAA,KAAK,EAAE,QADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BALO,CADN;AAWHE,0BAAAA,SAAS,EAAE;AAXR;AAXA,uBAjWmC;AA0X1C,+BAAS;AACP,6BAAK;AACHL,0BAAAA,OAAO,EAAE,CACP,QADO,EAEP;AACEE,4BAAAA,KAAK,EAAE,QADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BAFO,CADN;AAQHE,0BAAAA,SAAS,EAAE;AARR;AADE,uBA1XiC;AAsY1C,gDAA0B;AACxB,6BAAK;AACHL,0BAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,sBAAX,CADN;AAEHK,0BAAAA,SAAS,EAAE;AAFR;AADmB,uBAtYgB;AA4Y1C,6BAAO;AACL,kCAAU;AACRL,0BAAAA,OAAO,EAAE,CAAC,IAAD,EAAO,QAAP,EAAiB,oBAAjB,CADD;AAERK,0BAAAA,SAAS,EAAE;AAFH,yBADL;AAKL,mCAAW;AACTL,0BAAAA,OAAO,EAAE,CAAC,IAAD,EAAO,QAAP,EAAiB,oBAAjB,CADA;AAETK,0BAAAA,SAAS,EAAE;AAFF,yBALN;AASL,6BAAK;AACHL,0BAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,IAAX,EAAiB,QAAjB,EAA2B,oBAA3B,CADN;AAEHK,0BAAAA,SAAS,EAAE;AAFR;AATA,uBA5YmC;AA0Z1C,6BAAO;AACL,4CAAoB;AAClBL,0BAAAA,OAAO,EAAE,CAAC,IAAD,EAAO,oBAAP,CADS;AAElBK,0BAAAA,SAAS,EAAE;AAFO,yBADf;AAKL,+CAAuB;AACrBL,0BAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,IAAX,EAAiB,oBAAjB,CADY;AAErBK,0BAAAA,SAAS,EAAE;AAFU;AALlB,uBA1ZmC;AAoa1C,4BAAM;AACJ,6BAAK;AACHL,0BAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,OAAX,CADN;AAEHK,0BAAAA,SAAS,EAAE;AAFR;AADD,uBApaoC;AA0a1C,4BAAM;AACJ;AACA,6BAAK;AAFD,uBA1aoC;AA8a1C,2CAAqB;AACnB,oCAAY;AACVL,0BAAAA,OAAO,EAAE,IADC;AAEVK,0BAAAA,SAAS,EAAE;AAFD,yBADO;AAKnB0E,wBAAAA,CAAC,EAAE;AACD/E,0BAAAA,OAAO,EAAE,IADR;AAEDK,0BAAAA,SAAS,EAAE;AAFV,yBALgB;AASnB,+BAAO;AACLL,0BAAAA,OAAO,EAAE,OADJ;AAELK,0BAAAA,SAAS,EAAE;AAFN,yBATY;AAanB2E,wBAAAA,CAAC,EAAE;AACDhF,0BAAAA,OAAO,EAAE,IADR;AAEDK,0BAAAA,SAAS,EAAE;AAFV,yBAbgB;AAiBnB,wCAAgB;AACdL,0BAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,IAAX,CADK;AAEdK,0BAAAA,SAAS,EAAE;AAFG;AAjBG,uBA9aqB;AAoc1C,mDAA6B;AAC3B,oCAAY;AACVL,0BAAAA,OAAO,EAAE,IADC;AAEVK,0BAAAA,SAAS,EAAE;AAFD,yBADe;AAK3B0E,wBAAAA,CAAC,EAAE;AACD/E,0BAAAA,OAAO,EAAE,IADR;AAEDK,0BAAAA,SAAS,EAAE;AAFV,yBALwB;AAS3B,+BAAO;AACLL,0BAAAA,OAAO,EAAE,OADJ;AAELK,0BAAAA,SAAS,EAAE;AAFN,yBAToB;AAa3B2E,wBAAAA,CAAC,EAAE;AACDhF,0BAAAA,OAAO,EAAE,IADR;AAEDK,0BAAAA,SAAS,EAAE;AAFV,yBAbwB;AAiB3B,qCAAa;AACXL,0BAAAA,OAAO,EAAE;AADE,yBAjBc;AAoB3BwG,wBAAAA,EAAE,EAAE;AACFxG,0BAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,IAAX,CADP;AAEFK,0BAAAA,SAAS,EAAE;AAFT;AApBuB,uBApca;AA6d1C,oDAA8B;AAC5B,0CAAkB;AAChBL,0BAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,IAAX,CADO;AAEhBK,0BAAAA,SAAS,EAAE;AAFK;AADU,uBA7dY;AAme1C,mEAA6C;AAC3C,oCAAY;AACVL,0BAAAA,OAAO,EAAE,IADC;AAEVK,0BAAAA,SAAS,EAAE;AAFD,yBAD+B;AAK3CI,wBAAAA,CAAC,EAAE;AACDT,0BAAAA,OAAO,EAAE,IADR;AAEDK,0BAAAA,SAAS,EAAE;AAFV,yBALwC;AAS3C,+BAAO;AACLL,0BAAAA,OAAO,EAAE,IADJ;AAELK,0BAAAA,SAAS,EAAE;AAFN,yBAToC;AAa3C,+BAAO;AACLL,0BAAAA,OAAO,EAAE,IADJ;AAELK,0BAAAA,SAAS,EAAE;AAFN,yBAboC;AAiB3C,sCAAc;AACZL,0BAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,IAAX,CADG;AAEZK,0BAAAA,SAAS,EAAE;AAFC;AAjB6B,uBAneH;AAyf1C,6BAAO;AACL,yDAAiC;AAC/BL,0BAAAA,OAAO,EAAE,CACP;AACEE,4BAAAA,KAAK,EAAE,QADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BADO,EAKP,MALO,CADsB;AAQ/BE,0BAAAA,SAAS,EAAE;AARoB;AAD5B,uBAzfmC;AAqgB1C,2BAAK;AACH,0CAAkB;AAChBL,0BAAAA,OAAO,EAAE,CACP;AACEE,4BAAAA,KAAK,EAAE,QADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BADO,EAKP;AACED,4BAAAA,KAAK,EAAE,MADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BALO,CADO;AAWhBE,0BAAAA,SAAS,EAAE;AAXK;AADf,uBArgBqC;AAohB1C,4BAAM;AACJ,6BAAK;AACHL,0BAAAA,OAAO,EAAE;AACPE,4BAAAA,KAAK,EAAE,QADA;AAEPC,4BAAAA,MAAM,EAAE;AAFD,2BADN;AAKHE,0BAAAA,SAAS,EAAE;AALR;AADD,uBAphBoC;AA6hB1C,+BAAS;AACP,+CAAuB;AACrBL,0BAAAA,OAAO,EAAE,IADY;AAErBK,0BAAAA,SAAS,EAAE;AAFU,yBADhB;AAKP,4CAAoB;AAClBL,0BAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,IAAX,CADS;AAElBK,0BAAAA,SAAS,EAAE;AAFO;AALb,uBA7hBiC;AAuiB1C,+BAAS;AACPpE,wBAAAA,CAAC,EAAE;AACD+D,0BAAAA,OAAO,EAAE;AADR,yBADI;AAIP;AACA,+CAAuB;AACrBA,0BAAAA,OAAO,EAAE,IADY;AAErBK,0BAAAA,SAAS,EAAE;AAFU,yBALhB;AASP;AACA,gCAAQ;AACNL,0BAAAA,OAAO,EAAE;AADH,yBAVD;AAaP,0CAAkB;AAChBA,0BAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,IAAX,CADO;AAEhBK,0BAAAA,SAAS,EAAE;AAFK;AAbX,uBAviBiC;AAyjB1C,uCAAiB;AACf,6BAAK;AACHL,0BAAAA,OAAO,EAAE,CACP;AACEE,4BAAAA,KAAK,EAAE,QADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BADO,EAKP,MALO,CADN;AAQHE,0BAAAA,SAAS,EAAE;AARR;AADU,uBAzjByB;AAqkB1C,uCAAiB;AACf,6BAAK;AACHL,0BAAAA,OAAO,EAAE,CACP;AACEE,4BAAAA,KAAK,EAAE,QADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BADO,EAKP,aALO,CADN;AAQHE,0BAAAA,SAAS,EAAE;AARR;AADU,uBArkByB;AAilB1C,0CAAoB;AAClB,6BAAK;AACHL,0BAAAA,OAAO,EAAE,CACP;AACEE,4BAAAA,KAAK,EAAE,QADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BADO,EAKP,gBALO,CADN;AAQHE,0BAAAA,SAAS,EAAE;AARR;AADa,uBAjlBsB;AA6lB1C,2CAAqB;AACnB,6BAAK;AACHL,0BAAAA,OAAO,EAAE,CACP;AACEE,4BAAAA,KAAK,EAAE,QADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BADO,EAKP,iBALO,CADN;AAQHE,0BAAAA,SAAS,EAAE;AARR;AADc,uBA7lBqB;AAymB1C,6CAAuB;AACrB,6BAAK;AACHL,0BAAAA,OAAO,EAAE,CACP;AACEE,4BAAAA,KAAK,EAAE,QADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BADO,EAKP,mBALO,CADN;AAQHE,0BAAAA,SAAS,EAAE;AARR;AADgB,uBAzmBmB;AAqnB1C,qEAA+C;AAC7C,6BAAK;AACHL,0BAAAA,OAAO,EAAE,CACP;AACEE,4BAAAA,KAAK,EAAE,QADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BADO,EAKP,cALO,CADN;AAQHE,0BAAAA,SAAS,EAAE;AARR;AADwC,uBArnBL;AAioB1C,yCAAmB;AACjB,6BAAK;AACHL,0BAAAA,OAAO,EAAE,CACP;AACEE,4BAAAA,KAAK,EAAE,QADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BADO,EAKP,eALO;AADN;AADY,uBAjoBuB;AA4oB1C,qCAAe;AACb,6BAAK;AACHH,0BAAAA,OAAO,EAAE,CACP;AACEE,4BAAAA,KAAK,EAAE,QADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BADO,EAKP,IALO,CADN;AAQHE,0BAAAA,SAAS,EAAE;AARR;AADQ,uBA5oB2B;AAwpB1C,6BAAO;AACL,6BAAK;AACHL,0BAAAA,OAAO,EAAE,CACP;AACEE,4BAAAA,KAAK,EAAE,QADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BADO,EAKP,MALO,CADN;AAQHE,0BAAAA,SAAS,EAAE;AARR;AADA,uBAxpBmC;AAoqB1C,2CAAqB;AACnB,oDAA4B;AAC1BL,0BAAAA,OAAO,EAAE,CAAC,IAAD,EAAO,QAAP,CADiB;AAE1BK,0BAAAA,SAAS,EAAE;AAFe,yBADT;AAKnB,6BAAK;AACHL,0BAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,IAAX,EAAiB,QAAjB,CADN;AAEHK,0BAAAA,SAAS,EAAE;AAFR;AALc,uBApqBqB;AA8qB1CoC,sBAAAA,MAAM,EAAE;AACN,6BAAK;AACHzC,0BAAAA,OAAO,EAAE,CACP;AACEE,4BAAAA,KAAK,EAAE,QADT;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BADO,EAKP,MALO,CADN;AAQHE,0BAAAA,SAAS,EAAE;AARR;AADC,uBA9qBkC;AA0rB1CW,sBAAAA,KAAK,EAAE;AACL/E,wBAAAA,CAAC,EAAE;AACD+D,0BAAAA,OAAO,EAAE,QADR;AAEDK,0BAAAA,SAAS,EAAE,GAFV;AAGDC,0BAAAA,OAAO,EAAE;AAHR,yBADE;AAMLqG,wBAAAA,EAAE,EAAE;AACF3G,0BAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,SAAX,CADP;AAEFK,0BAAAA,SAAS,EAAE,GAFT;AAGFC,0BAAAA,OAAO,EAAE;AAHP,yBANC;AAWL,2CAAmB;AACjBN,0BAAAA,OAAO,EAAE,CAAC,QAAD,CADQ;AAEjBK,0BAAAA,SAAS,EAAE,GAFM;AAGjBC,0BAAAA,OAAO,EAAE;AAHQ,yBAXd;AAgBL,6BAAK;AACHN,0BAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,MAAX,CADN;AAEHK,0BAAAA,SAAS,EAAE;AAFR;AAhBA;AA1rBmC,qBAA/B,CAFX;AAktBFJ,oBAAAA,OAAO,EAAE;AACP,mCAAa,SAAS2G,OAAT,CAAiB5H,MAAjB,EAAyByC,CAAzB,EAA4B;AACvC,4BAAIgE,GAAJ;;AAEA,4BAAI,CAACzG,MAAM,CAAClC,CAAP,IAAY,EAAb,EAAiB4E,KAAjB,CAAuB,UAAvB,CAAJ,EAAwC;AACtC,8BAAImF,GAAG,GAAG7H,MAAM,CAAClC,CAAjB;AACAkC,0BAAAA,MAAM,CAAClC,CAAP,GAAWJ,SAAX;AACA+I,0BAAAA,GAAG,GAAG,KAAK,QAAL,EAAezG,MAAf,CAAN;AACAA,0BAAAA,MAAM,CAACyB,CAAP,GAAWoG,GAAX;AACD,yBALD,MAKO;AACLpB,0BAAAA,GAAG,GAAG,KAAK,QAAL,EAAezG,MAAf,CAAN;AACD;;AAEDH,wBAAAA,YAAY,CAACoB,OAAb,CAAqB,IAArB,EAA2BjB,MAA3B,EAAmCyC,CAAnC;AACA,+BAAOgE,GAAP;AACD,uBAfM;AAgBP,+BAAS,SAASqB,GAAT,CAAa9H,MAAb,EAAqByC,CAArB,EAAwB;AAC/BzC,wBAAAA,MAAM,CAAClC,CAAP,GAAW2E,CAAX;AACAzC,wBAAAA,MAAM,CAAC+H,KAAP,GAAe,IAAf;AACD,uBAnBM;AAoBP,wCAAkB,SAASC,YAAT,CAAsBhI,MAAtB,EAA8ByC,CAA9B,EAAiC;AACjD,4BAAIzC,MAAM,CAAC,gBAAD,CAAV,EAA8B;AAC5B;AACA,8BAAIyG,GAAG,GAAG,EAAV;AACA5G,0BAAAA,YAAY,CAACuB,WAAb,CAAyBqF,GAAzB,EAA8B,KAAK,QAAL,EAAezG,MAAf,CAA9B;AACAH,0BAAAA,YAAY,CAACuB,WAAb,CAAyBqF,GAAzB,EAA8B5G,YAAY,CAACoB,OAAb,CAAqB,MAArB,EAA6BjB,MAA7B,EAAqCyC,CAArC,EAAwC,GAAxC,CAA9B;AACA,iCAAOgE,GAAP;AACD,yBAND,MAMO;AACLzG,0BAAAA,MAAM,CAAClC,CAAP,GAAW2E,CAAX;AACD;AACF,uBA9BM;AA+BP,qCAAe,SAASwF,OAAT,CAAiBjI,MAAjB,EAAyByC,CAAzB,EAA4ByF,QAA5B,EAAsC;AACnD,4BAAIC,EAAE,GAAGtI,YAAY,CAACc,QAAb,CAAsBC,MAAtB,CAA6B,SAA7B,EAAwCZ,MAAM,CAAC/B,CAAP,IAAY,EAApD,CAAT;AACA,4BAAImK,EAAE,GAAGvI,YAAY,CAACc,QAAb,CAAsBC,MAAtB,CAA6B,8BAA7B,EAA6DZ,MAAM,CAAC/B,CAAP,IAAY,EAAzE,CAAT;AACA,4BAAIoK,EAAE,GAAGxI,YAAY,CAACc,QAAb,CAAsBC,MAAtB,CAA6B,8BAA7B,EAA6DZ,MAAM,CAAC/B,CAAP,IAAY,EAAzE,CAAT;AACA,4BAAIqK,EAAE,GAAGzI,YAAY,CAACc,QAAb,CAAsBC,MAAtB,CACP,gCADO,EAEPZ,MAAM,CAAC/B,CAAP,IAAY,EAFL,CAAT;AAIA,4BAAIsK,aAAa,GAAG9F,CAAC,KAAK,GAAN,KAAe0F,EAAE,IAAIA,EAAE,CAAC5G,SAAH,KAAiB,EAAxB,IAA+B6G,EAA/B,IAAqCC,EAArC,IAA2CC,EAAzD,CAApB;;AAEA,4BACEC,aAAa,IACb,CAACvI,MAAM,CAAC/C,CADR,IAEA,CAAC+C,MAAM,CAACyB,CAFR,IAGA,CAACzB,MAAM,CAAC+F,CAHR,IAIA,CAAC/F,MAAM,CAAClC,CAJR,IAKA,CAACkC,MAAM,CAACgG,CALR,IAMA,CAACmC,EAND,IAOAE,EARF,EASE;AACArI,0BAAAA,MAAM,CAAC/B,CAAP,GAAW,MAAM+B,MAAM,CAAC/B,CAAb,GAAiB,GAA5B;AACD;AACD;;;AAEA,4BAAIwI,GAAG,GAAG,EAAV;;AAEA,4BAAI8B,aAAJ,EAAmB;AACjB1I,0BAAAA,YAAY,CAACuB,WAAb,CAAyBqF,GAAzB,EAA8B,KAAK,QAAL,EAAezG,MAAf,CAA9B;AACAyG,0BAAAA,GAAG,CAAC5E,IAAJ,CAAS;AACPX,4BAAAA,KAAK,EAAE;AADA,2BAAT;AAGD,yBALD,MAKO;AACLiH,0BAAAA,EAAE,GAAGtI,YAAY,CAACc,QAAb,CAAsBC,MAAtB,CAA6B,QAA7B,EAAuCZ,MAAM,CAAClC,CAAP,IAAY,EAAnD,CAAL;;AAEA,8BAAIoK,QAAQ,IAAIC,EAAZ,IAAkBA,EAAE,CAAC5G,SAAH,KAAiB,EAAvC,EAA2C;AACzC1B,4BAAAA,YAAY,CAACuB,WAAb,CAAyBqF,GAAzB,EAA8B5G,YAAY,CAACoB,OAAb,CAAqB,IAArB,EAA2BjB,MAA3B,EAAmCyC,CAAnC,CAA9B;AACA5C,4BAAAA,YAAY,CAACuB,WAAb,CAAyBqF,GAAzB,EAA8B,KAAK,QAAL,EAAezG,MAAf,CAA9B;AACD,2BAHD,MAGO;AACLH,4BAAAA,YAAY,CAACuB,WAAb,CAAyBqF,GAAzB,EAA8B,KAAK,QAAL,EAAezG,MAAf,CAA9B;AACAH,4BAAAA,YAAY,CAACuB,WAAb,CAAyBqF,GAAzB,EAA8B5G,YAAY,CAACoB,OAAb,CAAqB,MAArB,EAA6BjB,MAA7B,EAAqCyC,CAArC,EAAwC,GAAxC,CAA9B;AACD;AACF;;AAED,+BAAOgE,GAAP;AACD,uBA3EM;AA4EP,gCAAU,SAAS+B,IAAT,CAAcxI,MAAd,EAAsB;AAC9BA,wBAAAA,MAAM,CAAC/B,CAAP,GAAW+B,MAAM,CAAC/C,CAAlB;AACA+C,wBAAAA,MAAM,CAAC/C,CAAP,GAAWS,SAAX;AACD,uBA/EM;AAgFP,iCAAW,SAAS+K,MAAT,CAAgBzI,MAAhB,EAAwB;AACjCA,wBAAAA,MAAM,CAAC0I,EAAP,GAAY,IAAZ;AACD,uBAlFM;AAmFP,kCAAY,SAASC,OAAT,CAAiB3I,MAAjB,EAAyB;AACnCA,wBAAAA,MAAM,CAAC0I,EAAP,GAAY,KAAZ;AACD,uBArFM;AAsFP,6CAAuB,SAASE,kBAAT,CAA4B5I,MAA5B,EAAoC;AACzDA,wBAAAA,MAAM,CAAC,gBAAD,CAAN,GAA2B,IAA3B;AACD,uBAxFM;AAyFP,8CAAwB,SAAS6I,mBAAT,CAA6B7I,MAA7B,EAAqC;AAC3DA,wBAAAA,MAAM,CAAC,gBAAD,CAAN,GAA2B,KAA3B;AACD,uBA3FM;AA4FP,4CAAsB,SAAS8I,gBAAT,CAA0B9I,MAA1B,EAAkC;AACtDA,wBAAAA,MAAM,CAAC,kBAAD,CAAN;AACD,uBA9FM;AA+FP,4CAAsB,SAAS8I,gBAAT,CAA0B9I,MAA1B,EAAkC;AACtDA,wBAAAA,MAAM,CAAC,kBAAD,CAAN;AACD,uBAjGM;AAkGP,8CAAwB,SAAS+I,kBAAT,CAA4B/I,MAA5B,EAAoCyC,CAApC,EAAuC;AAC7D,+BAAO;AACLvB,0BAAAA,KAAK,EAAE,sBADF;AAELmF,0BAAAA,EAAE,EAAExG,YAAY,CAACD,EAAb,CAAgB6C,CAAhB,EAAmB,GAAnB;AAFC,yBAAP;AAID,uBAvGM;AAwGPuG,sBAAAA,KAAK,EAAE,SAASA,KAAT,CAAehJ,MAAf,EAAuByC,CAAvB,EAA0B;AAC/B,4BAAIxF,CAAC,GAAGwF,CAAC,CAACxC,OAAF,CAAU,MAAV,EAAkB,EAAlB,CAAR;AACA,4BAAIgJ,SAAS,GAAGhM,CAAC,KAAKwF,CAAtB;;AAEA,4BAAIwG,SAAS,IAAIjJ,MAAM,CAAC,kBAAD,CAAN,KAA+B,CAAhD,EAAmD;AACjD,iCAAO;AACLkB,4BAAAA,KAAK,EAAE,qBADF;AAELmF,4BAAAA,EAAE,EAAEpJ;AAFC,2BAAP;AAID,yBALD,MAKO;AACL,iCAAO;AACLiE,4BAAAA,KAAK,EAAE,qBADF;AAELmF,4BAAAA,EAAE,EAAEpJ;AAFC,2BAAP;AAID;AACF,uBAvHM;AAwHPmD,sBAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBJ,MAAhB,EAAwByC,CAAxB,EAA2ByG,aAA3B,EAA0C;AAChD;AACA;AACA;AACA;;AAEA;AACA,4BAAIzC,GAAJ;;AAEA,4BAAI,CAACzG,MAAM,CAACsH,CAAZ,EAAe;AACbb,0BAAAA,GAAG,GAAG,EAAN;;AAEA,8BACE,CAACzG,MAAM,CAAC/C,CAAR,IACA,CAAC+C,MAAM,CAACyB,CADR,IAEA,CAACzB,MAAM,CAAC+F,CAFR,IAGA,CAAC/F,MAAM,CAAC/B,CAHR,IAIA,CAAC+B,MAAM,CAACgG,CAJR,IAKA,CAAChG,MAAM,CAAClC,CALR,IAMA,CAACoL,aAPH,EAQE,CACA;AACD,2BAVD,MAUO;AACL,gCAAIlJ,MAAM,CAAC0I,EAAX,EAAe;AACbjC,8BAAAA,GAAG,CAAC5E,IAAJ,CAAS;AACPX,gCAAAA,KAAK,EAAE;AADA,+BAAT;AAGD;;AAED,gCACE,CAAClB,MAAM,CAAC/B,CAAR,IACA,CAAC+B,MAAM,CAACgG,CADR,IAEA,CAAChG,MAAM,CAAClC,CAFR,IAGA,CAACkC,MAAM,CAACyB,CAHR,IAIA,CAACzB,MAAM,CAAC+F,CAJR,IAKAmD,aAAa,KAAK,CANpB,EAOE;AACAlJ,8BAAAA,MAAM,CAAC/B,CAAP,GAAW+B,MAAM,CAAC/C,CAAlB;AACA+C,8BAAAA,MAAM,CAAC/C,CAAP,GAAWS,SAAX;AACD,6BAVD,MAUO,IAAI,CAACsC,MAAM,CAAC/B,CAAR,IAAa,CAAC+B,MAAM,CAACgG,CAArB,IAA0B,CAAChG,MAAM,CAAClC,CAAlC,KAAwCkC,MAAM,CAACyB,CAAP,IAAYzB,MAAM,CAAC+F,CAA3D,CAAJ,EAAmE;AACxE/F,8BAAAA,MAAM,CAAC/B,CAAP,GAAW+B,MAAM,CAAC/C,CAAlB;AACA+C,8BAAAA,MAAM,CAAClC,CAAP,GAAWkC,MAAM,CAACyB,CAAlB;AACAzB,8BAAAA,MAAM,CAACgG,CAAP,GAAWhG,MAAM,CAAC+F,CAAlB;AACA/F,8BAAAA,MAAM,CAAC/C,CAAP,GAAW+C,MAAM,CAACyB,CAAP,GAAWzB,MAAM,CAAC+F,CAAP,GAAWrI,SAAjC;AACD,6BALM,MAKA;AACL,kCACEsC,MAAM,CAAC/B,CAAP,IACA+B,MAAM,CAAC+H,KAAP,KAAiB,IADjB,IAEAlI,YAAY,CAACc,QAAb,CAAsBC,MAAtB,CAA6B,cAA7B,EAA6CZ,MAAM,CAAClC,CAAP,IAAY,EAAzD,CAHF,EAIE;AACAkC,gCAAAA,MAAM,CAAC+H,KAAP,GAAe,WAAf;AACD,+BAND,MAMO,IAAI/H,MAAM,CAAC/B,CAAP,IAAY+B,MAAM,CAAC+H,KAAP,KAAiB,IAA7B,IAAqC,CAAC/H,MAAM,CAACgG,CAAjD,EAAoD;AACzDhG,gCAAAA,MAAM,CAAC+H,KAAP,GAAerK,SAAf;AACD;AACF;;AAED+I,4BAAAA,GAAG,CAAC5E,IAAJ,CAAS;AACPX,8BAAAA,KAAK,EAAE,UADA;AAEPjE,8BAAAA,CAAC,EAAE4C,YAAY,CAACD,EAAb,CAAgBI,MAAM,CAAC/C,CAAvB,EAA0B,GAA1B,CAFI;AAGPwE,8BAAAA,CAAC,EAAE5B,YAAY,CAACD,EAAb,CAAgBI,MAAM,CAACyB,CAAvB,EAA0B,IAA1B,CAHI;AAIPsE,8BAAAA,CAAC,EAAElG,YAAY,CAACD,EAAb,CAAgBI,MAAM,CAAC+F,CAAvB,EAA0B,IAA1B,CAJI;AAKP9H,8BAAAA,CAAC,EAAE4B,YAAY,CAACD,EAAb,CAAgBI,MAAM,CAAC/B,CAAvB,EAA0B,GAA1B,CALI;AAMP+H,8BAAAA,CAAC,EAAEnG,YAAY,CAACD,EAAb,CAAgBI,MAAM,CAACgG,CAAvB,EAA0B,IAA1B,CANI;AAOPlI,8BAAAA,CAAC,EAAE+B,YAAY,CAACD,EAAb,CAAgBI,MAAM,CAAClC,CAAvB,EAA0BkC,MAAM,CAAC+H,KAAP,KAAiB,WAAjB,GAA+B,WAA/B,GAA6C,IAAvE,CAPI;AAQPA,8BAAAA,KAAK,EAAE/H,MAAM,CAAC+H;AARP,6BAAT;AAUD;AACF,yBA1DD,MA0DO;AACL;;AAEA;AACA,8BAAIR,EAAJ;;AAEA,8BAAIvH,MAAM,CAACmJ,GAAP,KAAe,GAAnB,EAAwB;AACtB5B,4BAAAA,EAAE,GAAG1H,YAAY,CAACD,EAAb,CAAgBI,MAAM,CAACuH,EAAvB,EAA2B,UAA3B,CAAL;AACD,2BAFD,MAEO,IAAIvH,MAAM,CAACmJ,GAAP,KAAe,GAAnB,EAAwB;AAC7B5B,4BAAAA,EAAE,GAAG,CACH;AACErG,8BAAAA,KAAK,EAAE,MADT;AAEEmF,8BAAAA,EAAE,EAAErG,MAAM,CAACuH,EAAP,IAAa;AAFnB,6BADG,CAAL;AAMD,2BAPM,MAOA;AACLA,4BAAAA,EAAE,GAAG1H,YAAY,CAACD,EAAb,CAAgBI,MAAM,CAACuH,EAAvB,CAAL;AACD;AACD;;;AAEA,8BAAI6B,EAAJ;;AAEA,8BAAIpJ,MAAM,CAACqJ,GAAP,KAAe,GAAnB,EAAwB;AACtBD,4BAAAA,EAAE,GAAGvJ,YAAY,CAACD,EAAb,CAAgBI,MAAM,CAACoJ,EAAvB,EAA2B,UAA3B,CAAL;AACD,2BAFD,MAEO,IAAIpJ,MAAM,CAACqJ,GAAP,KAAe,GAAnB,EAAwB;AAC7BD,4BAAAA,EAAE,GAAG,CACH;AACElI,8BAAAA,KAAK,EAAE,MADT;AAEEmF,8BAAAA,EAAE,EAAErG,MAAM,CAACoJ,EAAP,IAAa;AAFnB,6BADG,CAAL;AAMD,2BAPM,MAOA;AACLA,4BAAAA,EAAE,GAAGvJ,YAAY,CAACD,EAAb,CAAgBI,MAAM,CAACoJ,EAAvB,CAAL;AACD;;AAED3C,0BAAAA,GAAG,GAAG;AACJvF,4BAAAA,KAAK,EAAE,OADH;AAEJoG,4BAAAA,CAAC,EAAEtH,MAAM,CAACsH,CAFN;AAGJC,4BAAAA,EAAE,EAAEA,EAHA;AAIJ6B,4BAAAA,EAAE,EAAEA;AAJA,2BAAN;AAMD;;AAED,6BAAK,IAAIrD,CAAT,IAAc/F,MAAd,EAAsB;AACpB,8BAAI+F,CAAC,KAAK,kBAAN,IAA4BA,CAAC,KAAK,gBAAtC,EAAwD;AACtD,mCAAO/F,MAAM,CAAC+F,CAAD,CAAb;AACD;AACF;;AAED,+BAAOU,GAAP;AACD,uBA7OM;AA8OP,0CAAoB,SAAS6C,eAAT,CAAyBtJ,MAAzB,EAAiCyC,CAAjC,EAAoC;AACtD,4BAAIgE,GAAG,GAAG,CAAC,GAAD,CAAV;AACA5G,wBAAAA,YAAY,CAACuB,WAAb,CAAyBqF,GAAzB,EAA8B5G,YAAY,CAACD,EAAb,CAAgB6C,CAAhB,EAAmB,WAAnB,CAA9B;AACAgE,wBAAAA,GAAG,CAAC5E,IAAJ,CAAS,GAAT;AACA,+BAAO4E,GAAP;AACD,uBAnPM;AAoPP,qCAAe,SAAS8C,UAAT,CAAoBvJ,MAApB,EAA4ByC,CAA5B,EAA+B;AAC5C,+BAAO;AACLvB,0BAAAA,KAAK,EAAE,SADF;AAELmF,0BAAAA,EAAE,EAAExG,YAAY,CAACD,EAAb,CAAgB6C,CAAC,CAAC,CAAD,CAAjB,CAFC;AAGL8D,0BAAAA,EAAE,EAAE1G,YAAY,CAACD,EAAb,CAAgB6C,CAAC,CAAC,CAAD,CAAjB;AAHC,yBAAP;AAKD,uBA1PM;AA2PP,wCAAkB,SAAS+G,aAAT,CAAuBxJ,MAAvB,EAA+ByC,CAA/B,EAAkC;AAClD,+BAAO;AACLvB,0BAAAA,KAAK,EAAE,SADF;AAELmF,0BAAAA,EAAE,EAAExG,YAAY,CAACD,EAAb,CAAgB6C,CAAC,CAAC,CAAD,CAAjB,CAFC;AAGL8D,0BAAAA,EAAE,EAAE1G,YAAY,CAACD,EAAb,CAAgB6C,CAAC,CAAC,CAAD,CAAjB;AAHC,yBAAP;AAKD,uBAjQM;AAkQP,yCAAmB,SAASgH,cAAT,CAAwBzJ,MAAxB,EAAgCyC,CAAhC,EAAmC;AACpD,+BAAO;AACLvB,0BAAAA,KAAK,EAAE,UADF;AAELmF,0BAAAA,EAAE,EAAExG,YAAY,CAACD,EAAb,CAAgB6C,CAAC,CAAC,CAAD,CAAjB,CAFC;AAGL8D,0BAAAA,EAAE,EAAE1G,YAAY,CAACD,EAAb,CAAgB6C,CAAC,CAAC,CAAD,CAAjB;AAHC,yBAAP;AAKD,uBAxQM;AAyQP,2CAAqB,SAASiH,gBAAT,CAA0B1J,MAA1B,EAAkCyC,CAAlC,EAAqC;AACxD,+BAAO;AACLvB,0BAAAA,KAAK,EAAE,YADF;AAELmF,0BAAAA,EAAE,EAAExG,YAAY,CAACD,EAAb,CAAgB6C,CAAC,CAAC,CAAD,CAAjB,CAFC;AAGL8D,0BAAAA,EAAE,EAAE1G,YAAY,CAACD,EAAb,CAAgB6C,CAAC,CAAC,CAAD,CAAjB;AAHC,yBAAP;AAKD,uBA/QM;AAgRP,sCAAgB,SAASkH,WAAT,CAAqB3J,MAArB,EAA6ByC,CAA7B,EAAgC;AAC9C,+BAAO;AACLvB,0BAAAA,KAAK,EAAE,OADF;AAEL6C,0BAAAA,MAAM,EAAEtB,CAAC,CAAC,CAAD,CAFJ;AAGLuB,0BAAAA,MAAM,EAAEnE,YAAY,CAACD,EAAb,CAAgB6C,CAAC,CAAC,CAAD,CAAjB;AAHH,yBAAP;AAKD,uBAtRM;AAuRP,4BAAM,SAAS6E,CAAT,CAAWtH,MAAX,EAAmByC,CAAnB,EAAsB;AAC1BzC,wBAAAA,MAAM,CAACsH,CAAP,GAAW7E,CAAX;AACD,uBAzRM;AA0RP,8BAAQ,SAAS0G,GAAT,CAAanJ,MAAb,EAAqByC,CAArB,EAAwB;AAC9BzC,wBAAAA,MAAM,CAACmJ,GAAP,GAAa1G,CAAb;AACD,uBA5RM;AA6RP,6BAAO,SAAS8E,EAAT,CAAYvH,MAAZ,EAAoByC,CAApB,EAAuB;AAC5BzC,wBAAAA,MAAM,CAACuH,EAAP,GAAY9E,CAAZ;AACD,uBA/RM;AAgSP,8BAAQ,SAAS4G,GAAT,CAAarJ,MAAb,EAAqByC,CAArB,EAAwB;AAC9BzC,wBAAAA,MAAM,CAACqJ,GAAP,GAAa5G,CAAb;AACD,uBAlSM;AAmSP,6BAAO,SAAS2G,EAAT,CAAYpJ,MAAZ,EAAoByC,CAApB,EAAuB;AAC5BzC,wBAAAA,MAAM,CAACoJ,EAAP,GAAY3G,CAAZ;AACD,uBArSM;AAsSPW,sBAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBpD,MAAlB,EAA0ByC,CAA1B,EAA6B4D,EAA7B,EAAiC;AACzC,+BAAO;AACLnF,0BAAAA,KAAK,EAAE,UADF;AAEL2F,0BAAAA,KAAK,EAAER,EAAE,IAAI5D;AAFR,yBAAP;AAID;AA3SM;AAltBP,mBALuB;AAqgC3BxF,kBAAAA,CAAC,EAAE;AACDuD,oBAAAA,WAAW,EAAEX,YAAY,CAACmH,iBAAb,CAA+B;AAC1ClF,sBAAAA,KAAK,EAAE;AACL,6BAAK;AADA,uBADmC;AAI1C,8BAAQ;AACN,2BAAG;AACDd,0BAAAA,OAAO,EAAE;AADR;AADG,uBAJkC;AAS1Ce,sBAAAA,IAAI,EAAE;AACJ,2BAAG;AACDV,0BAAAA,SAAS,EAAE,GADV;AAEDC,0BAAAA,OAAO,EAAE;AAFR;AADC,uBAToC;AAe1C,iCAAW;AACT,6BAAK;AACHN,0BAAAA,OAAO,EAAE,gBADN;AAEHK,0BAAAA,SAAS,EAAE;AAFR;AADI,uBAf+B;AAqB1C,2BAAK;AACH,6BAAK;AACHL,0BAAAA,OAAO,EAAE;AACPE,4BAAAA,KAAK,EAAE,QADA;AAEPC,4BAAAA,MAAM,EAAE;AAFD;AADN;AADF,uBArBqC;AA6B1Ca,sBAAAA,KAAK,EAAE;AACL,6BAAK;AACHhB,0BAAAA,OAAO,EAAE;AADN;AADA;AA7BmC,qBAA/B,CADZ;AAoCDC,oBAAAA,OAAO,EAAE;AApCR,mBArgCwB;AA2iC3BhD,kBAAAA,CAAC,EAAE;AACDuC,oBAAAA,WAAW,EAAEX,YAAY,CAACmH,iBAAb,CAA+B;AAC1ClF,sBAAAA,KAAK,EAAE;AACL,6BAAK;AADA,uBADmC;AAI1C,8BAAQ;AACN,2BAAG;AACDd,0BAAAA,OAAO,EAAE;AADR;AADG,uBAJkC;AAS1Ce,sBAAAA,IAAI,EAAE;AACJ,2BAAG;AACDV,0BAAAA,SAAS,EAAE,GADV;AAEDC,0BAAAA,OAAO,EAAE;AAFR;AADC,uBAToC;AAe1CgB,sBAAAA,OAAO,EAAE;AACP,6BAAK;AACHtB,0BAAAA,OAAO,EAAE;AADN;AADE,uBAfiC;AAoB1C,8BAAQ;AACN,6BAAK;AACHA,0BAAAA,OAAO,EAAE;AACPE,4BAAAA,KAAK,EAAE,QADA;AAEPC,4BAAAA,MAAM,EAAE;AAFD;AADN;AADC,uBApBkC;AA4B1C,2CAAqB;AACnB,6BAAK;AACHH,0BAAAA,OAAO,EAAE;AADN;AADc,uBA5BqB;AAiC1C,2CAAqB;AACnB,6BAAK;AACHA,0BAAAA,OAAO,EAAE;AADN;AADc,uBAjCqB;AAsC1C,iCAAW;AACT,6BAAK;AACHA,0BAAAA,OAAO,EAAE;AADN;AADI,uBAtC+B;AA2C1CgB,sBAAAA,KAAK,EAAE;AACL,6BAAK;AACHhB,0BAAAA,OAAO,EAAE;AADN;AADA;AA3CmC,qBAA/B,CADZ;AAkDDC,oBAAAA,OAAO,EAAE;AAlDR,mBA3iCwB;AA+lC3BxB,kBAAAA,IAAI,EAAE;AACJe,oBAAAA,WAAW,EAAEX,YAAY,CAACmH,iBAAb,CAA+B;AAC1ClF,sBAAAA,KAAK,EAAE;AACL,6BAAK;AACHd,0BAAAA,OAAO,EAAE;AADN;AADA,uBADmC;AAM1C,+BAAS;AACP,6BAAK;AACHA,0BAAAA,OAAO,EAAE;AADN;AADE,uBANiC;AAW1C,2CAAqB;AACnB,6BAAK;AACHA,0BAAAA,OAAO,EAAE;AADN;AADc,uBAXqB;AAgB1C,iCAAW;AACT,6BAAK;AACHA,0BAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,IAAX;AADN;AADI,uBAhB+B;AAqB1C,+CAAyB;AACvB,6BAAK;AACHA,0BAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,MAAX;AADN;AADkB,uBArBiB;AA0B1Ce,sBAAAA,IAAI,EAAE;AACJ,6BAAK;AACHf,0BAAAA,OAAO,EAAE;AADN;AADD;AA1BoC,qBAA/B,CADT;AAiCJC,oBAAAA,OAAO,EAAE;AACPb,sBAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBJ,MAAhB,EAAwB;AAC9B,4BAAIA,MAAM,CAACkG,KAAX,EAAkB;AAChB;AACA,8BAAIO,GAAG,GAAG;AACRvF,4BAAAA,KAAK,EAAE,MADC;AAERmF,4BAAAA,EAAE,EAAErG,MAAM,CAACkG;AAFH,2BAAV;;AAKA,+BAAK,IAAIH,CAAT,IAAc/F,MAAd,EAAsB;AACpB,mCAAOA,MAAM,CAAC+F,CAAD,CAAb;AACD;;AAED,iCAAOU,GAAP;AACD;AACF;AAfM;AAjCL,mBA/lCqB;AAkpC3BmD,kBAAAA,EAAE,EAAE;AACFpJ,oBAAAA,WAAW,EAAEX,YAAY,CAACmH,iBAAb,CAA+B;AAC1ClF,sBAAAA,KAAK,EAAE;AACL,6BAAK;AADA,uBADmC;AAI1C,gDAA0B;AACxB,6BAAK;AACHd,0BAAAA,OAAO,EAAE;AADN;AADmB,uBAJgB;AAS1CqB,sBAAAA,EAAE,EAAE;AACF,2BAAG;AACDhB,0BAAAA,SAAS,EAAE,IADV;AAEDC,0BAAAA,OAAO,EAAE;AAFR;AADD,uBATsC;AAe1C,uCAAiB;AACf,2BAAG;AACDN,0BAAAA,OAAO,EAAE,IADR;AAEDK,0BAAAA,SAAS,EAAE;AAFV;AADY,uBAfyB;AAqB1CgD,sBAAAA,QAAQ,EAAE;AACR,2BAAG;AACDhD,0BAAAA,SAAS,EAAE,GADV;AAEDC,0BAAAA,OAAO,EAAE;AAFR;AADK,uBArBgC;AA2B1C,8BAAQ;AACN,2BAAG;AACDN,0BAAAA,OAAO,EAAE;AADR;AADG,uBA3BkC;AAgC1Ce,sBAAAA,IAAI,EAAE;AACJ,2BAAG;AACDV,0BAAAA,SAAS,EAAE,IADV;AAEDC,0BAAAA,OAAO,EAAE;AAFR;AADC,uBAhCoC;AAsC1C,2CAAqB;AACnB,6BAAK;AACHN,0BAAAA,OAAO,EAAE;AADN;AADc,uBAtCqB;AA2C1C,iCAAW;AACT,6BAAK;AACHA,0BAAAA,OAAO,EAAE;AADN;AADI,uBA3C+B;AAgD1C,6BAAO;AACL6I,wBAAAA,CAAC,EAAE;AACD7I,0BAAAA,OAAO,EAAE;AADR;AADE,uBAhDmC;AAqD1CsB,sBAAAA,OAAO,EAAE;AACP,6BAAK;AACHtB,0BAAAA,OAAO,EAAE;AADN;AADE,uBArDiC;AA0D1C,+BAAS;AACP,6BAAK;AACHA,0BAAAA,OAAO,EAAE;AADN;AADE,uBA1DiC;AA+D1C,2BAAK;AACH,6BAAK;AACHA,0BAAAA,OAAO,EAAE;AACPE,4BAAAA,KAAK,EAAE,WADA;AAEPC,4BAAAA,MAAM,EAAE;AAFD;AADN;AADF,uBA/DqC;AAuE1C,qEAA+C;AAC7C,6BAAK;AACHH,0BAAAA,OAAO,EAAE;AADN;AADwC,uBAvEL;AA4E1C,yCAAmB;AACjB,6BAAK;AACHA,0BAAAA,OAAO,EAAE;AADN;AADY,uBA5EuB;AAiF1C,qCAAe;AACb,6BAAK;AACHA,0BAAAA,OAAO,EAAE;AADN;AADQ,uBAjF2B;AAsF1C,+CAAyB;AACvB,6BAAK;AACHA,0BAAAA,OAAO,EAAE;AADN;AADkB,uBAtFiB;AA2F1CgB,sBAAAA,KAAK,EAAE;AACL,6BAAK;AACHhB,0BAAAA,OAAO,EAAE;AADN;AADA;AA3FmC,qBAA/B,CADX;AAkGFC,oBAAAA,OAAO,EAAE;AACP,8CAAwB,SAAS8H,kBAAT,CAA4B/I,MAA5B,EAAoCyC,CAApC,EAAuC;AAC7D,+BAAO;AACLvB,0BAAAA,KAAK,EAAE,gCADF;AAELmF,0BAAAA,EAAE,EAAExG,YAAY,CAACD,EAAb,CAAgB6C,CAAhB,EAAmB,GAAnB;AAFC,yBAAP;AAID,uBANM;AAOP,sCAAgB,SAASkH,WAAT,CAAqB3J,MAArB,EAA6ByC,CAA7B,EAAgC;AAC9C,+BAAO;AACLvB,0BAAAA,KAAK,EAAE,OADF;AAEL6C,0BAAAA,MAAM,EAAEtB,CAAC,CAAC,CAAD,CAFJ;AAGLuB,0BAAAA,MAAM,EAAEnE,YAAY,CAACD,EAAb,CAAgB6C,CAAC,CAAC,CAAD,CAAjB,EAAsB,IAAtB;AAHH,yBAAP;AAKD;AAbM;AAlGP,mBAlpCuB;AAowC3BqH,kBAAAA,EAAE,EAAE;AACFtJ,oBAAAA,WAAW,EAAEX,YAAY,CAACmH,iBAAb,CAA+B;AAC1ClF,sBAAAA,KAAK,EAAE;AACL,6BAAK;AADA,uBADmC;AAI1CM,sBAAAA,EAAE,EAAE;AACF,2BAAG;AACDf,0BAAAA,SAAS,EAAE,IADV;AAEDC,0BAAAA,OAAO,EAAE;AAFR;AADD,uBAJsC;AAU1C+C,sBAAAA,QAAQ,EAAE;AACR,2BAAG;AACDhD,0BAAAA,SAAS,EAAE,GADV;AAEDC,0BAAAA,OAAO,EAAE;AAFR;AADK,uBAVgC;AAgB1CS,sBAAAA,IAAI,EAAE;AACJ,2BAAG;AACDV,0BAAAA,SAAS,EAAE,IADV;AAEDC,0BAAAA,OAAO,EAAE;AAFR;AADC,uBAhBoC;AAsB1C,4CAAsB;AACpB,6BAAK;AACHN,0BAAAA,OAAO,EAAE;AADN;AADe,uBAtBoB;AA2B1C,2BAAK;AACH,6BAAK;AACHA,0BAAAA,OAAO,EAAE;AACPE,4BAAAA,KAAK,EAAE,QADA;AAEPC,4BAAAA,MAAM,EAAE;AAFD;AADN;AADF,uBA3BqC;AAmC1C,6BAAO;AACL0I,wBAAAA,CAAC,EAAE;AACD7I,0BAAAA,OAAO,EAAE;AADR;AADE,uBAnCmC;AAwC1CmB,sBAAAA,CAAC,EAAE;AACD,6BAAK;AACHnB,0BAAAA,OAAO,EAAE;AACPE,4BAAAA,KAAK,EAAE,QADA;AAEPC,4BAAAA,MAAM,EAAE;AAFD;AADN;AADJ,uBAxCuC;AAgD1CmB,sBAAAA,OAAO,EAAE;AACP,6BAAK;AACHtB,0BAAAA,OAAO,EAAE;AADN;AADE,uBAhDiC;AAqD1C,2BAAK;AACH,6BAAK;AACHA,0BAAAA,OAAO,EAAE;AACPE,4BAAAA,KAAK,EAAE,QADA;AAEPC,4BAAAA,MAAM,EAAE;AAFD;AADN;AADF,uBArDqC;AA6D1C,2CAAqB;AACnB,6BAAK;AACHH,0BAAAA,OAAO,EAAE;AADN;AADc,uBA7DqB;AAkE1C,iCAAW;AACT,6BAAK;AACHA,0BAAAA,OAAO,EAAE;AADN;AADI,uBAlE+B;AAuE1C,qEAA+C;AAC7C,6BAAK;AACHA,0BAAAA,OAAO,EAAE;AADN;AADwC,uBAvEL;AA4E1C,yCAAmB;AACjB,6BAAK;AACHA,0BAAAA,OAAO,EAAE;AADN;AADY,uBA5EuB;AAiF1C,qCAAe;AACb,6BAAK;AACHA,0BAAAA,OAAO,EAAE;AADN;AADQ,uBAjF2B;AAsF1C,+CAAyB;AACvB,6BAAK;AACHA,0BAAAA,OAAO,EAAE;AADN;AADkB,uBAtFiB;AA2F1CgB,sBAAAA,KAAK,EAAE;AACL,6BAAK;AACHhB,0BAAAA,OAAO,EAAE;AADN;AADA;AA3FmC,qBAA/B,CADX;AAkGFC,oBAAAA,OAAO,EAAE;AACP,sCAAgB,SAAS0I,WAAT,CAAqB3J,MAArB,EAA6ByC,CAA7B,EAAgC;AAC9C,+BAAO;AACLvB,0BAAAA,KAAK,EAAE,OADF;AAEL6C,0BAAAA,MAAM,EAAEtB,CAAC,CAAC,CAAD,CAFJ;AAGLuB,0BAAAA,MAAM,EAAEnE,YAAY,CAACD,EAAb,CAAgB6C,CAAC,CAAC,CAAD,CAAjB,EAAsB,IAAtB;AAHH,yBAAP;AAKD;AAPM;AAlGP,mBApwCuB;AAg3C3BsH,kBAAAA,SAAS,EAAE;AACTvJ,oBAAAA,WAAW,EAAEX,YAAY,CAACmH,iBAAb,CAA+B;AAC1ClF,sBAAAA,KAAK,EAAE;AACL,6BAAK;AADA,uBADmC;AAI1C,uCAAiB;AACf,6BAAK;AACHd,0BAAAA,OAAO,EAAE;AADN;AADU,uBAJyB;AAS1C,2CAAqB;AACnB,6BAAK;AACHA,0BAAAA,OAAO,EAAE;AADN;AADc,uBATqB;AAc1Ce,sBAAAA,IAAI,EAAE;AACJ,6BAAK;AACHf,0BAAAA,OAAO,EAAE;AADN;AADD;AAdoC,qBAA/B,CADJ;AAqBTC,oBAAAA,OAAO,EAAE;AACP,uCAAiB,SAAS+I,YAAT,CAAsBhK,MAAtB,EAA8ByC,CAA9B,EAAiC;AAChD,+BAAO;AACLvB,0BAAAA,KAAK,EAAE,eADF;AAELmF,0BAAAA,EAAE,EAAE5D,CAAC,IAAI;AAFJ,yBAAP;AAID;AANM;AArBA,mBAh3CgB;AA84C3B,8BAAY;AACVjC,oBAAAA,WAAW,EAAEX,YAAY,CAACmH,iBAAb,CAA+B;AAC1ClF,sBAAAA,KAAK,EAAE;AACL,6BAAK;AACHd,0BAAAA,OAAO,EAAE;AADN;AADA,uBADmC;AAM1C,qCAAe;AACb,6BAAK;AACHA,0BAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,IAAX;AADN;AADQ,uBAN2B;AAW1C,qDAA+B;AAC7B,6BAAK;AACHA,0BAAAA,OAAO,EAAE;AADN;AADwB,uBAXW;AAgB1Ce,sBAAAA,IAAI,EAAE;AACJ,6BAAK;AACHf,0BAAAA,OAAO,EAAE;AADN;AADD;AAhBoC,qBAA/B,CADH;AAuBVC,oBAAAA,OAAO,EAAE;AACPb,sBAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBJ,MAAhB,EAAwB;AAC9B,4BAAIA,MAAM,CAAC/B,CAAX,EAAc;AACZ;AACA,8BAAIwI,GAAG,GAAG;AACRvF,4BAAAA,KAAK,EAAE,UADC;AAERmF,4BAAAA,EAAE,EAAErG,MAAM,CAAC/B;AAFH,2BAAV;;AAKA,+BAAK,IAAI8H,CAAT,IAAc/F,MAAd,EAAsB;AACpB,mCAAOA,MAAM,CAAC+F,CAAD,CAAb;AACD;;AAED,iCAAOU,GAAP;AACD;AACF;AAfM;AAvBC,mBA94Ce;AAu7C3B,oCAAkB;AAChBjG,oBAAAA,WAAW,EAAEX,YAAY,CAACmH,iBAAb,CAA+B;AAC1ClF,sBAAAA,KAAK,EAAE;AACL,6BAAK;AACHd,0BAAAA,OAAO,EAAE;AADN;AADA,uBADmC;AAM1C,qCAAe;AACb,6BAAK;AACHA,0BAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,IAAX;AADN;AADQ,uBAN2B;AAW1C,qDAA+B;AAC7B,6BAAK;AACHA,0BAAAA,OAAO,EAAE;AADN;AADwB,uBAXW;AAgB1C,6BAAO;AACL,6BAAK;AACHA,0BAAAA,OAAO,EAAE;AADN;AADA,uBAhBmC;AAqB1Ce,sBAAAA,IAAI,EAAE;AACJ,6BAAK;AACHf,0BAAAA,OAAO,EAAE;AADN;AADD;AArBoC,qBAA/B,CADG;AA4BhBC,oBAAAA,OAAO,EAAE;AACP,wCAAkB,SAASgJ,aAAT,CAAuBjK,MAAvB,EAA+ByC,CAA/B,EAAkC;AAClDzC,wBAAAA,MAAM,CAAC/B,CAAP,GAAW,CAAC+B,MAAM,CAAC/B,CAAP,IAAY,EAAb,IAAmB,GAAnB,GAAyBwE,CAAzB,GAA6B,GAAxC;AACD,uBAHM;AAIPrC,sBAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBJ,MAAhB,EAAwB;AAC9B,4BAAIA,MAAM,CAAC/B,CAAX,EAAc;AACZ;AACA,8BAAIwI,GAAG,GAAG;AACRvF,4BAAAA,KAAK,EAAE,UADC;AAERmF,4BAAAA,EAAE,EAAErG,MAAM,CAAC/B;AAFH,2BAAV;;AAKA,+BAAK,IAAI8H,CAAT,IAAc/F,MAAd,EAAsB;AACpB,mCAAOA,MAAM,CAAC+F,CAAD,CAAb;AACD;;AAED,iCAAOU,GAAP;AACD;AACF;AAlBM;AA5BO,mBAv7CS;AAw+C3B,yBAAO;AACLjG,oBAAAA,WAAW,EAAEX,YAAY,CAACmH,iBAAb,CAA+B;AAC1ClF,sBAAAA,KAAK,EAAE;AACL,6BAAK;AADA,uBADmC;AAI1C,2BAAK;AACH,6BAAK;AACHd,0BAAAA,OAAO,EAAE;AADN;AADF,uBAJqC;AAS1Ce,sBAAAA,IAAI,EAAE;AACJ,6BAAK;AACHf,0BAAAA,OAAO,EAAE;AADN;AADD;AAToC,qBAA/B,CADR;AAgBLC,oBAAAA,OAAO,EAAE;AACP+H,sBAAAA,KAAK,EAAE,SAASA,KAAT,GAAiB;AACtB,+BAAO;AACL9H,0BAAAA,KAAK,EAAE;AADF,yBAAP;AAGD;AALM;AAhBJ,mBAx+CoB;AAggD3B;AACA;AACA;AACA;AACA;AACAgJ,kBAAAA,EAAE,EAAE;AACF1J,oBAAAA,WAAW,EAAEX,YAAY,CAACmH,iBAAb,CAA+B;AAC1ClF,sBAAAA,KAAK,EAAE;AACL,6BAAK;AACHd,0BAAAA,OAAO,EAAE;AADN;AADA,uBADmC;AAM1CkB,sBAAAA,MAAM,EAAE;AACN,6BAAK;AACHlB,0BAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,OAAX;AADN;AADC,uBANkC;AAW1C,iCAAW;AACT,+BAAO;AACLA,0BAAAA,OAAO,EAAE;AADJ;AADE,uBAX+B;AAgB1C,qCAAe;AACb,2BAAG;AACDA,0BAAAA,OAAO,EAAE,SADR;AAEDK,0BAAAA,SAAS,EAAE;AAFV;AADU,uBAhB2B;AAsB1C,0CAAoB;AAClB,2BAAG;AACDL,0BAAAA,OAAO,EAAE,SADR;AAEDK,0BAAAA,SAAS,EAAE;AAFV;AADe,uBAtBsB;AA4B1CY,sBAAAA,KAAK,EAAE;AACL,+BAAO;AADF,uBA5BmC;AA+B1C,qCAAe;AACb,+BAAO;AACLjB,0BAAAA,OAAO,EAAE;AACPE,4BAAAA,KAAK,EAAE,UADA;AAEPC,4BAAAA,MAAM,EAAE;AAFD,2BADJ;AAKLE,0BAAAA,SAAS,EAAE;AALN;AADM,uBA/B2B;AAwC1C+B,sBAAAA,QAAQ,EAAE;AACR,+BAAO;AACLpC,0BAAAA,OAAO,EAAE,MADJ;AAELK,0BAAAA,SAAS,EAAE;AAFN;AADC,uBAxCgC;AA8C1C,4BAAM;AACJvD,wBAAAA,CAAC,EAAE;AACDkD,0BAAAA,OAAO,EAAE,IADR;AAEDK,0BAAAA,SAAS,EAAE;AAFV;AADC,uBA9CoC;AAoD1C,2BAAK;AACHvD,wBAAAA,CAAC,EAAE;AACDkD,0BAAAA,OAAO,EAAE,IADR;AAEDK,0BAAAA,SAAS,EAAE;AAFV;AADA,uBApDqC;AA0D1C,oCAAc;AACZ,+BAAO;AACLL,0BAAAA,OAAO,EAAE,IADJ;AAELK,0BAAAA,SAAS,EAAE;AAFN,yBADK;AAKZpE,wBAAAA,CAAC,EAAE;AACD+D,0BAAAA,OAAO,EAAE,CAAC,OAAD,EAAU,IAAV,CADR;AAEDK,0BAAAA,SAAS,EAAE;AAFV,yBALS;AASZ,+BAAO;AACLL,0BAAAA,OAAO,EAAE,IADJ;AAELK,0BAAAA,SAAS,EAAE;AAFN;AATK;AA1D4B,qBAA/B,CADX;AA0EFJ,oBAAAA,OAAO,EAAE;AACPkJ,sBAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBnK,MAAjB,EAAyByC,CAAzB,EAA4B;AACnC;AACA,4BAAIgE,GAAG,GAAG,EAAV;;AAEA,4BAAIhE,CAAC,CAAC,CAAD,CAAD,KAAS,IAAT,IAAiBA,CAAC,CAAC,CAAD,CAAD,KAAS,KAA9B,EAAqC;AACnCgE,0BAAAA,GAAG,CAAC5E,IAAJ,CAAS,OAAT;AACD,yBAFD,MAEO,IAAIY,CAAC,CAAC,CAAD,CAAL,EAAU;AACfgE,0BAAAA,GAAG,CAAC5E,IAAJ,CAASY,CAAC,CAAC,CAAD,CAAV;AACD;;AAED,4BAAIA,CAAC,CAAC,CAAD,CAAL,EAAU;AACR5C,0BAAAA,YAAY,CAACuB,WAAb,CAAyBqF,GAAzB,EAA8B5G,YAAY,CAACD,EAAb,CAAgB6C,CAAC,CAAC,CAAD,CAAjB,EAAsB,QAAtB,CAA9B;;AAEA,8BAAIA,CAAC,CAAC,CAAD,CAAL,EAAU;AACR,gCAAIA,CAAC,CAAC,CAAD,CAAD,CAAKC,KAAL,CAAW,MAAX,CAAJ,EAAwB;AACtB7C,8BAAAA,YAAY,CAACuB,WAAb,CAAyBqF,GAAzB,EAA8B5G,YAAY,CAACD,EAAb,CAAgB6C,CAAC,CAAC,CAAD,CAAjB,EAAsB,QAAtB,CAA9B;AACD,6BAFD,MAEO;AACLgE,8BAAAA,GAAG,CAAC5E,IAAJ,CAASY,CAAC,CAAC,CAAD,CAAV;AACD;AACF;;AAEDA,0BAAAA,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAD,IAAQA,CAAC,CAAC,CAAD,CAAhB;;AAEA,8BAAIA,CAAC,CAAC,CAAD,CAAL,EAAU;AACRA,4BAAAA,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAD,CAAK2H,IAAL,EAAP;;AAEA,gCAAI3H,CAAC,CAAC,CAAD,CAAD,KAAS,GAAT,IAAgBA,CAAC,CAAC,CAAD,CAAD,CAAKG,MAAL,CAAY,CAAZ,EAAe,CAAf,MAAsB,GAA1C,EAA+C;AAC7C6D,8BAAAA,GAAG,CAAC5E,IAAJ,CAAS;AACPX,gCAAAA,KAAK,EAAE;AADA,+BAAT;AAGD,6BAJD,MAIO;AACLuF,8BAAAA,GAAG,CAAC5E,IAAJ,CAAS;AACPX,gCAAAA,KAAK,EAAE;AADA,+BAAT;AAGD;AACF;AACF;;AAED,4BAAIuB,CAAC,CAAC,CAAD,CAAL,EAAU;AACRgE,0BAAAA,GAAG,CAAC5E,IAAJ,CAAS,SAASY,CAAC,CAAC,CAAD,CAAV,GAAgB,GAAzB;AACD;;AAED,+BAAOgE,GAAP;AACD,uBA5CM;AA6CP,iCAAW,SAAS4D,MAAT,CAAgBrK,MAAhB,EAAwByC,CAAxB,EAA2B;AACpC;AACA,4BAAIgE,GAAG,GAAG,EAAV;;AAEA,4BAAIhE,CAAC,CAAC,CAAD,CAAD,KAAS,IAAT,IAAiBA,CAAC,CAAC,CAAD,CAAD,KAAS,KAA9B,EAAqC;AACnCgE,0BAAAA,GAAG,CAAC5E,IAAJ,CAAS,OAAT;AACD,yBAFD,MAEO,IAAIY,CAAC,CAAC,CAAD,CAAL,EAAU;AACfgE,0BAAAA,GAAG,CAAC5E,IAAJ,CAASY,CAAC,CAAC,CAAD,CAAV;AACD;;AAED5C,wBAAAA,YAAY,CAACuB,WAAb,CAAyBqF,GAAzB,EAA8B5G,YAAY,CAACD,EAAb,CAAgB6C,CAAC,CAAC,CAAD,CAAjB,EAAsB,QAAtB,CAA9B;AACAgE,wBAAAA,GAAG,CAAC5E,IAAJ,CAAS,OAAOY,CAAC,CAAC,CAAD,CAAR,GAAc,GAAvB;AACA,+BAAOgE,GAAP;AACD,uBA1DM;AA2DPrD,sBAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBpD,MAAlB,EAA0ByC,CAA1B,EAA6B4D,EAA7B,EAAiC;AACzC,+BAAO;AACLnF,0BAAAA,KAAK,EAAE,UADF;AAEL2F,0BAAAA,KAAK,EAAER,EAAE,IAAI5D;AAFR,yBAAP;AAID,uBAhEM;AAiEPR,sBAAAA,KAAK,EAAE,SAASA,KAAT,GAAiB;AACtB,+BAAO;AACLf,0BAAAA,KAAK,EAAE;AADF,yBAAP;AAGD,uBArEM;AAsEPd,sBAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBJ,MAAhB,EAAwB;AAC9B;AACA,4BAAIyG,GAAJ;AACA,4BAAI6D,EAAE,GAAGzK,YAAY,CAACc,QAAb,CAAsBC,MAAtB,CAA6B,SAA7B,EAAwCZ,MAAM,CAAClC,CAAP,IAAY,EAApD,CAAT;;AAEA,4BAAIwM,EAAE,IAAIA,EAAE,CAAC/I,SAAH,KAAiB,EAA3B,EAA+B;AAC7BvB,0BAAAA,MAAM,CAAClC,CAAP,GAAWwM,EAAE,CAAC1J,MAAd;AACD;;AAED,4BAAI2J,EAAE,GAAG1K,YAAY,CAACc,QAAb,CAAsBC,MAAtB,CAA6B,SAA7B,EAAwCZ,MAAM,CAACgG,CAAP,IAAY,EAApD,CAAT;;AAEA,4BAAIuE,EAAE,IAAIA,EAAE,CAAChJ,SAAH,KAAiB,EAA3B,EAA+B;AAC7BvB,0BAAAA,MAAM,CAACgG,CAAP,GAAWuE,EAAE,CAAC3J,MAAd;AACD;;AAED,4BAAIZ,MAAM,CAAClC,CAAX,EAAc;AACZkC,0BAAAA,MAAM,CAAClC,CAAP,GAAWkC,MAAM,CAAClC,CAAP,CAASmC,OAAT,CAAiB,sBAAjB,EAAyC,cAAzC,CAAX;AACAD,0BAAAA,MAAM,CAAClC,CAAP,GAAWkC,MAAM,CAAClC,CAAP,CAASmC,OAAT,CAAiB,sBAAjB,EAAyC,cAAzC,CAAX;AACD;;AAED,4BAAID,MAAM,CAACgG,CAAX,EAAc;AACZ;AACAhG,0BAAAA,MAAM,CAACgG,CAAP,GAAWhG,MAAM,CAACgG,CAAP,CAAS/F,OAAT,CAAiB,sBAAjB,EAAyC,cAAzC,CAAX;AACAD,0BAAAA,MAAM,CAACgG,CAAP,GAAWhG,MAAM,CAACgG,CAAP,CAAS/F,OAAT,CAAiB,sBAAjB,EAAyC,cAAzC,CAAX;AACA,8BAAIuK,EAAE,GAAG;AACP1M,4BAAAA,CAAC,EAAE+B,YAAY,CAACD,EAAb,CAAgBI,MAAM,CAAClC,CAAvB,EAA0B,IAA1B,CADI;AAEPkI,4BAAAA,CAAC,EAAEnG,YAAY,CAACD,EAAb,CAAgBI,MAAM,CAACgG,CAAvB,EAA0B,IAA1B;AAFI,2BAAT;;AAKA,8BAAIhG,MAAM,CAAC/B,CAAP,KAAa,IAAjB,EAAuB;AACrBwI,4BAAAA,GAAG,GAAG;AACJvF,8BAAAA,KAAK,EAAE,SADH;AAEJmF,8BAAAA,EAAE,EAAEmE,EAAE,CAAC1M,CAFH;AAGJyI,8BAAAA,EAAE,EAAEiE,EAAE,CAACxE;AAHH,6BAAN;AAKD,2BAND,MAMO;AACLS,4BAAAA,GAAG,GAAG+D,EAAE,CAAC1M,CAAT;;AAEA,gCAAI0M,EAAE,CAAC1M,CAAH,CAAKwB,MAAL,GAAc,CAAd,IAAmBkL,EAAE,CAACxE,CAAH,CAAK1G,MAAL,GAAc,CAArC,EAAwC;AACtCmH,8BAAAA,GAAG,CAAC5E,IAAJ,CAAS;AACPX,gCAAAA,KAAK,EAAE;AADA,+BAAT;AAGD,6BAJD,MAIO;AACLuF,8BAAAA,GAAG,CAAC5E,IAAJ,CAAS;AACPX,gCAAAA,KAAK,EAAE;AADA,+BAAT;AAGD;;AAEDrB,4BAAAA,YAAY,CAACuB,WAAb,CAAyBqF,GAAzB,EAA8B+D,EAAE,CAACxE,CAAjC;AACD;AACF,yBA9BD,MA8BO;AACL;AACAS,0BAAAA,GAAG,GAAG5G,YAAY,CAACD,EAAb,CAAgBI,MAAM,CAAClC,CAAvB,EAA0B,MAA1B,CAAN;AACD;;AAED,6BAAK,IAAIiI,CAAT,IAAc/F,MAAd,EAAsB;AACpB,iCAAOA,MAAM,CAAC+F,CAAD,CAAb;AACD;;AAED,+BAAOU,GAAP;AACD;AAlIM;AA1EP,mBArgDuB;AAotD3B,0BAAQ;AACNjG,oBAAAA,WAAW,EAAEX,YAAY,CAACmH,iBAAb,CAA+B;AAC1ClF,sBAAAA,KAAK,EAAE;AACL,6BAAK;AACHd,0BAAAA,OAAO,EAAE;AADN;AADA,uBADmC;AAM1C,2BAAK;AACH,6BAAK;AACHA,0BAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,MAAX,CADN;AAEHK,0BAAAA,SAAS,EAAE;AAFR;AADF,uBANqC;AAY1C,6BAAO;AACL,6BAAK;AACHL,0BAAAA,OAAO,EAAE;AADN;AADA,uBAZmC;AAiB1CiB,sBAAAA,KAAK,EAAE;AACL,6BAAK;AACHjB,0BAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,OAAX,CADN;AAEHK,0BAAAA,SAAS,EAAE;AAFR;AADA,uBAjBmC;AAuB1C,wCAAkB;AAChB,2BAAG;AACDL,0BAAAA,OAAO,EAAE;AADR;AADa,uBAvBwB;AA4B1C,+BAAS;AACP,2BAAG;AACDA,0BAAAA,OAAO,EAAE,KADR;AAEDK,0BAAAA,SAAS,EAAE;AAFV,yBADI;AAKP,2BAAG;AACDL,0BAAAA,OAAO,EAAE,OADR;AAEDK,0BAAAA,SAAS,EAAE;AAFV;AALI,uBA5BiC;AAsC1C,oCAAc;AACZ,6BAAK;AACHL,0BAAAA,OAAO,EAAE,KADN;AAEHK,0BAAAA,SAAS,EAAE;AAFR;AADO;AAtC4B,qBAA/B,CADP;AA8CNJ,oBAAAA,OAAO,EAAE;AACPwJ,sBAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,+BAAO;AACLvJ,0BAAAA,KAAK,EAAE;AADF,yBAAP;AAGD,uBALM;AAMP,+BAAS,SAAS2B,CAAT,CAAW7C,MAAX,EAAmByC,CAAnB,EAAsB;AAC7BzC,wBAAAA,MAAM,CAACiG,EAAP,IAAa,OAAOxD,CAAP,GAAW,GAAxB;AACD,uBARM;AASPR,sBAAAA,KAAK,EAAE,SAASA,KAAT,GAAiB;AACtB,+BAAO;AACLf,0BAAAA,KAAK,EAAE;AADF,yBAAP;AAGD,uBAbM;AAcPd,sBAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBJ,MAAhB,EAAwB;AAC9B;AACA,4BAAIyG,GAAG,GAAG,EAAV;;AAEA,4BAAIzG,MAAM,CAACiG,EAAX,EAAe;AACb,8BAAIyE,GAAG,GAAG7K,YAAY,CAACc,QAAb,CAAsBC,MAAtB,CAA6B,SAA7B,EAAwCZ,MAAM,CAACiG,EAAP,IAAa,EAArD,CAAV;;AAEA,8BAAIyE,GAAG,IAAIA,GAAG,CAACnJ,SAAJ,KAAkB,EAA7B,EAAiC;AAC/BkF,4BAAAA,GAAG,GAAG5G,YAAY,CAACD,EAAb,CAAgB8K,GAAG,CAAC9J,MAApB,EAA4B,IAA5B,CAAN;AACD,2BAFD,MAEO;AACL6F,4BAAAA,GAAG,GAAG;AACJvF,8BAAAA,KAAK,EAAE,IADH;AAEJmF,8BAAAA,EAAE,EAAErG,MAAM,CAACiG;AAFP,6BAAN;AAID;AACF;;AAED,6BAAK,IAAIF,CAAT,IAAc/F,MAAd,EAAsB;AACpB,iCAAOA,MAAM,CAAC+F,CAAD,CAAb;AACD;;AAED,+BAAOU,GAAP;AACD;AApCM;AA9CH,mBAptDmB;AAyyD3B,4BAAU;AACRjG,oBAAAA,WAAW,EAAEX,YAAY,CAACmH,iBAAb,CAA+B;AAC1ClF,sBAAAA,KAAK,EAAE;AACL,2BAAG;AACDd,0BAAAA,OAAO,EAAE;AADR,yBADE;AAIL/C,wBAAAA,CAAC,EAAE;AACD+C,0BAAAA,OAAO,EAAE;AADR;AAJE,uBADmC;AAS1C,2BAAK;AACH,2BAAG;AACDA,0BAAAA,OAAO,EAAE,CAAC,UAAD,EAAa,OAAb,CADR;AAEDK,0BAAAA,SAAS,EAAE;AAFV;AADA,uBATqC;AAe1C,2BAAK;AACH,2BAAG;AACDL,0BAAAA,OAAO,EAAE,CAAC,UAAD,EAAa,MAAb,CADR;AAEDK,0BAAAA,SAAS,EAAE;AAFV;AADA,uBAfqC;AAqB1CU,sBAAAA,IAAI,EAAE;AACJ,6BAAK;AACHf,0BAAAA,OAAO,EAAE;AADN;AADD;AArBoC,qBAA/B,CADL;AA4BRC,oBAAAA,OAAO,EAAE;AACP+H,sBAAAA,KAAK,EAAE,SAASA,KAAT,GAAiB;AACtB,+BAAO;AACL9H,0BAAAA,KAAK,EAAE;AADF,yBAAP;AAGD,uBALM;AAMP,kCAAY,SAASyJ,OAAT,CAAiB3K,MAAjB,EAAyB;AACnC;AACA,4BAAIyG,GAAG,GAAG,EAAV;AACAzG,wBAAAA,MAAM,CAACkG,KAAP,GAAelG,MAAM,CAACkG,KAAP,IAAgB,EAA/B;;AAEA,4BAAIlG,MAAM,CAACkG,KAAP,CAAa5G,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,8BAAIrC,CAAC,GAAG+C,MAAM,CAACkG,KAAP,CAAa5G,MAAb,GAAsB,CAA9B;;AAEA,8BAAIrC,CAAC,KAAK,CAAV,EAAa;AACXA,4BAAAA,CAAC,GAAG,CAAJ;AACD;;AAED,+BAAK,IAAIC,CAAC,GAAG8C,MAAM,CAACkG,KAAP,CAAa5G,MAAb,GAAsB,CAAnC,EAAsCpC,CAAC,GAAG,CAA1C,EAA6CA,CAAC,IAAI,CAAlD,EAAqD;AACnDuJ,4BAAAA,GAAG,CAAC5E,IAAJ,CAAS7B,MAAM,CAACkG,KAAP,CAAatD,MAAb,CAAoB1F,CAApB,EAAuB,CAAvB,CAAT;AACAuJ,4BAAAA,GAAG,CAAC5E,IAAJ,CAAS;AACPX,8BAAAA,KAAK,EAAE;AADA,6BAAT;AAGD;;AAEDuF,0BAAAA,GAAG,CAAC5E,IAAJ,CAAS7B,MAAM,CAACkG,KAAP,CAAatD,MAAb,CAAoB,CAApB,EAAuB3F,CAAvB,CAAT;AACAwJ,0BAAAA,GAAG,CAACmE,OAAJ;AACD,yBAhBD,MAgBO;AACLnE,0BAAAA,GAAG,CAAC5E,IAAJ,CAAS7B,MAAM,CAACkG,KAAhB;AACD;;AAED,6BAAK,IAAIH,CAAT,IAAc/F,MAAd,EAAsB;AACpB,iCAAOA,MAAM,CAAC+F,CAAD,CAAb;AACD;;AAED,+BAAOU,GAAP;AACD,uBApCM;AAqCP,kCAAY,SAASoE,OAAT,CAAiB7K,MAAjB,EAAyB;AACnC;AACA,4BAAIyG,GAAG,GAAG,EAAV;AACAzG,wBAAAA,MAAM,CAACkG,KAAP,GAAelG,MAAM,CAACkG,KAAP,IAAgB,EAA/B;;AAEA,4BAAIlG,MAAM,CAACkG,KAAP,CAAa5G,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,8BAAIrC,CAAC,GAAG+C,MAAM,CAACkG,KAAP,CAAa5G,MAAb,GAAsB,CAA9B;;AAEA,+BAAK,IAAIpC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,CAApB,EAAuBC,CAAC,IAAI,CAA5B,EAA+B;AAC7BuJ,4BAAAA,GAAG,CAAC5E,IAAJ,CAAS7B,MAAM,CAACkG,KAAP,CAAatD,MAAb,CAAoB1F,CAApB,EAAuB,CAAvB,CAAT;AACAuJ,4BAAAA,GAAG,CAAC5E,IAAJ,CAAS;AACPX,8BAAAA,KAAK,EAAE;AADA,6BAAT;AAGD;;AAEDuF,0BAAAA,GAAG,CAAC5E,IAAJ,CAAS7B,MAAM,CAACkG,KAAP,CAAatD,MAAb,CAAoB1F,CAApB,CAAT;AACD,yBAXD,MAWO;AACLuJ,0BAAAA,GAAG,CAAC5E,IAAJ,CAAS7B,MAAM,CAACkG,KAAhB;AACD;;AAED,6BAAK,IAAIH,CAAT,IAAc/F,MAAd,EAAsB;AACpB,iCAAOA,MAAM,CAAC+F,CAAD,CAAb;AACD;;AAED,+BAAOU,GAAP;AACD;AA9DM;AA5BD,mBAzyDiB,CAq4DxB;;AAr4DwB,iBAA7B,CAn8BY,CAy0FT;AACH;AACA;;AAEA;;AAEA,oBAAI9G,MAAM,GAAG;AACXC,kBAAAA,EAAE,EAAE,SAASA,EAAT,CAAYE,KAAZ,EAAmBgL,OAAnB,EAA4B;AAC9B;AACA,wBAAI,CAAChL,KAAL,EAAY;AACV,6BAAO,EAAP;AACD;;AAED,wBAAIiL,GAAG,GAAG,EAAV;AACA,wBAAIC,GAAG,GAAG,KAAV;;AAEA,yBAAK,IAAI9N,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4C,KAAK,CAACR,MAA1B,EAAkCpC,CAAC,EAAnC,EAAuC;AACrC,0BAAI+N,MAAM,GAAGnL,KAAK,CAAC5C,CAAD,CAAlB;;AAEA,0BAAI,OAAO+N,MAAP,KAAkB,QAAtB,EAAgC;AAC9BF,wBAAAA,GAAG,IAAIE,MAAP;AACD,uBAFD,MAEO;AACLF,wBAAAA,GAAG,IAAIpL,MAAM,CAACuL,IAAP,CAAYD,MAAZ,CAAP;;AAEA,4BAAIA,MAAM,CAAC/J,KAAP,KAAiB,kBAArB,EAAyC;AACvC8J,0BAAAA,GAAG,GAAG,IAAN;AACD;AACF;AACF;;AAED,wBAAI,CAACF,OAAD,IAAY,CAACE,GAAb,IAAoBD,GAAxB,EAA6B;AAC3BA,sBAAAA,GAAG,GAAG,MAAMA,GAAN,GAAY,GAAlB;AACD;;AAED,2BAAOA,GAAP;AACD,mBA7BU;AA8BXI,kBAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBrL,KAAlB,EAAyB;AACjC,wBAAI,CAACA,KAAL,EAAY;AACV,6BAAOA,KAAP;AACD;;AAED,2BAAOH,MAAM,CAACC,EAAP,CAAUE,KAAV,EAAiB,IAAjB,CAAP;AACD,mBApCU;AAqCXoL,kBAAAA,IAAI,EAAE,SAASA,IAAT,CAAcE,GAAd,EAAmB;AACvB;AACA,wBAAIL,GAAJ;;AAEA,4BAAQK,GAAG,CAAClK,KAAZ;AACE,2BAAK,UAAL;AACE6J,wBAAAA,GAAG,GAAG,EAAN;AACA,4BAAIP,EAAE,GAAG;AACPvN,0BAAAA,CAAC,EAAE0C,MAAM,CAACwL,QAAP,CAAgBC,GAAG,CAACnO,CAApB,CADI;AAEPwE,0BAAAA,CAAC,EAAE9B,MAAM,CAACwL,QAAP,CAAgBC,GAAG,CAAC3J,CAApB,CAFI;AAGPsE,0BAAAA,CAAC,EAAEpG,MAAM,CAACwL,QAAP,CAAgBC,GAAG,CAACrF,CAApB,CAHI;AAIP9H,0BAAAA,CAAC,EAAE0B,MAAM,CAACwL,QAAP,CAAgBC,GAAG,CAACnN,CAApB,CAJI;AAKP+H,0BAAAA,CAAC,EAAErG,MAAM,CAACwL,QAAP,CAAgBC,GAAG,CAACpF,CAApB,CALI;AAMPlI,0BAAAA,CAAC,EAAE6B,MAAM,CAACwL,QAAP,CAAgBC,GAAG,CAACtN,CAApB;AANI,yBAAT,CAFF,CASK;AACH;AACA;;AAEA,4BAAI0M,EAAE,CAACvN,CAAP,EAAU;AACR,8BAAIuN,EAAE,CAACvN,CAAH,CAAKyF,KAAL,CAAW,QAAX,CAAJ,EAA0B;AACxB8H,4BAAAA,EAAE,CAACvN,CAAH,GAAO,MAAMuN,EAAE,CAACvN,CAAT,GAAa,GAApB;AACD;;AAED8N,0BAAAA,GAAG,IAAIP,EAAE,CAACvN,CAAH,GAAO,KAAd;AACD,yBAnBH,CAmBI;AACF;AACA;;;AAEA,4BAAIuN,EAAE,CAAC/I,CAAH,IAAQ+I,EAAE,CAACzE,CAAf,EAAkB;AAChBgF,0BAAAA,GAAG,IAAI,iBAAP;AACAA,0BAAAA,GAAG,IAAI,mBAAmBP,EAAE,CAAC/I,CAAH,IAAQ,EAA3B,IAAiC,iBAAjC,IAAsD+I,EAAE,CAACzE,CAAH,IAAQ,EAA9D,IAAoE,IAA3E;AACAgF,0BAAAA,GAAG,IAAI,iBAAP;AACAA,0BAAAA,GAAG,IAAI,4CAA4CP,EAAE,CAAC/I,CAAH,IAAQ,EAApD,IAA0D,IAAjE;AACAsJ,0BAAAA,GAAG,IAAI,2CAA2CP,EAAE,CAACzE,CAAH,IAAQ,EAAnD,IAAyD,KAAhE;AACD,yBA7BH,CA6BI;AACF;AACA;;;AAEA,4BAAIyE,EAAE,CAACvM,CAAP,EAAU;AACR,8BAAIuM,EAAE,CAACvM,CAAH,CAAKyE,KAAL,CAAW,QAAX,CAAJ,EAA0B;AACxB8H,4BAAAA,EAAE,CAACvM,CAAH,GAAO,MAAMuM,EAAE,CAACvM,CAAT,GAAa,GAApB;AACD;;AAED8M,0BAAAA,GAAG,IAAIP,EAAE,CAACvM,CAAV;AACD,yBAvCH,CAuCI;AACF;AACA;;;AAEA,4BAAImN,GAAG,CAACrD,KAAJ,KAAc,IAAlB,EAAwB;AACtB,8BAAIyC,EAAE,CAAC1M,CAAH,IAAQ0M,EAAE,CAACxE,CAAf,EAAkB;AAChB+E,4BAAAA,GAAG,IAAI,iBAAP;AACD;;AAED,8BAAIP,EAAE,CAAC1M,CAAP,EAAU;AACRiN,4BAAAA,GAAG,IAAI,OAAOP,EAAE,CAAC1M,CAAV,GAAc,GAArB;AACD;;AAED,8BAAI0M,EAAE,CAACxE,CAAP,EAAU;AACR+E,4BAAAA,GAAG,IAAI,kBAAkBP,EAAE,CAACxE,CAArB,GAAyB,IAAhC;AACD;AACF,yBAZD,MAYO,IAAIoF,GAAG,CAACrD,KAAJ,KAAc,WAAlB,EAA+B;AACpC,8BAAIyC,EAAE,CAAC1M,CAAP,EAAU;AACRiN,4BAAAA,GAAG,IAAI,iBAAP;AACAA,4BAAAA,GAAG,IAAI,OAAOP,EAAE,CAAC1M,CAAV,GAAc,GAArB;AACD;;AAED,8BAAI0M,EAAE,CAACxE,CAAP,EAAU;AACR+E,4BAAAA,GAAG,IAAI,iBAAP;AACAA,4BAAAA,GAAG,IAAI,kBAAkBP,EAAE,CAACxE,CAArB,GAAyB,IAAhC;AACD;AACF,yBAVM,MAUA;AACL,8BAAIwE,EAAE,CAACxE,CAAP,EAAU;AACR+E,4BAAAA,GAAG,IAAI,iBAAP;AACAA,4BAAAA,GAAG,IAAI,kBAAkBP,EAAE,CAACxE,CAArB,GAAyB,IAAhC;AACD;;AAED,8BAAIwE,EAAE,CAAC1M,CAAP,EAAU;AACRiN,4BAAAA,GAAG,IAAI,iBAAP;AACAA,4BAAAA,GAAG,IAAI,OAAOP,EAAE,CAAC1M,CAAV,GAAc,GAArB;AACD;AACF;;AAED;;AAEF,2BAAK,IAAL;AACEiN,wBAAAA,GAAG,GAAG,cAAcK,GAAG,CAAC/E,EAAlB,GAAuB,GAA7B;AACA;;AAEF,2BAAK,MAAL;AACE,4BAAI+E,GAAG,CAAC/E,EAAJ,CAAO3D,KAAP,CAAa,OAAb,CAAJ,EAA2B;AACzB0I,0BAAAA,GAAG,CAAC/E,EAAJ,GAAS+E,GAAG,CAAC/E,EAAJ,CAAOpG,OAAP,CAAe,GAAf,EAAoB,GAApB,EAAyBA,OAAzB,CAAiC,GAAjC,EAAsC,WAAtC,CAAT;AACA8K,0BAAAA,GAAG,GAAG,cAAcK,GAAG,CAAC/E,EAAlB,GAAuB,GAA7B;AACD,yBAHD,MAGO;AACL0E,0BAAAA,GAAG,GAAG,YAAYK,GAAG,CAAC/E,EAAhB,GAAqB,GAA3B;AACD;;AAED;;AAEF,2BAAK,eAAL;AACE0E,wBAAAA,GAAG,GAAG,cAAcK,GAAG,CAAC/E,EAAlB,GAAuB,GAA7B;AACA;;AAEF,2BAAK,sBAAL;AACE0E,wBAAAA,GAAG,GAAG,gBAAgBpL,MAAM,CAACwL,QAAP,CAAgBC,GAAG,CAAC/E,EAApB,CAAtB;AACA;;AAEF,2BAAK,gCAAL;AACE0E,wBAAAA,GAAG,GAAG,gBAAgBpL,MAAM,CAACwL,QAAP,CAAgBC,GAAG,CAAC/E,EAApB,CAAtB;AACA;;AAEF,2BAAK,MAAL;AACE0E,wBAAAA,GAAG,GAAGpL,MAAM,CAAC0L,QAAP,CAAgBD,GAAG,CAACvE,KAApB,CAAN;;AAEA,4BAAI,CAACkE,GAAL,EAAU;AACR,gCAAM,CAAC,iBAAD,EAAoB,sCAAsCK,GAAG,CAACvE,KAA1C,GAAkD,GAAtE,CAAN;AACD;;AAED;;AAEF,2BAAK,MAAL;AACE,4BAAIyE,CAAC,GAAG,YAAYF,GAAG,CAAC/E,EAAhB,GAAqB,IAArB,GAA4B+E,GAAG,CAAC7E,EAAhC,GAAqC,GAA7C;AACAwE,wBAAAA,GAAG,GAAG,6BAA6BO,CAA7B,GAAiC,IAAjC,GAAwCA,CAAxC,GAA4C,IAA5C,GAAmDA,CAAnD,GAAuD,IAAvD,GAA8DA,CAA9D,GAAkE,GAAxE;AACA;;AAEF,2BAAK,SAAL;AACE,4BAAIxN,CAAC,GAAG,YAAY6B,MAAM,CAACwL,QAAP,CAAgBC,GAAG,CAAC/E,EAApB,CAAZ,GAAsC,IAAtC,GAA6C1G,MAAM,CAACwL,QAAP,CAAgBC,GAAG,CAAC7E,EAApB,CAA7C,GAAuE,GAA/E;AACAwE,wBAAAA,GAAG,GAAG,6BAA6BjN,CAA7B,GAAiC,IAAjC,GAAwCA,CAAxC,GAA4C,IAA5C,GAAmDA,CAAnD,GAAuD,IAAvD,GAA8DA,CAA9D,GAAkE,GAAxE;AACA;;AAEF,2BAAK,UAAL;AACEiN,wBAAAA,GAAG,GAAGK,GAAG,CAAC/E,EAAJ,GAAS,GAAf;AACA;;AAEF,2BAAK,SAAL;AACE0E,wBAAAA,GAAG,GAAG,YAAYpL,MAAM,CAACwL,QAAP,CAAgBC,GAAG,CAAC/E,EAApB,CAAZ,GAAsC,IAAtC,GAA6C1G,MAAM,CAACwL,QAAP,CAAgBC,GAAG,CAAC7E,EAApB,CAA7C,GAAuE,GAA7E;AACA;;AAEF,2BAAK,SAAL;AACEwE,wBAAAA,GAAG,GAAG,eAAepL,MAAM,CAACwL,QAAP,CAAgBC,GAAG,CAAC/E,EAApB,CAAf,GAAyC,IAAzC,GAAgD1G,MAAM,CAACwL,QAAP,CAAgBC,GAAG,CAAC7E,EAApB,CAAhD,GAA0E,GAAhF;AACA;;AAEF,2BAAK,UAAL;AACEwE,wBAAAA,GAAG,GAAG,gBAAgBpL,MAAM,CAACwL,QAAP,CAAgBC,GAAG,CAAC/E,EAApB,CAAhB,GAA0C,IAA1C,GAAiD1G,MAAM,CAACwL,QAAP,CAAgBC,GAAG,CAAC7E,EAApB,CAAjD,GAA2E,GAAjF;AACA;;AAEF,2BAAK,YAAL;AACEwE,wBAAAA,GAAG,GACD,kBAAkBpL,MAAM,CAACwL,QAAP,CAAgBC,GAAG,CAAC/E,EAApB,CAAlB,GAA4C,KAA5C,GAAoD1G,MAAM,CAACwL,QAAP,CAAgBC,GAAG,CAAC7E,EAApB,CAApD,GAA8E,GADhF;AAEA;;AAEF,2BAAK,OAAL;AACEwE,wBAAAA,GAAG,GAAG,cAAcK,GAAG,CAACrH,MAAlB,GAA2B,IAA3B,GAAkCpE,MAAM,CAACwL,QAAP,CAAgBC,GAAG,CAACpH,MAApB,CAAlC,GAAgE,IAAtE;AACA;;AAEF,2BAAK,QAAL;AACE+G,wBAAAA,GAAG,GAAG,aAAaK,GAAG,CAACrE,KAAjB,GAAyB,GAA/B;AACA;;AAEF,2BAAK,OAAL;AACE,4BAAIwE,EAAE,GAAG;AACPhE,0BAAAA,EAAE,EAAE5H,MAAM,CAACwL,QAAP,CAAgBC,GAAG,CAAC7D,EAApB,CADG;AAEP6B,0BAAAA,EAAE,EAAEzJ,MAAM,CAACwL,QAAP,CAAgBC,GAAG,CAAChC,EAApB;AAFG,yBAAT;;AAKA,4BAAIoC,KAAK,GAAG,QAAQ7L,MAAM,CAAC8L,SAAP,CAAiBL,GAAG,CAAC9D,CAArB,CAApB;;AAEA,4BAAIiE,EAAE,CAACnC,EAAP,EAAW;AACToC,0BAAAA,KAAK,IAAI,OAAOD,EAAE,CAACnC,EAAV,GAAe,IAAxB;AACD;;AAED,4BAAImC,EAAE,CAAChE,EAAP,EAAW;AACTiE,0BAAAA,KAAK,IAAI,MAAMD,EAAE,CAAChE,EAAT,GAAc,GAAvB;AACD,yBAFD,MAEO;AACLiE,0BAAAA,KAAK,IAAI,IAAT;AACD;;AAEDT,wBAAAA,GAAG,GAAGS,KAAN;AACA;;AAEF,2BAAK,UAAL;AACET,wBAAAA,GAAG,GAAGpL,MAAM,CAAC+L,YAAP,CAAoBN,GAAG,CAACvE,KAAxB,CAAN;AACA;;AAEF,2BAAK,kBAAL;AACEkE,wBAAAA,GAAG,GAAGK,GAAG,CAAC/E,EAAJ,GAAS,GAAf,CADF,CACsB;;AAEpB;;AAEF,2BAAK,OAAL;AACE0E,wBAAAA,GAAG,GAAG,GAAN;AACA;;AAEF,2BAAK,YAAL;AACEA,wBAAAA,GAAG,GAAG,GAAN;AACA;;AAEF,2BAAK,YAAL;AACEA,wBAAAA,GAAG,GAAG,GAAN;AACA;;AAEF,2BAAK,YAAL;AACEA,wBAAAA,GAAG,GAAG,aAAN;AACA;;AAEF,2BAAK,gBAAL;AACEA,wBAAAA,GAAG,GAAG,aAAN;AACA;;AAEF,2BAAK,cAAL;AACEA,wBAAAA,GAAG,GAAG,KAAN;AACA;;AAEF,2BAAK,qBAAL;AACEA,wBAAAA,GAAG,GAAG,MAAMK,GAAG,CAAC/E,EAAV,GAAe,cAArB;AACA;;AAEF,2BAAK,qBAAL;AACE0E,wBAAAA,GAAG,GAAG,MAAMK,GAAG,CAAC/E,EAAV,GAAe,cAArB;AACA;;AAEF,2BAAK,qBAAL;AACE0E,wBAAAA,GAAG,GAAG,MAAMK,GAAG,CAAC/E,EAAV,GAAe,cAArB;AACA;;AAEF,2BAAK,QAAL;AACE0E,wBAAAA,GAAG,GAAG,WAAN;AACA;;AAEF,2BAAK,mBAAL;AACEA,wBAAAA,GAAG,GAAG,gBAAN;AACA;;AAEF,2BAAK,cAAL;AACEA,wBAAAA,GAAG,GAAG,gCAAN;AACA;;AAEF,2BAAK,MAAL;AACEA,wBAAAA,GAAG,GAAG,WAAN;AACA;;AAEF,2BAAK,OAAL;AACEA,wBAAAA,GAAG,GAAG,UAAN;AACA;;AAEF,2BAAK,MAAL;AACEA,wBAAAA,GAAG,GAAG,SAAN;AACA;;AAEF,2BAAK,YAAL;AACEA,wBAAAA,GAAG,GAAG,+BAAN;AACA;;AAEF,2BAAK,OAAL;AACEA,wBAAAA,GAAG,GAAG,UAAN;AACA;;AAEF,2BAAK,OAAL;AACEA,wBAAAA,GAAG,GAAG,SAAN;AACA;;AAEF,2BAAK,GAAL;AACEA,wBAAAA,GAAG,GAAG,SAAN;AACA;;AAEF,2BAAK,GAAL;AACEA,wBAAAA,GAAG,GAAG,WAAN;AACA;;AAEF,2BAAK,UAAL;AACEA,wBAAAA,GAAG,GAAG,UAAN;AACA;;AAEF,2BAAK,GAAL;AACEA,wBAAAA,GAAG,GAAG,GAAN;AACA;;AAEF,2BAAK,KAAL;AACEA,wBAAAA,GAAG,GAAG,SAAN;AACA;;AAEF;AACEY,wBAAAA,WAAW,CAACP,GAAD,CAAX;AACA,8BAAM,CAAC,YAAD,EAAe,8BAAf,CAAN;AACF;AAvRF;;AA0RAQ,oBAAAA,YAAY,CAACb,GAAD,CAAZ;AACA,2BAAOA,GAAP;AACD,mBArUU;AAsUXU,kBAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBxO,CAAnB,EAAsB;AAC/B,4BAAQA,CAAR;AACE,2BAAK,IAAL;AACE,+BAAO,YAAP;;AAEF,2BAAK,QAAL;AACE,+BAAO,YAAP;;AAEF,2BAAK,QAAL;AACE,+BAAO,YAAP;;AAEF,2BAAK,IAAL;AACE,+BAAO,WAAP;;AAEF,2BAAK,KAAL;AACE,+BAAO,gBAAP;;AAEF,2BAAK,MAAL;AACE,+BAAO,iBAAP;;AAEF,2BAAK,KAAL;AACE,+BAAO,mBAAP;;AAEF,2BAAK,QAAL;AACE,+BAAO,mBAAP;;AAEF,2BAAK,MAAL;AACE,+BAAO,kBAAP;;AAEF,2BAAK,MAAL;AACE,+BAAO,iBAAP;;AAEF;AACE0O,wBAAAA,WAAW,CAAC1O,CAAD,CAAX;AACA,8BAAM,CAAC,YAAD,EAAe,8BAAf,CAAN;AAjCJ;AAmCD,mBA1WU;AA2WXoO,kBAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBpO,CAAlB,EAAqB;AAC7B,4BAAQA,CAAR;AACE,2BAAK,GAAL;AACE,+BAAO,KAAP;;AAEF,2BAAK,GAAL;AACE,+BAAO,KAAP;;AAEF,2BAAK,GAAL;AACE,+BAAO,KAAP;;AAEF,2BAAK,GAAL;AACE,+BAAO,KAAP;;AAEF,2BAAK,GAAL;AACE,+BAAO,WAAP;;AAEF,2BAAK,GAAL;AACE,+BAAO,WAAP;;AAEF,2BAAK,GAAL;AACE,+BAAO,gBAAP;;AAEF,2BAAK,IAAL;AACE,+BAAO,sEAAP;;AAEF,2BAAK,IAAL;AACE,+BAAO,mFAAP;;AAEF,2BAAK,KAAL;AACE,+BAAO,mFAAP;;AAEF,2BAAK,KAAL;AACE,+BAAO,mFAAP;;AAEF,2BAAK,KAAL;AACE,+BAAO,4BAAP;;AAEF,2BAAK,MAAL;AACE,+BAAO,oCAAP;;AAEF,2BAAK,IAAL;AACE,+BAAO,gBAAP;;AAEF,2BAAK,IAAL;AACE,+BAAO,eAAP;;AAEF,2BAAK,GAAL;AACE,+BAAO,KAAP;;AAEF,2BAAK,GAAL;AACE,+BAAO,KAAP;;AAEF;AACE0O,wBAAAA,WAAW,CAAC1O,CAAD,CAAX;AACA,8BAAM,CAAC,YAAD,EAAe,8BAAf,CAAN;AAtDJ;AAwDD,mBApaU;AAqaXyO,kBAAAA,YAAY,EAAE,SAASA,YAAT,CAAsBzO,CAAtB,EAAyB;AACrC,4BAAQA,CAAR;AACE,2BAAK,GAAL;AACE,+BAAO,SAAP;;AAEF,2BAAK,GAAL;AACE,+BAAO,SAAP;;AAEF,2BAAK,GAAL;AACE,+BAAO,SAAP;;AAEF,2BAAK,GAAL;AACE,+BAAO,SAAP;;AAEF,2BAAK,GAAL;AACE,+BAAO,SAAP;;AAEF,2BAAK,IAAL;AACE,+BAAO,YAAP;;AAEF,2BAAK,IAAL;AACE,+BAAO,YAAP;;AAEF,2BAAK,MAAL;AACE,+BAAO,YAAP;;AAEF,2BAAK,UAAL;AACE,+BAAO,gBAAP;;AAEF,2BAAK,YAAL;AACE,+BAAO,gBAAP;;AAEF,2BAAK,GAAL;AACE,+BAAO,iBAAP;;AAEF,2BAAK,KAAL;AACE,+BAAO,iBAAP;;AAEF,2BAAK,GAAL;AACE,+BAAO,eAAP;;AAEF,2BAAK,KAAL;AACE,+BAAO,eAAP;;AAEF;AACE0O,wBAAAA,WAAW,CAAC1O,CAAD,CAAX;AACA,8BAAM,CAAC,YAAD,EAAe,8BAAf,CAAN;AA7CJ;AA+CD;AArdU,iBAAb,CA/0FY,CAqyGT;AACH;AACA;AACA;;AAEA;;AAEA,yBAAS0O,WAAT,CAAqB1O,CAArB,EAAwB,CAAE;AAC1B;;;AAEA,yBAAS2O,YAAT,CAAsB3O,CAAtB,EAAyB,CAAE;AAC5B,eAhzGA,EAAD;AAizGA0B,cAAAA,mBAAmB,GAAGA,mBAAmB,CAAC,SAAD,CAAzC;AACA;;AAAS,qBAAOA,mBAAP;AACT;AACD,aA94Ge;AAAhB;AA+4GD,SAx5GD,EAJ0F,CA+5G3F;;;AAEA,2BAAAkN,WAAW,GAAGnP,MAAM,CAACF,OAArB;AAGC,OAp6GD,EAo6GG,OAAO;AACR,uBAAeL,IADP;AAER,uBAAeE;AAFP,OAAP,CAp6GH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from '../katex.js';\nimport { __cjsMetaURL as _req0} from '../katex.js';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n (function webpackUniversalModuleDefinition(root, factory) {\n   if (typeof exports === \"object\" && typeof module === \"object\")\n     module.exports = factory(require(\"../katex.js\"));\n   else if (typeof define === \"function\" && define.amd) define([\"katex\"], factory);\n   else {\n     var a = typeof exports === \"object\" ? factory(require(\"../katex.js\")) : factory(root[\"katex\"]);\n     for (var i in a) (typeof exports === \"object\" ? exports : root)[i] = a[i];\n   }\n })(typeof self !== \"undefined\" ? self : this, function (__WEBPACK_EXTERNAL_MODULE__771__) {\n   return /******/ (function () {\n     // webpackBootstrap\n     /******/ \"use strict\";\n     /******/ var __webpack_modules__ = {\n       /***/ 771: /***/ function (module) {\n         module.exports = __WEBPACK_EXTERNAL_MODULE__771__;\n\n         /***/\n       },\n\n       /******/\n     };\n     /************************************************************************/\n     /******/ // The module cache\n     /******/ var __webpack_module_cache__ = {};\n     /******/\n     /******/ // The require function\n     /******/ function __webpack_require__(moduleId) {\n       /******/ // Check if module is in cache\n       /******/ var cachedModule = __webpack_module_cache__[moduleId];\n       /******/ if (cachedModule !== undefined) {\n         /******/ return cachedModule.exports;\n         /******/\n       }\n       /******/ // Create a new module (and put it into the cache)\n       /******/ var module = (__webpack_module_cache__[moduleId] = {\n         /******/ // no module.id needed\n         /******/ // no module.loaded needed\n         /******/ exports: {},\n         /******/\n       });\n       /******/\n       /******/ // Execute the module function\n       /******/ __webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n       /******/\n       /******/ // Return the exports of the module\n       /******/ return module.exports;\n       /******/\n     }\n     /******/\n     /************************************************************************/\n     /******/ /* webpack/runtime/compat get default export */ /******/ !(function () {\n       /******/ // getDefaultExport function for compatibility with non-harmony modules\n       /******/ __webpack_require__.n = function (module) {\n         /******/ var getter =\n           module && module.__esModule\n             ? /******/ function () {\n                 return module[\"default\"];\n               }\n             : /******/ function () {\n                 return module;\n               };\n         /******/ __webpack_require__.d(getter, { a: getter });\n         /******/ return getter;\n         /******/\n       };\n       /******/\n     })();\n     /******/\n     /******/ /* webpack/runtime/define property getters */ /******/ !(function () {\n       /******/ // define getter functions for harmony exports\n       /******/ __webpack_require__.d = function (exports, definition) {\n         /******/ for (var key in definition) {\n           /******/ if (\n             __webpack_require__.o(definition, key) &&\n             !__webpack_require__.o(exports, key)\n           ) {\n             /******/ Object.defineProperty(exports, key, {\n               enumerable: true,\n               get: definition[key],\n             });\n             /******/\n           }\n           /******/\n         }\n         /******/\n       };\n       /******/\n     })();\n     /******/\n     /******/ /* webpack/runtime/hasOwnProperty shorthand */ /******/ !(function () {\n       /******/ __webpack_require__.o = function (obj, prop) {\n         return Object.prototype.hasOwnProperty.call(obj, prop);\n       };\n       /******/\n     })();\n     /******/\n     /************************************************************************/\n     var __webpack_exports__ = {};\n     // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n     !(function () {\n       /* harmony import */ var katex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(771);\n       /* harmony import */ var katex__WEBPACK_IMPORTED_MODULE_0___default =\n         /*#__PURE__*/ __webpack_require__.n(katex__WEBPACK_IMPORTED_MODULE_0__);\n       /* eslint-disable */\n\n       /* -*- Mode: Javascript; indent-tabs-mode:nil; js-indent-level: 2 -*- */\n\n       /* vim: set ts=2 et sw=2 tw=80: */\n\n       /*************************************************************\n        *\n        *  KaTeX mhchem.js\n        *\n        *  This file implements a KaTeX version of mhchem version 3.3.0.\n        *  It is adapted from MathJax/extensions/TeX/mhchem.js\n        *  It differs from the MathJax version as follows:\n        *    1. The interface is changed so that it can be called from KaTeX, not MathJax.\n        *    2. \\rlap and \\llap are replaced with \\mathrlap and \\mathllap.\n        *    3. Four lines of code are edited in order to use \\raisebox instead of \\raise.\n        *    4. The reaction arrow code is simplified. All reaction arrows are rendered\n        *       using KaTeX extensible arrows instead of building non-extensible arrows.\n        *    5. \\tripledash vertical alignment is slightly adjusted.\n        *\n        *    This code, as other KaTeX code, is released under the MIT license.\n        *\n        * /*************************************************************\n        *\n        *  MathJax/extensions/TeX/mhchem.js\n        *\n        *  Implements the \\ce command for handling chemical formulas\n        *  from the mhchem LaTeX package.\n        *\n        *  ---------------------------------------------------------------------\n        *\n        *  Copyright (c) 2011-2015 The MathJax Consortium\n        *  Copyright (c) 2015-2018 Martin Hensel\n        *\n        *  Licensed under the Apache License, Version 2.0 (the \"License\");\n        *  you may not use this file except in compliance with the License.\n        *  You may obtain a copy of the License at\n        *\n        *      http://www.apache.org/licenses/LICENSE-2.0\n        *\n        *  Unless required by applicable law or agreed to in writing, software\n        *  distributed under the License is distributed on an \"AS IS\" BASIS,\n        *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n        *  See the License for the specific language governing permissions and\n        *  limitations under the License.\n        */\n       //\n       // Coding Style\n       //   - use '' for identifiers that can by minified/uglified\n       //   - use \"\" for strings that need to stay untouched\n       // version: \"3.3.0\" for MathJax and KaTeX\n       // Add \\ce, \\pu, and \\tripledash to the KaTeX macros.\n       katex__WEBPACK_IMPORTED_MODULE_0___default().__defineMacro(\"\\\\ce\", function (context) {\n         return chemParse(context.consumeArgs(1)[0], \"ce\");\n       });\n\n       katex__WEBPACK_IMPORTED_MODULE_0___default().__defineMacro(\"\\\\pu\", function (context) {\n         return chemParse(context.consumeArgs(1)[0], \"pu\");\n       }); //  Needed for \\bond for the ~ forms\n       //  Raise by 2.56mu, not 2mu. We're raising a hyphen-minus, U+002D, not\n       //  a mathematical minus, U+2212. So we need that extra 0.56.\n\n       katex__WEBPACK_IMPORTED_MODULE_0___default().__defineMacro(\n         \"\\\\tripledash\",\n         \"{\\\\vphantom{-}\\\\raisebox{2.56mu}{$\\\\mkern2mu\" +\n           \"\\\\tiny\\\\text{-}\\\\mkern1mu\\\\text{-}\\\\mkern1mu\\\\text{-}\\\\mkern2mu$}}\",\n       );\n\n       //\n       //  This is the main function for handing the \\ce and \\pu commands.\n       //  It takes the argument to \\ce or \\pu and returns the corresponding TeX string.\n       //\n\n       var chemParse = function chemParse(tokens, stateMachine) {\n         // Recreate the argument string from KaTeX's array of tokens.\n         var str = \"\";\n         var expectedLoc = tokens[tokens.length - 1].loc.start;\n\n         for (var i = tokens.length - 1; i >= 0; i--) {\n           if (tokens[i].loc.start > expectedLoc) {\n             // context.consumeArgs has eaten a space.\n             str += \" \";\n             expectedLoc = tokens[i].loc.start;\n           }\n\n           str += tokens[i].text;\n           expectedLoc += tokens[i].text.length;\n         }\n\n         var tex = texify.go(mhchemParser.go(str, stateMachine));\n         return tex;\n       }; //\n       // Core parser for mhchem syntax  (recursive)\n       //\n\n       /** @type {MhchemParser} */\n\n       var mhchemParser = {\n         //\n         // Parses mchem \\ce syntax\n         //\n         // Call like\n         //   go(\"H2O\");\n         //\n         go: function go(input, stateMachine) {\n           if (!input) {\n             return [];\n           }\n\n           if (stateMachine === undefined) {\n             stateMachine = \"ce\";\n           }\n\n           var state = \"0\"; //\n           // String buffers for parsing:\n           //\n           // buffer.a == amount\n           // buffer.o == element\n           // buffer.b == left-side superscript\n           // buffer.p == left-side subscript\n           // buffer.q == right-side subscript\n           // buffer.d == right-side superscript\n           //\n           // buffer.r == arrow\n           // buffer.rdt == arrow, script above, type\n           // buffer.rd == arrow, script above, content\n           // buffer.rqt == arrow, script below, type\n           // buffer.rq == arrow, script below, content\n           //\n           // buffer.text_\n           // buffer.rm\n           // etc.\n           //\n           // buffer.parenthesisLevel == int, starting at 0\n           // buffer.sb == bool, space before\n           // buffer.beginsWithBond == bool\n           //\n           // These letters are also used as state names.\n           //\n           // Other states:\n           // 0 == begin of main part (arrow/operator unlikely)\n           // 1 == next entity\n           // 2 == next entity (arrow/operator unlikely)\n           // 3 == next atom\n           // c == macro\n           //\n\n           /** @type {Buffer} */\n\n           var buffer = {};\n           buffer[\"parenthesisLevel\"] = 0;\n           input = input.replace(/\\n/g, \" \");\n           input = input.replace(/[\\u2212\\u2013\\u2014\\u2010]/g, \"-\");\n           input = input.replace(/[\\u2026]/g, \"...\"); //\n           // Looks through mhchemParser.transitions, to execute a matching action\n           // (recursive)\n           //\n\n           var lastInput;\n           var watchdog = 10;\n           /** @type {ParserOutput[]} */\n\n           var output = [];\n\n           while (true) {\n             if (lastInput !== input) {\n               watchdog = 10;\n               lastInput = input;\n             } else {\n               watchdog--;\n             } //\n             // Find actions in transition table\n             //\n\n             var machine = mhchemParser.stateMachines[stateMachine];\n             var t = machine.transitions[state] || machine.transitions[\"*\"];\n\n             iterateTransitions: for (var i = 0; i < t.length; i++) {\n               var matches = mhchemParser.patterns.match_(t[i].pattern, input);\n\n               if (matches) {\n                 //\n                 // Execute actions\n                 //\n                 var task = t[i].task;\n\n                 for (var iA = 0; iA < task.action_.length; iA++) {\n                   var o; //\n                   // Find and execute action\n                   //\n\n                   if (machine.actions[task.action_[iA].type_]) {\n                     o = machine.actions[task.action_[iA].type_](\n                       buffer,\n                       matches.match_,\n                       task.action_[iA].option,\n                     );\n                   } else if (mhchemParser.actions[task.action_[iA].type_]) {\n                     o = mhchemParser.actions[task.action_[iA].type_](\n                       buffer,\n                       matches.match_,\n                       task.action_[iA].option,\n                     );\n                   } else {\n                     throw [\n                       \"MhchemBugA\",\n                       \"mhchem bug A. Please report. (\" + task.action_[iA].type_ + \")\",\n                     ]; // Trying to use non-existing action\n                   } //\n                   // Add output\n                   //\n\n                   mhchemParser.concatArray(output, o);\n                 } //\n                 // Set next state,\n                 // Shorten input,\n                 // Continue with next character\n                 //   (= apply only one transition per position)\n                 //\n\n                 state = task.nextState || state;\n\n                 if (input.length > 0) {\n                   if (!task.revisit) {\n                     input = matches.remainder;\n                   }\n\n                   if (!task.toContinue) {\n                     break iterateTransitions;\n                   }\n                 } else {\n                   return output;\n                 }\n               }\n             } //\n             // Prevent infinite loop\n             //\n\n             if (watchdog <= 0) {\n               throw [\"MhchemBugU\", \"mhchem bug U. Please report.\"]; // Unexpected character\n             }\n           }\n         },\n         concatArray: function concatArray(a, b) {\n           if (b) {\n             if (Array.isArray(b)) {\n               for (var iB = 0; iB < b.length; iB++) {\n                 a.push(b[iB]);\n               }\n             } else {\n               a.push(b);\n             }\n           }\n         },\n         patterns: {\n           //\n           // Matching patterns\n           // either regexps or function that return null or {match_:\"a\", remainder:\"bc\"}\n           //\n           patterns: {\n             // property names must not look like integers (\"2\") for correct property traversal order, later on\n             empty: /^$/,\n             else: /^./,\n             else2: /^./,\n             space: /^\\s/,\n             \"space A\": /^\\s(?=[A-Z\\\\$])/,\n             space$: /^\\s$/,\n             \"a-z\": /^[a-z]/,\n             x: /^x/,\n             x$: /^x$/,\n             i$: /^i$/,\n             letters:\n               /^(?:[a-zA-Z\\u03B1-\\u03C9\\u0391-\\u03A9?@]|(?:\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\\s+|\\{\\}|(?![a-zA-Z]))))+/,\n             \"\\\\greek\":\n               /^\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\\s+|\\{\\}|(?![a-zA-Z]))/,\n             \"one lowercase latin letter $\": /^(?:([a-z])(?:$|[^a-zA-Z]))$/,\n             \"$one lowercase latin letter$ $\": /^\\$(?:([a-z])(?:$|[^a-zA-Z]))\\$$/,\n             \"one lowercase greek letter $\":\n               /^(?:\\$?[\\u03B1-\\u03C9]\\$?|\\$?\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega)\\s*\\$?)(?:\\s+|\\{\\}|(?![a-zA-Z]))$/,\n             digits: /^[0-9]+/,\n             \"-9.,9\": /^[+\\-]?(?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+))/,\n             \"-9.,9 no missing 0\": /^[+\\-]?[0-9]+(?:[.,][0-9]+)?/,\n             \"(-)(9.,9)(e)(99)\": function e99(input) {\n               var m = input.match(\n                 /^(\\+\\-|\\+\\/\\-|\\+|\\-|\\\\pm\\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+))?(\\((?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+))\\))?(?:([eE]|\\s*(\\*|x|\\\\times|\\u00D7)\\s*10\\^)([+\\-]?[0-9]+|\\{[+\\-]?[0-9]+\\}))?/,\n               );\n\n               if (m && m[0]) {\n                 return {\n                   match_: m.splice(1),\n                   remainder: input.substr(m[0].length),\n                 };\n               }\n\n               return null;\n             },\n             \"(-)(9)^(-9)\": function _(input) {\n               var m = input.match(\n                 /^(\\+\\-|\\+\\/\\-|\\+|\\-|\\\\pm\\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+)?)\\^([+\\-]?[0-9]+|\\{[+\\-]?[0-9]+\\})/,\n               );\n\n               if (m && m[0]) {\n                 return {\n                   match_: m.splice(1),\n                   remainder: input.substr(m[0].length),\n                 };\n               }\n\n               return null;\n             },\n             \"state of aggregation $\": function stateOfAggregation$(input) {\n               // ... or crystal system\n               var a = mhchemParser.patterns.findObserveGroups(\n                 input,\n                 \"\",\n                 /^\\([a-z]{1,3}(?=[\\),])/,\n                 \")\",\n                 \"\",\n               ); // (aq), (aq,$\\infty$), (aq, sat)\n\n               if (a && a.remainder.match(/^($|[\\s,;\\)\\]\\}])/)) {\n                 return a;\n               } //  AND end of 'phrase'\n\n               var m = input.match(/^(?:\\((?:\\\\ca\\s?)?\\$[amothc]\\$\\))/); // OR crystal system ($o$) (\\ca$c$)\n\n               if (m) {\n                 return {\n                   match_: m[0],\n                   remainder: input.substr(m[0].length),\n                 };\n               }\n\n               return null;\n             },\n             \"_{(state of aggregation)}$\": /^_\\{(\\([a-z]{1,3}\\))\\}/,\n             \"{[(\": /^(?:\\\\\\{|\\[|\\()/,\n             \")]}\": /^(?:\\)|\\]|\\\\\\})/,\n             \", \": /^[,;]\\s*/,\n             \",\": /^[,;]/,\n             \".\": /^[.]/,\n             \". \": /^([.\\u22C5\\u00B7\\u2022])\\s*/,\n             \"...\": /^\\.\\.\\.(?=$|[^.])/,\n             \"* \": /^([*])\\s*/,\n             \"^{(...)}\": function _(input) {\n               return mhchemParser.patterns.findObserveGroups(input, \"^{\", \"\", \"\", \"}\");\n             },\n             \"^($...$)\": function $$(input) {\n               return mhchemParser.patterns.findObserveGroups(input, \"^\", \"$\", \"$\", \"\");\n             },\n             \"^a\": /^\\^([0-9]+|[^\\\\_])/,\n             \"^\\\\x{}{}\": function x(input) {\n               return mhchemParser.patterns.findObserveGroups(\n                 input,\n                 \"^\",\n                 /^\\\\[a-zA-Z]+\\{/,\n                 \"}\",\n                 \"\",\n                 \"\",\n                 \"{\",\n                 \"}\",\n                 \"\",\n                 true,\n               );\n             },\n             \"^\\\\x{}\": function x(input) {\n               return mhchemParser.patterns.findObserveGroups(input, \"^\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\");\n             },\n             \"^\\\\x\": /^\\^(\\\\[a-zA-Z]+)\\s*/,\n             \"^(-1)\": /^\\^(-?\\d+)/,\n             \"'\": /^'/,\n             \"_{(...)}\": function _(input) {\n               return mhchemParser.patterns.findObserveGroups(input, \"_{\", \"\", \"\", \"}\");\n             },\n             \"_($...$)\": function _$$(input) {\n               return mhchemParser.patterns.findObserveGroups(input, \"_\", \"$\", \"$\", \"\");\n             },\n             _9: /^_([+\\-]?[0-9]+|[^\\\\])/,\n             \"_\\\\x{}{}\": function _X(input) {\n               return mhchemParser.patterns.findObserveGroups(\n                 input,\n                 \"_\",\n                 /^\\\\[a-zA-Z]+\\{/,\n                 \"}\",\n                 \"\",\n                 \"\",\n                 \"{\",\n                 \"}\",\n                 \"\",\n                 true,\n               );\n             },\n             \"_\\\\x{}\": function _X(input) {\n               return mhchemParser.patterns.findObserveGroups(input, \"_\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\");\n             },\n             \"_\\\\x\": /^_(\\\\[a-zA-Z]+)\\s*/,\n             \"^_\": /^(?:\\^(?=_)|\\_(?=\\^)|[\\^_]$)/,\n             \"{}\": /^\\{\\}/,\n             \"{...}\": function _(input) {\n               return mhchemParser.patterns.findObserveGroups(input, \"\", \"{\", \"}\", \"\");\n             },\n             \"{(...)}\": function _(input) {\n               return mhchemParser.patterns.findObserveGroups(input, \"{\", \"\", \"\", \"}\");\n             },\n             \"$...$\": function $$(input) {\n               return mhchemParser.patterns.findObserveGroups(input, \"\", \"$\", \"$\", \"\");\n             },\n             \"${(...)}$\": function $$(input) {\n               return mhchemParser.patterns.findObserveGroups(input, \"${\", \"\", \"\", \"}$\");\n             },\n             \"$(...)$\": function $$(input) {\n               return mhchemParser.patterns.findObserveGroups(input, \"$\", \"\", \"\", \"$\");\n             },\n             \"=<>\": /^[=<>]/,\n             \"#\": /^[#\\u2261]/,\n             \"+\": /^\\+/,\n             \"-$\": /^-(?=[\\s_},;\\]/]|$|\\([a-z]+\\))/,\n             // -space -, -; -] -/ -$ -state-of-aggregation\n             \"-9\": /^-(?=[0-9])/,\n             \"- orbital overlap\": /^-(?=(?:[spd]|sp)(?:$|[\\s,;\\)\\]\\}]))/,\n             \"-\": /^-/,\n             \"pm-operator\": /^(?:\\\\pm|\\$\\\\pm\\$|\\+-|\\+\\/-)/,\n             operator: /^(?:\\+|(?:[\\-=<>]|<<|>>|\\\\approx|\\$\\\\approx\\$)(?=\\s|$|-?[0-9]))/,\n             arrowUpDown: /^(?:v|\\(v\\)|\\^|\\(\\^\\))(?=$|[\\s,;\\)\\]\\}])/,\n             \"\\\\bond{(...)}\": function bond(input) {\n               return mhchemParser.patterns.findObserveGroups(input, \"\\\\bond{\", \"\", \"\", \"}\");\n             },\n             \"->\": /^(?:<->|<-->|->|<-|<=>>|<<=>|<=>|[\\u2192\\u27F6\\u21CC])/,\n             CMT: /^[CMT](?=\\[)/,\n             \"[(...)]\": function _(input) {\n               return mhchemParser.patterns.findObserveGroups(input, \"[\", \"\", \"\", \"]\");\n             },\n             \"1st-level escape\": /^(&|\\\\\\\\|\\\\hline)\\s*/,\n             \"\\\\,\": /^(?:\\\\[,\\ ;:])/,\n             // \\\\x - but output no space before\n             \"\\\\x{}{}\": function x(input) {\n               return mhchemParser.patterns.findObserveGroups(\n                 input,\n                 \"\",\n                 /^\\\\[a-zA-Z]+\\{/,\n                 \"}\",\n                 \"\",\n                 \"\",\n                 \"{\",\n                 \"}\",\n                 \"\",\n                 true,\n               );\n             },\n             \"\\\\x{}\": function x(input) {\n               return mhchemParser.patterns.findObserveGroups(input, \"\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\");\n             },\n             \"\\\\ca\": /^\\\\ca(?:\\s+|(?![a-zA-Z]))/,\n             \"\\\\x\": /^(?:\\\\[a-zA-Z]+\\s*|\\\\[_&{}%])/,\n             orbital: /^(?:[0-9]{1,2}[spdfgh]|[0-9]{0,2}sp)(?=$|[^a-zA-Z])/,\n             // only those with numbers in front, because the others will be formatted correctly anyway\n             others: /^[\\/~|]/,\n             \"\\\\frac{(...)}\": function frac(input) {\n               return mhchemParser.patterns.findObserveGroups(\n                 input,\n                 \"\\\\frac{\",\n                 \"\",\n                 \"\",\n                 \"}\",\n                 \"{\",\n                 \"\",\n                 \"\",\n                 \"}\",\n               );\n             },\n             \"\\\\overset{(...)}\": function overset(input) {\n               return mhchemParser.patterns.findObserveGroups(\n                 input,\n                 \"\\\\overset{\",\n                 \"\",\n                 \"\",\n                 \"}\",\n                 \"{\",\n                 \"\",\n                 \"\",\n                 \"}\",\n               );\n             },\n             \"\\\\underset{(...)}\": function underset(input) {\n               return mhchemParser.patterns.findObserveGroups(\n                 input,\n                 \"\\\\underset{\",\n                 \"\",\n                 \"\",\n                 \"}\",\n                 \"{\",\n                 \"\",\n                 \"\",\n                 \"}\",\n               );\n             },\n             \"\\\\underbrace{(...)}\": function underbrace(input) {\n               return mhchemParser.patterns.findObserveGroups(\n                 input,\n                 \"\\\\underbrace{\",\n                 \"\",\n                 \"\",\n                 \"}_\",\n                 \"{\",\n                 \"\",\n                 \"\",\n                 \"}\",\n               );\n             },\n             \"\\\\color{(...)}0\": function color0(input) {\n               return mhchemParser.patterns.findObserveGroups(input, \"\\\\color{\", \"\", \"\", \"}\");\n             },\n             \"\\\\color{(...)}{(...)}1\": function color1(input) {\n               return mhchemParser.patterns.findObserveGroups(\n                 input,\n                 \"\\\\color{\",\n                 \"\",\n                 \"\",\n                 \"}\",\n                 \"{\",\n                 \"\",\n                 \"\",\n                 \"}\",\n               );\n             },\n             \"\\\\color(...){(...)}2\": function color2(input) {\n               return mhchemParser.patterns.findObserveGroups(\n                 input,\n                 \"\\\\color\",\n                 \"\\\\\",\n                 \"\",\n                 /^(?=\\{)/,\n                 \"{\",\n                 \"\",\n                 \"\",\n                 \"}\",\n               );\n             },\n             \"\\\\ce{(...)}\": function ce(input) {\n               return mhchemParser.patterns.findObserveGroups(input, \"\\\\ce{\", \"\", \"\", \"}\");\n             },\n             oxidation$: /^(?:[+-][IVX]+|\\\\pm\\s*0|\\$\\\\pm\\$\\s*0)$/,\n             \"d-oxidation$\": /^(?:[+-]?\\s?[IVX]+|\\\\pm\\s*0|\\$\\\\pm\\$\\s*0)$/,\n             // 0 could be oxidation or charge\n             \"roman numeral\": /^[IVX]+/,\n             \"1/2$\": /^[+\\-]?(?:[0-9]+|\\$[a-z]\\$|[a-z])\\/[0-9]+(?:\\$[a-z]\\$|[a-z])?$/,\n             amount: function amount(input) {\n               var match; // e.g. 2, 0.5, 1/2, -2, n/2, +;  $a$ could be added later in parsing\n\n               match = input.match(\n                 /^(?:(?:(?:\\([+\\-]?[0-9]+\\/[0-9]+\\)|[+\\-]?(?:[0-9]+|\\$[a-z]\\$|[a-z])\\/[0-9]+|[+\\-]?[0-9]+[.,][0-9]+|[+\\-]?\\.[0-9]+|[+\\-]?[0-9]+)(?:[a-z](?=\\s*[A-Z]))?)|[+\\-]?[a-z](?=\\s*[A-Z])|\\+(?!\\s))/,\n               );\n\n               if (match) {\n                 return {\n                   match_: match[0],\n                   remainder: input.substr(match[0].length),\n                 };\n               }\n\n               var a = mhchemParser.patterns.findObserveGroups(input, \"\", \"$\", \"$\", \"\");\n\n               if (a) {\n                 // e.g. $2n-1$, $-$\n                 match = a.match_.match(\n                   /^\\$(?:\\(?[+\\-]?(?:[0-9]*[a-z]?[+\\-])?[0-9]*[a-z](?:[+\\-][0-9]*[a-z]?)?\\)?|\\+|-)\\$$/,\n                 );\n\n                 if (match) {\n                   return {\n                     match_: match[0],\n                     remainder: input.substr(match[0].length),\n                   };\n                 }\n               }\n\n               return null;\n             },\n             amount2: function amount2(input) {\n               return this[\"amount\"](input);\n             },\n             \"(KV letters),\": /^(?:[A-Z][a-z]{0,2}|i)(?=,)/,\n             formula$: function formula$(input) {\n               if (input.match(/^\\([a-z]+\\)$/)) {\n                 return null;\n               } // state of aggregation = no formula\n\n               var match = input.match(\n                 /^(?:[a-z]|(?:[0-9\\ \\+\\-\\,\\.\\(\\)]+[a-z])+[0-9\\ \\+\\-\\,\\.\\(\\)]*|(?:[a-z][0-9\\ \\+\\-\\,\\.\\(\\)]+)+[a-z]?)$/,\n               );\n\n               if (match) {\n                 return {\n                   match_: match[0],\n                   remainder: input.substr(match[0].length),\n                 };\n               }\n\n               return null;\n             },\n             uprightEntities: /^(?:pH|pOH|pC|pK|iPr|iBu)(?=$|[^a-zA-Z])/,\n             \"/\": /^\\s*(\\/)\\s*/,\n             \"//\": /^\\s*(\\/\\/)\\s*/,\n             \"*\": /^\\s*[*.]\\s*/,\n           },\n           findObserveGroups: function findObserveGroups(\n             input,\n             begExcl,\n             begIncl,\n             endIncl,\n             endExcl,\n             beg2Excl,\n             beg2Incl,\n             end2Incl,\n             end2Excl,\n             combine,\n           ) {\n             /** @type {{(input: string, pattern: string | RegExp): string | string[] | null;}} */\n             var _match = function _match(input, pattern) {\n               if (typeof pattern === \"string\") {\n                 if (input.indexOf(pattern) !== 0) {\n                   return null;\n                 }\n\n                 return pattern;\n               } else {\n                 var match = input.match(pattern);\n\n                 if (!match) {\n                   return null;\n                 }\n\n                 return match[0];\n               }\n             };\n             /** @type {{(input: string, i: number, endChars: string | RegExp): {endMatchBegin: number, endMatchEnd: number} | null;}} */\n\n             var _findObserveGroups = function _findObserveGroups(input, i, endChars) {\n               var braces = 0;\n\n               while (i < input.length) {\n                 var a = input.charAt(i);\n\n                 var match = _match(input.substr(i), endChars);\n\n                 if (match !== null && braces === 0) {\n                   return {\n                     endMatchBegin: i,\n                     endMatchEnd: i + match.length,\n                   };\n                 } else if (a === \"{\") {\n                   braces++;\n                 } else if (a === \"}\") {\n                   if (braces === 0) {\n                     throw [\"ExtraCloseMissingOpen\", \"Extra close brace or missing open brace\"];\n                   } else {\n                     braces--;\n                   }\n                 }\n\n                 i++;\n               }\n\n               if (braces > 0) {\n                 return null;\n               }\n\n               return null;\n             };\n\n             var match = _match(input, begExcl);\n\n             if (match === null) {\n               return null;\n             }\n\n             input = input.substr(match.length);\n             match = _match(input, begIncl);\n\n             if (match === null) {\n               return null;\n             }\n\n             var e = _findObserveGroups(input, match.length, endIncl || endExcl);\n\n             if (e === null) {\n               return null;\n             }\n\n             var match1 = input.substring(0, endIncl ? e.endMatchEnd : e.endMatchBegin);\n\n             if (!(beg2Excl || beg2Incl)) {\n               return {\n                 match_: match1,\n                 remainder: input.substr(e.endMatchEnd),\n               };\n             } else {\n               var group2 = this.findObserveGroups(\n                 input.substr(e.endMatchEnd),\n                 beg2Excl,\n                 beg2Incl,\n                 end2Incl,\n                 end2Excl,\n               );\n\n               if (group2 === null) {\n                 return null;\n               }\n               /** @type {string[]} */\n\n               var matchRet = [match1, group2.match_];\n               return {\n                 match_: combine ? matchRet.join(\"\") : matchRet,\n                 remainder: group2.remainder,\n               };\n             }\n           },\n           //\n           // Matching function\n           // e.g. match(\"a\", input) will look for the regexp called \"a\" and see if it matches\n           // returns null or {match_:\"a\", remainder:\"bc\"}\n           //\n           match_: function match_(m, input) {\n             var pattern = mhchemParser.patterns.patterns[m];\n\n             if (pattern === undefined) {\n               throw [\"MhchemBugP\", \"mhchem bug P. Please report. (\" + m + \")\"]; // Trying to use non-existing pattern\n             } else if (typeof pattern === \"function\") {\n               return mhchemParser.patterns.patterns[m](input); // cannot use cached var pattern here, because some pattern functions need this===mhchemParser\n             } else {\n               // RegExp\n               var match = input.match(pattern);\n\n               if (match) {\n                 var mm;\n\n                 if (match[2]) {\n                   mm = [match[1], match[2]];\n                 } else if (match[1]) {\n                   mm = match[1];\n                 } else {\n                   mm = match[0];\n                 }\n\n                 return {\n                   match_: mm,\n                   remainder: input.substr(match[0].length),\n                 };\n               }\n\n               return null;\n             }\n           },\n         },\n         //\n         // Generic state machine actions\n         //\n         actions: {\n           \"a=\": function a(buffer, m) {\n             buffer.a = (buffer.a || \"\") + m;\n           },\n           \"b=\": function b(buffer, m) {\n             buffer.b = (buffer.b || \"\") + m;\n           },\n           \"p=\": function p(buffer, m) {\n             buffer.p = (buffer.p || \"\") + m;\n           },\n           \"o=\": function o(buffer, m) {\n             buffer.o = (buffer.o || \"\") + m;\n           },\n           \"q=\": function q(buffer, m) {\n             buffer.q = (buffer.q || \"\") + m;\n           },\n           \"d=\": function d(buffer, m) {\n             buffer.d = (buffer.d || \"\") + m;\n           },\n           \"rm=\": function rm(buffer, m) {\n             buffer.rm = (buffer.rm || \"\") + m;\n           },\n           \"text=\": function text(buffer, m) {\n             buffer.text_ = (buffer.text_ || \"\") + m;\n           },\n           insert: function insert(buffer, m, a) {\n             return {\n               type_: a,\n             };\n           },\n           \"insert+p1\": function insertP1(buffer, m, a) {\n             return {\n               type_: a,\n               p1: m,\n             };\n           },\n           \"insert+p1+p2\": function insertP1P2(buffer, m, a) {\n             return {\n               type_: a,\n               p1: m[0],\n               p2: m[1],\n             };\n           },\n           copy: function copy(buffer, m) {\n             return m;\n           },\n           rm: function rm(buffer, m) {\n             return {\n               type_: \"rm\",\n               p1: m || \"\",\n             };\n           },\n           text: function text(buffer, m) {\n             return mhchemParser.go(m, \"text\");\n           },\n           \"{text}\": function text(buffer, m) {\n             var ret = [\"{\"];\n             mhchemParser.concatArray(ret, mhchemParser.go(m, \"text\"));\n             ret.push(\"}\");\n             return ret;\n           },\n           \"tex-math\": function texMath(buffer, m) {\n             return mhchemParser.go(m, \"tex-math\");\n           },\n           \"tex-math tight\": function texMathTight(buffer, m) {\n             return mhchemParser.go(m, \"tex-math tight\");\n           },\n           bond: function bond(buffer, m, k) {\n             return {\n               type_: \"bond\",\n               kind_: k || m,\n             };\n           },\n           \"color0-output\": function color0Output(buffer, m) {\n             return {\n               type_: \"color0\",\n               color: m[0],\n             };\n           },\n           ce: function ce(buffer, m) {\n             return mhchemParser.go(m);\n           },\n           \"1/2\": function _(buffer, m) {\n             /** @type {ParserOutput[]} */\n             var ret = [];\n\n             if (m.match(/^[+\\-]/)) {\n               ret.push(m.substr(0, 1));\n               m = m.substr(1);\n             }\n\n             var n = m.match(/^([0-9]+|\\$[a-z]\\$|[a-z])\\/([0-9]+)(\\$[a-z]\\$|[a-z])?$/);\n             n[1] = n[1].replace(/\\$/g, \"\");\n             ret.push({\n               type_: \"frac\",\n               p1: n[1],\n               p2: n[2],\n             });\n\n             if (n[3]) {\n               n[3] = n[3].replace(/\\$/g, \"\");\n               ret.push({\n                 type_: \"tex-math\",\n                 p1: n[3],\n               });\n             }\n\n             return ret;\n           },\n           \"9,9\": function _(buffer, m) {\n             return mhchemParser.go(m, \"9,9\");\n           },\n         },\n         //\n         // createTransitions\n         // convert  { 'letter': { 'state': { action_: 'output' } } }  to  { 'state' => [ { pattern: 'letter', task: { action_: [{type_: 'output'}] } } ] }\n         // with expansion of 'a|b' to 'a' and 'b' (at 2 places)\n         //\n         createTransitions: function createTransitions(o) {\n           var pattern, state;\n           /** @type {string[]} */\n\n           var stateArray;\n           var i; //\n           // 1. Collect all states\n           //\n\n           /** @type {Transitions} */\n\n           var transitions = {};\n\n           for (pattern in o) {\n             for (state in o[pattern]) {\n               stateArray = state.split(\"|\");\n               o[pattern][state].stateArray = stateArray;\n\n               for (i = 0; i < stateArray.length; i++) {\n                 transitions[stateArray[i]] = [];\n               }\n             }\n           } //\n           // 2. Fill states\n           //\n\n           for (pattern in o) {\n             for (state in o[pattern]) {\n               stateArray = o[pattern][state].stateArray || [];\n\n               for (i = 0; i < stateArray.length; i++) {\n                 //\n                 // 2a. Normalize actions into array:  'text=' ==> [{type_:'text='}]\n                 // (Note to myself: Resolving the function here would be problematic. It would need .bind (for *this*) and currying (for *option*).)\n                 //\n\n                 /** @type {any} */\n                 var p = o[pattern][state];\n\n                 if (p.action_) {\n                   p.action_ = [].concat(p.action_);\n\n                   for (var k = 0; k < p.action_.length; k++) {\n                     if (typeof p.action_[k] === \"string\") {\n                       p.action_[k] = {\n                         type_: p.action_[k],\n                       };\n                     }\n                   }\n                 } else {\n                   p.action_ = [];\n                 } //\n                 // 2.b Multi-insert\n                 //\n\n                 var patternArray = pattern.split(\"|\");\n\n                 for (var j = 0; j < patternArray.length; j++) {\n                   if (stateArray[i] === \"*\") {\n                     // insert into all\n                     for (var t in transitions) {\n                       transitions[t].push({\n                         pattern: patternArray[j],\n                         task: p,\n                       });\n                     }\n                   } else {\n                     transitions[stateArray[i]].push({\n                       pattern: patternArray[j],\n                       task: p,\n                     });\n                   }\n                 }\n               }\n             }\n           }\n\n           return transitions;\n         },\n         stateMachines: {},\n       }; //\n       // Definition of state machines\n       //\n\n       mhchemParser.stateMachines = {\n         //\n         // \\ce state machines\n         //\n         //#region ce\n         ce: {\n           // main parser\n           transitions: mhchemParser.createTransitions({\n             empty: {\n               \"*\": {\n                 action_: \"output\",\n               },\n             },\n             else: {\n               \"0|1|2\": {\n                 action_: \"beginsWithBond=false\",\n                 revisit: true,\n                 toContinue: true,\n               },\n             },\n             oxidation$: {\n               0: {\n                 action_: \"oxidation-output\",\n               },\n             },\n             CMT: {\n               r: {\n                 action_: \"rdt=\",\n                 nextState: \"rt\",\n               },\n               rd: {\n                 action_: \"rqt=\",\n                 nextState: \"rdt\",\n               },\n             },\n             arrowUpDown: {\n               \"0|1|2|as\": {\n                 action_: [\"sb=false\", \"output\", \"operator\"],\n                 nextState: \"1\",\n               },\n             },\n             uprightEntities: {\n               \"0|1|2\": {\n                 action_: [\"o=\", \"output\"],\n                 nextState: \"1\",\n               },\n             },\n             orbital: {\n               \"0|1|2|3\": {\n                 action_: \"o=\",\n                 nextState: \"o\",\n               },\n             },\n             \"->\": {\n               \"0|1|2|3\": {\n                 action_: \"r=\",\n                 nextState: \"r\",\n               },\n               \"a|as\": {\n                 action_: [\"output\", \"r=\"],\n                 nextState: \"r\",\n               },\n               \"*\": {\n                 action_: [\"output\", \"r=\"],\n                 nextState: \"r\",\n               },\n             },\n             \"+\": {\n               o: {\n                 action_: \"d= kv\",\n                 nextState: \"d\",\n               },\n               \"d|D\": {\n                 action_: \"d=\",\n                 nextState: \"d\",\n               },\n               q: {\n                 action_: \"d=\",\n                 nextState: \"qd\",\n               },\n               \"qd|qD\": {\n                 action_: \"d=\",\n                 nextState: \"qd\",\n               },\n               dq: {\n                 action_: [\"output\", \"d=\"],\n                 nextState: \"d\",\n               },\n               3: {\n                 action_: [\"sb=false\", \"output\", \"operator\"],\n                 nextState: \"0\",\n               },\n             },\n             amount: {\n               \"0|2\": {\n                 action_: \"a=\",\n                 nextState: \"a\",\n               },\n             },\n             \"pm-operator\": {\n               \"0|1|2|a|as\": {\n                 action_: [\n                   \"sb=false\",\n                   \"output\",\n                   {\n                     type_: \"operator\",\n                     option: \"\\\\pm\",\n                   },\n                 ],\n                 nextState: \"0\",\n               },\n             },\n             operator: {\n               \"0|1|2|a|as\": {\n                 action_: [\"sb=false\", \"output\", \"operator\"],\n                 nextState: \"0\",\n               },\n             },\n             \"-$\": {\n               \"o|q\": {\n                 action_: [\"charge or bond\", \"output\"],\n                 nextState: \"qd\",\n               },\n               d: {\n                 action_: \"d=\",\n                 nextState: \"d\",\n               },\n               D: {\n                 action_: [\n                   \"output\",\n                   {\n                     type_: \"bond\",\n                     option: \"-\",\n                   },\n                 ],\n                 nextState: \"3\",\n               },\n               q: {\n                 action_: \"d=\",\n                 nextState: \"qd\",\n               },\n               qd: {\n                 action_: \"d=\",\n                 nextState: \"qd\",\n               },\n               \"qD|dq\": {\n                 action_: [\n                   \"output\",\n                   {\n                     type_: \"bond\",\n                     option: \"-\",\n                   },\n                 ],\n                 nextState: \"3\",\n               },\n             },\n             \"-9\": {\n               \"3|o\": {\n                 action_: [\n                   \"output\",\n                   {\n                     type_: \"insert\",\n                     option: \"hyphen\",\n                   },\n                 ],\n                 nextState: \"3\",\n               },\n             },\n             \"- orbital overlap\": {\n               o: {\n                 action_: [\n                   \"output\",\n                   {\n                     type_: \"insert\",\n                     option: \"hyphen\",\n                   },\n                 ],\n                 nextState: \"2\",\n               },\n               d: {\n                 action_: [\n                   \"output\",\n                   {\n                     type_: \"insert\",\n                     option: \"hyphen\",\n                   },\n                 ],\n                 nextState: \"2\",\n               },\n             },\n             \"-\": {\n               \"0|1|2\": {\n                 action_: [\n                   {\n                     type_: \"output\",\n                     option: 1,\n                   },\n                   \"beginsWithBond=true\",\n                   {\n                     type_: \"bond\",\n                     option: \"-\",\n                   },\n                 ],\n                 nextState: \"3\",\n               },\n               3: {\n                 action_: {\n                   type_: \"bond\",\n                   option: \"-\",\n                 },\n               },\n               a: {\n                 action_: [\n                   \"output\",\n                   {\n                     type_: \"insert\",\n                     option: \"hyphen\",\n                   },\n                 ],\n                 nextState: \"2\",\n               },\n               as: {\n                 action_: [\n                   {\n                     type_: \"output\",\n                     option: 2,\n                   },\n                   {\n                     type_: \"bond\",\n                     option: \"-\",\n                   },\n                 ],\n                 nextState: \"3\",\n               },\n               b: {\n                 action_: \"b=\",\n               },\n               o: {\n                 action_: {\n                   type_: \"- after o/d\",\n                   option: false,\n                 },\n                 nextState: \"2\",\n               },\n               q: {\n                 action_: {\n                   type_: \"- after o/d\",\n                   option: false,\n                 },\n                 nextState: \"2\",\n               },\n               \"d|qd|dq\": {\n                 action_: {\n                   type_: \"- after o/d\",\n                   option: true,\n                 },\n                 nextState: \"2\",\n               },\n               \"D|qD|p\": {\n                 action_: [\n                   \"output\",\n                   {\n                     type_: \"bond\",\n                     option: \"-\",\n                   },\n                 ],\n                 nextState: \"3\",\n               },\n             },\n             amount2: {\n               \"1|3\": {\n                 action_: \"a=\",\n                 nextState: \"a\",\n               },\n             },\n             letters: {\n               \"0|1|2|3|a|as|b|p|bp|o\": {\n                 action_: \"o=\",\n                 nextState: \"o\",\n               },\n               \"q|dq\": {\n                 action_: [\"output\", \"o=\"],\n                 nextState: \"o\",\n               },\n               \"d|D|qd|qD\": {\n                 action_: \"o after d\",\n                 nextState: \"o\",\n               },\n             },\n             digits: {\n               o: {\n                 action_: \"q=\",\n                 nextState: \"q\",\n               },\n               \"d|D\": {\n                 action_: \"q=\",\n                 nextState: \"dq\",\n               },\n               q: {\n                 action_: [\"output\", \"o=\"],\n                 nextState: \"o\",\n               },\n               a: {\n                 action_: \"o=\",\n                 nextState: \"o\",\n               },\n             },\n             \"space A\": {\n               \"b|p|bp\": {},\n             },\n             space: {\n               a: {\n                 nextState: \"as\",\n               },\n               0: {\n                 action_: \"sb=false\",\n               },\n               \"1|2\": {\n                 action_: \"sb=true\",\n               },\n               \"r|rt|rd|rdt|rdq\": {\n                 action_: \"output\",\n                 nextState: \"0\",\n               },\n               \"*\": {\n                 action_: [\"output\", \"sb=true\"],\n                 nextState: \"1\",\n               },\n             },\n             \"1st-level escape\": {\n               \"1|2\": {\n                 action_: [\n                   \"output\",\n                   {\n                     type_: \"insert+p1\",\n                     option: \"1st-level escape\",\n                   },\n                 ],\n               },\n               \"*\": {\n                 action_: [\n                   \"output\",\n                   {\n                     type_: \"insert+p1\",\n                     option: \"1st-level escape\",\n                   },\n                 ],\n                 nextState: \"0\",\n               },\n             },\n             \"[(...)]\": {\n               \"r|rt\": {\n                 action_: \"rd=\",\n                 nextState: \"rd\",\n               },\n               \"rd|rdt\": {\n                 action_: \"rq=\",\n                 nextState: \"rdq\",\n               },\n             },\n             \"...\": {\n               \"o|d|D|dq|qd|qD\": {\n                 action_: [\n                   \"output\",\n                   {\n                     type_: \"bond\",\n                     option: \"...\",\n                   },\n                 ],\n                 nextState: \"3\",\n               },\n               \"*\": {\n                 action_: [\n                   {\n                     type_: \"output\",\n                     option: 1,\n                   },\n                   {\n                     type_: \"insert\",\n                     option: \"ellipsis\",\n                   },\n                 ],\n                 nextState: \"1\",\n               },\n             },\n             \". |* \": {\n               \"*\": {\n                 action_: [\n                   \"output\",\n                   {\n                     type_: \"insert\",\n                     option: \"addition compound\",\n                   },\n                 ],\n                 nextState: \"1\",\n               },\n             },\n             \"state of aggregation $\": {\n               \"*\": {\n                 action_: [\"output\", \"state of aggregation\"],\n                 nextState: \"1\",\n               },\n             },\n             \"{[(\": {\n               \"a|as|o\": {\n                 action_: [\"o=\", \"output\", \"parenthesisLevel++\"],\n                 nextState: \"2\",\n               },\n               \"0|1|2|3\": {\n                 action_: [\"o=\", \"output\", \"parenthesisLevel++\"],\n                 nextState: \"2\",\n               },\n               \"*\": {\n                 action_: [\"output\", \"o=\", \"output\", \"parenthesisLevel++\"],\n                 nextState: \"2\",\n               },\n             },\n             \")]}\": {\n               \"0|1|2|3|b|p|bp|o\": {\n                 action_: [\"o=\", \"parenthesisLevel--\"],\n                 nextState: \"o\",\n               },\n               \"a|as|d|D|q|qd|qD|dq\": {\n                 action_: [\"output\", \"o=\", \"parenthesisLevel--\"],\n                 nextState: \"o\",\n               },\n             },\n             \", \": {\n               \"*\": {\n                 action_: [\"output\", \"comma\"],\n                 nextState: \"0\",\n               },\n             },\n             \"^_\": {\n               // ^ and _ without a sensible argument\n               \"*\": {},\n             },\n             \"^{(...)}|^($...$)\": {\n               \"0|1|2|as\": {\n                 action_: \"b=\",\n                 nextState: \"b\",\n               },\n               p: {\n                 action_: \"b=\",\n                 nextState: \"bp\",\n               },\n               \"3|o\": {\n                 action_: \"d= kv\",\n                 nextState: \"D\",\n               },\n               q: {\n                 action_: \"d=\",\n                 nextState: \"qD\",\n               },\n               \"d|D|qd|qD|dq\": {\n                 action_: [\"output\", \"d=\"],\n                 nextState: \"D\",\n               },\n             },\n             \"^a|^\\\\x{}{}|^\\\\x{}|^\\\\x|'\": {\n               \"0|1|2|as\": {\n                 action_: \"b=\",\n                 nextState: \"b\",\n               },\n               p: {\n                 action_: \"b=\",\n                 nextState: \"bp\",\n               },\n               \"3|o\": {\n                 action_: \"d= kv\",\n                 nextState: \"d\",\n               },\n               q: {\n                 action_: \"d=\",\n                 nextState: \"qd\",\n               },\n               \"d|qd|D|qD\": {\n                 action_: \"d=\",\n               },\n               dq: {\n                 action_: [\"output\", \"d=\"],\n                 nextState: \"d\",\n               },\n             },\n             \"_{(state of aggregation)}$\": {\n               \"d|D|q|qd|qD|dq\": {\n                 action_: [\"output\", \"q=\"],\n                 nextState: \"q\",\n               },\n             },\n             \"_{(...)}|_($...$)|_9|_\\\\x{}{}|_\\\\x{}|_\\\\x\": {\n               \"0|1|2|as\": {\n                 action_: \"p=\",\n                 nextState: \"p\",\n               },\n               b: {\n                 action_: \"p=\",\n                 nextState: \"bp\",\n               },\n               \"3|o\": {\n                 action_: \"q=\",\n                 nextState: \"q\",\n               },\n               \"d|D\": {\n                 action_: \"q=\",\n                 nextState: \"dq\",\n               },\n               \"q|qd|qD|dq\": {\n                 action_: [\"output\", \"q=\"],\n                 nextState: \"q\",\n               },\n             },\n             \"=<>\": {\n               \"0|1|2|3|a|as|o|q|d|D|qd|qD|dq\": {\n                 action_: [\n                   {\n                     type_: \"output\",\n                     option: 2,\n                   },\n                   \"bond\",\n                 ],\n                 nextState: \"3\",\n               },\n             },\n             \"#\": {\n               \"0|1|2|3|a|as|o\": {\n                 action_: [\n                   {\n                     type_: \"output\",\n                     option: 2,\n                   },\n                   {\n                     type_: \"bond\",\n                     option: \"#\",\n                   },\n                 ],\n                 nextState: \"3\",\n               },\n             },\n             \"{}\": {\n               \"*\": {\n                 action_: {\n                   type_: \"output\",\n                   option: 1,\n                 },\n                 nextState: \"1\",\n               },\n             },\n             \"{...}\": {\n               \"0|1|2|3|a|as|b|p|bp\": {\n                 action_: \"o=\",\n                 nextState: \"o\",\n               },\n               \"o|d|D|q|qd|qD|dq\": {\n                 action_: [\"output\", \"o=\"],\n                 nextState: \"o\",\n               },\n             },\n             \"$...$\": {\n               a: {\n                 action_: \"a=\",\n               },\n               // 2$n$\n               \"0|1|2|3|as|b|p|bp|o\": {\n                 action_: \"o=\",\n                 nextState: \"o\",\n               },\n               // not 'amount'\n               \"as|o\": {\n                 action_: \"o=\",\n               },\n               \"q|d|D|qd|qD|dq\": {\n                 action_: [\"output\", \"o=\"],\n                 nextState: \"o\",\n               },\n             },\n             \"\\\\bond{(...)}\": {\n               \"*\": {\n                 action_: [\n                   {\n                     type_: \"output\",\n                     option: 2,\n                   },\n                   \"bond\",\n                 ],\n                 nextState: \"3\",\n               },\n             },\n             \"\\\\frac{(...)}\": {\n               \"*\": {\n                 action_: [\n                   {\n                     type_: \"output\",\n                     option: 1,\n                   },\n                   \"frac-output\",\n                 ],\n                 nextState: \"3\",\n               },\n             },\n             \"\\\\overset{(...)}\": {\n               \"*\": {\n                 action_: [\n                   {\n                     type_: \"output\",\n                     option: 2,\n                   },\n                   \"overset-output\",\n                 ],\n                 nextState: \"3\",\n               },\n             },\n             \"\\\\underset{(...)}\": {\n               \"*\": {\n                 action_: [\n                   {\n                     type_: \"output\",\n                     option: 2,\n                   },\n                   \"underset-output\",\n                 ],\n                 nextState: \"3\",\n               },\n             },\n             \"\\\\underbrace{(...)}\": {\n               \"*\": {\n                 action_: [\n                   {\n                     type_: \"output\",\n                     option: 2,\n                   },\n                   \"underbrace-output\",\n                 ],\n                 nextState: \"3\",\n               },\n             },\n             \"\\\\color{(...)}{(...)}1|\\\\color(...){(...)}2\": {\n               \"*\": {\n                 action_: [\n                   {\n                     type_: \"output\",\n                     option: 2,\n                   },\n                   \"color-output\",\n                 ],\n                 nextState: \"3\",\n               },\n             },\n             \"\\\\color{(...)}0\": {\n               \"*\": {\n                 action_: [\n                   {\n                     type_: \"output\",\n                     option: 2,\n                   },\n                   \"color0-output\",\n                 ],\n               },\n             },\n             \"\\\\ce{(...)}\": {\n               \"*\": {\n                 action_: [\n                   {\n                     type_: \"output\",\n                     option: 2,\n                   },\n                   \"ce\",\n                 ],\n                 nextState: \"3\",\n               },\n             },\n             \"\\\\,\": {\n               \"*\": {\n                 action_: [\n                   {\n                     type_: \"output\",\n                     option: 1,\n                   },\n                   \"copy\",\n                 ],\n                 nextState: \"1\",\n               },\n             },\n             \"\\\\x{}{}|\\\\x{}|\\\\x\": {\n               \"0|1|2|3|a|as|b|p|bp|o|c0\": {\n                 action_: [\"o=\", \"output\"],\n                 nextState: \"3\",\n               },\n               \"*\": {\n                 action_: [\"output\", \"o=\", \"output\"],\n                 nextState: \"3\",\n               },\n             },\n             others: {\n               \"*\": {\n                 action_: [\n                   {\n                     type_: \"output\",\n                     option: 1,\n                   },\n                   \"copy\",\n                 ],\n                 nextState: \"3\",\n               },\n             },\n             else2: {\n               a: {\n                 action_: \"a to o\",\n                 nextState: \"o\",\n                 revisit: true,\n               },\n               as: {\n                 action_: [\"output\", \"sb=true\"],\n                 nextState: \"1\",\n                 revisit: true,\n               },\n               \"r|rt|rd|rdt|rdq\": {\n                 action_: [\"output\"],\n                 nextState: \"0\",\n                 revisit: true,\n               },\n               \"*\": {\n                 action_: [\"output\", \"copy\"],\n                 nextState: \"3\",\n               },\n             },\n           }),\n           actions: {\n             \"o after d\": function oAfterD(buffer, m) {\n               var ret;\n\n               if ((buffer.d || \"\").match(/^[0-9]+$/)) {\n                 var tmp = buffer.d;\n                 buffer.d = undefined;\n                 ret = this[\"output\"](buffer);\n                 buffer.b = tmp;\n               } else {\n                 ret = this[\"output\"](buffer);\n               }\n\n               mhchemParser.actions[\"o=\"](buffer, m);\n               return ret;\n             },\n             \"d= kv\": function dKv(buffer, m) {\n               buffer.d = m;\n               buffer.dType = \"kv\";\n             },\n             \"charge or bond\": function chargeOrBond(buffer, m) {\n               if (buffer[\"beginsWithBond\"]) {\n                 /** @type {ParserOutput[]} */\n                 var ret = [];\n                 mhchemParser.concatArray(ret, this[\"output\"](buffer));\n                 mhchemParser.concatArray(ret, mhchemParser.actions[\"bond\"](buffer, m, \"-\"));\n                 return ret;\n               } else {\n                 buffer.d = m;\n               }\n             },\n             \"- after o/d\": function afterOD(buffer, m, isAfterD) {\n               var c1 = mhchemParser.patterns.match_(\"orbital\", buffer.o || \"\");\n               var c2 = mhchemParser.patterns.match_(\"one lowercase greek letter $\", buffer.o || \"\");\n               var c3 = mhchemParser.patterns.match_(\"one lowercase latin letter $\", buffer.o || \"\");\n               var c4 = mhchemParser.patterns.match_(\n                 \"$one lowercase latin letter$ $\",\n                 buffer.o || \"\",\n               );\n               var hyphenFollows = m === \"-\" && ((c1 && c1.remainder === \"\") || c2 || c3 || c4);\n\n               if (\n                 hyphenFollows &&\n                 !buffer.a &&\n                 !buffer.b &&\n                 !buffer.p &&\n                 !buffer.d &&\n                 !buffer.q &&\n                 !c1 &&\n                 c3\n               ) {\n                 buffer.o = \"$\" + buffer.o + \"$\";\n               }\n               /** @type {ParserOutput[]} */\n\n               var ret = [];\n\n               if (hyphenFollows) {\n                 mhchemParser.concatArray(ret, this[\"output\"](buffer));\n                 ret.push({\n                   type_: \"hyphen\",\n                 });\n               } else {\n                 c1 = mhchemParser.patterns.match_(\"digits\", buffer.d || \"\");\n\n                 if (isAfterD && c1 && c1.remainder === \"\") {\n                   mhchemParser.concatArray(ret, mhchemParser.actions[\"d=\"](buffer, m));\n                   mhchemParser.concatArray(ret, this[\"output\"](buffer));\n                 } else {\n                   mhchemParser.concatArray(ret, this[\"output\"](buffer));\n                   mhchemParser.concatArray(ret, mhchemParser.actions[\"bond\"](buffer, m, \"-\"));\n                 }\n               }\n\n               return ret;\n             },\n             \"a to o\": function aToO(buffer) {\n               buffer.o = buffer.a;\n               buffer.a = undefined;\n             },\n             \"sb=true\": function sbTrue(buffer) {\n               buffer.sb = true;\n             },\n             \"sb=false\": function sbFalse(buffer) {\n               buffer.sb = false;\n             },\n             \"beginsWithBond=true\": function beginsWithBondTrue(buffer) {\n               buffer[\"beginsWithBond\"] = true;\n             },\n             \"beginsWithBond=false\": function beginsWithBondFalse(buffer) {\n               buffer[\"beginsWithBond\"] = false;\n             },\n             \"parenthesisLevel++\": function parenthesisLevel(buffer) {\n               buffer[\"parenthesisLevel\"]++;\n             },\n             \"parenthesisLevel--\": function parenthesisLevel(buffer) {\n               buffer[\"parenthesisLevel\"]--;\n             },\n             \"state of aggregation\": function stateOfAggregation(buffer, m) {\n               return {\n                 type_: \"state of aggregation\",\n                 p1: mhchemParser.go(m, \"o\"),\n               };\n             },\n             comma: function comma(buffer, m) {\n               var a = m.replace(/\\s*$/, \"\");\n               var withSpace = a !== m;\n\n               if (withSpace && buffer[\"parenthesisLevel\"] === 0) {\n                 return {\n                   type_: \"comma enumeration L\",\n                   p1: a,\n                 };\n               } else {\n                 return {\n                   type_: \"comma enumeration M\",\n                   p1: a,\n                 };\n               }\n             },\n             output: function output(buffer, m, entityFollows) {\n               // entityFollows:\n               //   undefined = if we have nothing else to output, also ignore the just read space (buffer.sb)\n               //   1 = an entity follows, never omit the space if there was one just read before (can only apply to state 1)\n               //   2 = 1 + the entity can have an amount, so output a\\, instead of converting it to o (can only apply to states a|as)\n\n               /** @type {ParserOutput | ParserOutput[]} */\n               var ret;\n\n               if (!buffer.r) {\n                 ret = [];\n\n                 if (\n                   !buffer.a &&\n                   !buffer.b &&\n                   !buffer.p &&\n                   !buffer.o &&\n                   !buffer.q &&\n                   !buffer.d &&\n                   !entityFollows\n                 ) {\n                   //ret = [];\n                 } else {\n                   if (buffer.sb) {\n                     ret.push({\n                       type_: \"entitySkip\",\n                     });\n                   }\n\n                   if (\n                     !buffer.o &&\n                     !buffer.q &&\n                     !buffer.d &&\n                     !buffer.b &&\n                     !buffer.p &&\n                     entityFollows !== 2\n                   ) {\n                     buffer.o = buffer.a;\n                     buffer.a = undefined;\n                   } else if (!buffer.o && !buffer.q && !buffer.d && (buffer.b || buffer.p)) {\n                     buffer.o = buffer.a;\n                     buffer.d = buffer.b;\n                     buffer.q = buffer.p;\n                     buffer.a = buffer.b = buffer.p = undefined;\n                   } else {\n                     if (\n                       buffer.o &&\n                       buffer.dType === \"kv\" &&\n                       mhchemParser.patterns.match_(\"d-oxidation$\", buffer.d || \"\")\n                     ) {\n                       buffer.dType = \"oxidation\";\n                     } else if (buffer.o && buffer.dType === \"kv\" && !buffer.q) {\n                       buffer.dType = undefined;\n                     }\n                   }\n\n                   ret.push({\n                     type_: \"chemfive\",\n                     a: mhchemParser.go(buffer.a, \"a\"),\n                     b: mhchemParser.go(buffer.b, \"bd\"),\n                     p: mhchemParser.go(buffer.p, \"pq\"),\n                     o: mhchemParser.go(buffer.o, \"o\"),\n                     q: mhchemParser.go(buffer.q, \"pq\"),\n                     d: mhchemParser.go(buffer.d, buffer.dType === \"oxidation\" ? \"oxidation\" : \"bd\"),\n                     dType: buffer.dType,\n                   });\n                 }\n               } else {\n                 // r\n\n                 /** @type {ParserOutput[]} */\n                 var rd;\n\n                 if (buffer.rdt === \"M\") {\n                   rd = mhchemParser.go(buffer.rd, \"tex-math\");\n                 } else if (buffer.rdt === \"T\") {\n                   rd = [\n                     {\n                       type_: \"text\",\n                       p1: buffer.rd || \"\",\n                     },\n                   ];\n                 } else {\n                   rd = mhchemParser.go(buffer.rd);\n                 }\n                 /** @type {ParserOutput[]} */\n\n                 var rq;\n\n                 if (buffer.rqt === \"M\") {\n                   rq = mhchemParser.go(buffer.rq, \"tex-math\");\n                 } else if (buffer.rqt === \"T\") {\n                   rq = [\n                     {\n                       type_: \"text\",\n                       p1: buffer.rq || \"\",\n                     },\n                   ];\n                 } else {\n                   rq = mhchemParser.go(buffer.rq);\n                 }\n\n                 ret = {\n                   type_: \"arrow\",\n                   r: buffer.r,\n                   rd: rd,\n                   rq: rq,\n                 };\n               }\n\n               for (var p in buffer) {\n                 if (p !== \"parenthesisLevel\" && p !== \"beginsWithBond\") {\n                   delete buffer[p];\n                 }\n               }\n\n               return ret;\n             },\n             \"oxidation-output\": function oxidationOutput(buffer, m) {\n               var ret = [\"{\"];\n               mhchemParser.concatArray(ret, mhchemParser.go(m, \"oxidation\"));\n               ret.push(\"}\");\n               return ret;\n             },\n             \"frac-output\": function fracOutput(buffer, m) {\n               return {\n                 type_: \"frac-ce\",\n                 p1: mhchemParser.go(m[0]),\n                 p2: mhchemParser.go(m[1]),\n               };\n             },\n             \"overset-output\": function oversetOutput(buffer, m) {\n               return {\n                 type_: \"overset\",\n                 p1: mhchemParser.go(m[0]),\n                 p2: mhchemParser.go(m[1]),\n               };\n             },\n             \"underset-output\": function undersetOutput(buffer, m) {\n               return {\n                 type_: \"underset\",\n                 p1: mhchemParser.go(m[0]),\n                 p2: mhchemParser.go(m[1]),\n               };\n             },\n             \"underbrace-output\": function underbraceOutput(buffer, m) {\n               return {\n                 type_: \"underbrace\",\n                 p1: mhchemParser.go(m[0]),\n                 p2: mhchemParser.go(m[1]),\n               };\n             },\n             \"color-output\": function colorOutput(buffer, m) {\n               return {\n                 type_: \"color\",\n                 color1: m[0],\n                 color2: mhchemParser.go(m[1]),\n               };\n             },\n             \"r=\": function r(buffer, m) {\n               buffer.r = m;\n             },\n             \"rdt=\": function rdt(buffer, m) {\n               buffer.rdt = m;\n             },\n             \"rd=\": function rd(buffer, m) {\n               buffer.rd = m;\n             },\n             \"rqt=\": function rqt(buffer, m) {\n               buffer.rqt = m;\n             },\n             \"rq=\": function rq(buffer, m) {\n               buffer.rq = m;\n             },\n             operator: function operator(buffer, m, p1) {\n               return {\n                 type_: \"operator\",\n                 kind_: p1 || m,\n               };\n             },\n           },\n         },\n         a: {\n           transitions: mhchemParser.createTransitions({\n             empty: {\n               \"*\": {},\n             },\n             \"1/2$\": {\n               0: {\n                 action_: \"1/2\",\n               },\n             },\n             else: {\n               0: {\n                 nextState: \"1\",\n                 revisit: true,\n               },\n             },\n             \"$(...)$\": {\n               \"*\": {\n                 action_: \"tex-math tight\",\n                 nextState: \"1\",\n               },\n             },\n             \",\": {\n               \"*\": {\n                 action_: {\n                   type_: \"insert\",\n                   option: \"commaDecimal\",\n                 },\n               },\n             },\n             else2: {\n               \"*\": {\n                 action_: \"copy\",\n               },\n             },\n           }),\n           actions: {},\n         },\n         o: {\n           transitions: mhchemParser.createTransitions({\n             empty: {\n               \"*\": {},\n             },\n             \"1/2$\": {\n               0: {\n                 action_: \"1/2\",\n               },\n             },\n             else: {\n               0: {\n                 nextState: \"1\",\n                 revisit: true,\n               },\n             },\n             letters: {\n               \"*\": {\n                 action_: \"rm\",\n               },\n             },\n             \"\\\\ca\": {\n               \"*\": {\n                 action_: {\n                   type_: \"insert\",\n                   option: \"circa\",\n                 },\n               },\n             },\n             \"\\\\x{}{}|\\\\x{}|\\\\x\": {\n               \"*\": {\n                 action_: \"copy\",\n               },\n             },\n             \"${(...)}$|$(...)$\": {\n               \"*\": {\n                 action_: \"tex-math\",\n               },\n             },\n             \"{(...)}\": {\n               \"*\": {\n                 action_: \"{text}\",\n               },\n             },\n             else2: {\n               \"*\": {\n                 action_: \"copy\",\n               },\n             },\n           }),\n           actions: {},\n         },\n         text: {\n           transitions: mhchemParser.createTransitions({\n             empty: {\n               \"*\": {\n                 action_: \"output\",\n               },\n             },\n             \"{...}\": {\n               \"*\": {\n                 action_: \"text=\",\n               },\n             },\n             \"${(...)}$|$(...)$\": {\n               \"*\": {\n                 action_: \"tex-math\",\n               },\n             },\n             \"\\\\greek\": {\n               \"*\": {\n                 action_: [\"output\", \"rm\"],\n               },\n             },\n             \"\\\\,|\\\\x{}{}|\\\\x{}|\\\\x\": {\n               \"*\": {\n                 action_: [\"output\", \"copy\"],\n               },\n             },\n             else: {\n               \"*\": {\n                 action_: \"text=\",\n               },\n             },\n           }),\n           actions: {\n             output: function output(buffer) {\n               if (buffer.text_) {\n                 /** @type {ParserOutput} */\n                 var ret = {\n                   type_: \"text\",\n                   p1: buffer.text_,\n                 };\n\n                 for (var p in buffer) {\n                   delete buffer[p];\n                 }\n\n                 return ret;\n               }\n             },\n           },\n         },\n         pq: {\n           transitions: mhchemParser.createTransitions({\n             empty: {\n               \"*\": {},\n             },\n             \"state of aggregation $\": {\n               \"*\": {\n                 action_: \"state of aggregation\",\n               },\n             },\n             i$: {\n               0: {\n                 nextState: \"!f\",\n                 revisit: true,\n               },\n             },\n             \"(KV letters),\": {\n               0: {\n                 action_: \"rm\",\n                 nextState: \"0\",\n               },\n             },\n             formula$: {\n               0: {\n                 nextState: \"f\",\n                 revisit: true,\n               },\n             },\n             \"1/2$\": {\n               0: {\n                 action_: \"1/2\",\n               },\n             },\n             else: {\n               0: {\n                 nextState: \"!f\",\n                 revisit: true,\n               },\n             },\n             \"${(...)}$|$(...)$\": {\n               \"*\": {\n                 action_: \"tex-math\",\n               },\n             },\n             \"{(...)}\": {\n               \"*\": {\n                 action_: \"text\",\n               },\n             },\n             \"a-z\": {\n               f: {\n                 action_: \"tex-math\",\n               },\n             },\n             letters: {\n               \"*\": {\n                 action_: \"rm\",\n               },\n             },\n             \"-9.,9\": {\n               \"*\": {\n                 action_: \"9,9\",\n               },\n             },\n             \",\": {\n               \"*\": {\n                 action_: {\n                   type_: \"insert+p1\",\n                   option: \"comma enumeration S\",\n                 },\n               },\n             },\n             \"\\\\color{(...)}{(...)}1|\\\\color(...){(...)}2\": {\n               \"*\": {\n                 action_: \"color-output\",\n               },\n             },\n             \"\\\\color{(...)}0\": {\n               \"*\": {\n                 action_: \"color0-output\",\n               },\n             },\n             \"\\\\ce{(...)}\": {\n               \"*\": {\n                 action_: \"ce\",\n               },\n             },\n             \"\\\\,|\\\\x{}{}|\\\\x{}|\\\\x\": {\n               \"*\": {\n                 action_: \"copy\",\n               },\n             },\n             else2: {\n               \"*\": {\n                 action_: \"copy\",\n               },\n             },\n           }),\n           actions: {\n             \"state of aggregation\": function stateOfAggregation(buffer, m) {\n               return {\n                 type_: \"state of aggregation subscript\",\n                 p1: mhchemParser.go(m, \"o\"),\n               };\n             },\n             \"color-output\": function colorOutput(buffer, m) {\n               return {\n                 type_: \"color\",\n                 color1: m[0],\n                 color2: mhchemParser.go(m[1], \"pq\"),\n               };\n             },\n           },\n         },\n         bd: {\n           transitions: mhchemParser.createTransitions({\n             empty: {\n               \"*\": {},\n             },\n             x$: {\n               0: {\n                 nextState: \"!f\",\n                 revisit: true,\n               },\n             },\n             formula$: {\n               0: {\n                 nextState: \"f\",\n                 revisit: true,\n               },\n             },\n             else: {\n               0: {\n                 nextState: \"!f\",\n                 revisit: true,\n               },\n             },\n             \"-9.,9 no missing 0\": {\n               \"*\": {\n                 action_: \"9,9\",\n               },\n             },\n             \".\": {\n               \"*\": {\n                 action_: {\n                   type_: \"insert\",\n                   option: \"electron dot\",\n                 },\n               },\n             },\n             \"a-z\": {\n               f: {\n                 action_: \"tex-math\",\n               },\n             },\n             x: {\n               \"*\": {\n                 action_: {\n                   type_: \"insert\",\n                   option: \"KV x\",\n                 },\n               },\n             },\n             letters: {\n               \"*\": {\n                 action_: \"rm\",\n               },\n             },\n             \"'\": {\n               \"*\": {\n                 action_: {\n                   type_: \"insert\",\n                   option: \"prime\",\n                 },\n               },\n             },\n             \"${(...)}$|$(...)$\": {\n               \"*\": {\n                 action_: \"tex-math\",\n               },\n             },\n             \"{(...)}\": {\n               \"*\": {\n                 action_: \"text\",\n               },\n             },\n             \"\\\\color{(...)}{(...)}1|\\\\color(...){(...)}2\": {\n               \"*\": {\n                 action_: \"color-output\",\n               },\n             },\n             \"\\\\color{(...)}0\": {\n               \"*\": {\n                 action_: \"color0-output\",\n               },\n             },\n             \"\\\\ce{(...)}\": {\n               \"*\": {\n                 action_: \"ce\",\n               },\n             },\n             \"\\\\,|\\\\x{}{}|\\\\x{}|\\\\x\": {\n               \"*\": {\n                 action_: \"copy\",\n               },\n             },\n             else2: {\n               \"*\": {\n                 action_: \"copy\",\n               },\n             },\n           }),\n           actions: {\n             \"color-output\": function colorOutput(buffer, m) {\n               return {\n                 type_: \"color\",\n                 color1: m[0],\n                 color2: mhchemParser.go(m[1], \"bd\"),\n               };\n             },\n           },\n         },\n         oxidation: {\n           transitions: mhchemParser.createTransitions({\n             empty: {\n               \"*\": {},\n             },\n             \"roman numeral\": {\n               \"*\": {\n                 action_: \"roman-numeral\",\n               },\n             },\n             \"${(...)}$|$(...)$\": {\n               \"*\": {\n                 action_: \"tex-math\",\n               },\n             },\n             else: {\n               \"*\": {\n                 action_: \"copy\",\n               },\n             },\n           }),\n           actions: {\n             \"roman-numeral\": function romanNumeral(buffer, m) {\n               return {\n                 type_: \"roman numeral\",\n                 p1: m || \"\",\n               };\n             },\n           },\n         },\n         \"tex-math\": {\n           transitions: mhchemParser.createTransitions({\n             empty: {\n               \"*\": {\n                 action_: \"output\",\n               },\n             },\n             \"\\\\ce{(...)}\": {\n               \"*\": {\n                 action_: [\"output\", \"ce\"],\n               },\n             },\n             \"{...}|\\\\,|\\\\x{}{}|\\\\x{}|\\\\x\": {\n               \"*\": {\n                 action_: \"o=\",\n               },\n             },\n             else: {\n               \"*\": {\n                 action_: \"o=\",\n               },\n             },\n           }),\n           actions: {\n             output: function output(buffer) {\n               if (buffer.o) {\n                 /** @type {ParserOutput} */\n                 var ret = {\n                   type_: \"tex-math\",\n                   p1: buffer.o,\n                 };\n\n                 for (var p in buffer) {\n                   delete buffer[p];\n                 }\n\n                 return ret;\n               }\n             },\n           },\n         },\n         \"tex-math tight\": {\n           transitions: mhchemParser.createTransitions({\n             empty: {\n               \"*\": {\n                 action_: \"output\",\n               },\n             },\n             \"\\\\ce{(...)}\": {\n               \"*\": {\n                 action_: [\"output\", \"ce\"],\n               },\n             },\n             \"{...}|\\\\,|\\\\x{}{}|\\\\x{}|\\\\x\": {\n               \"*\": {\n                 action_: \"o=\",\n               },\n             },\n             \"-|+\": {\n               \"*\": {\n                 action_: \"tight operator\",\n               },\n             },\n             else: {\n               \"*\": {\n                 action_: \"o=\",\n               },\n             },\n           }),\n           actions: {\n             \"tight operator\": function tightOperator(buffer, m) {\n               buffer.o = (buffer.o || \"\") + \"{\" + m + \"}\";\n             },\n             output: function output(buffer) {\n               if (buffer.o) {\n                 /** @type {ParserOutput} */\n                 var ret = {\n                   type_: \"tex-math\",\n                   p1: buffer.o,\n                 };\n\n                 for (var p in buffer) {\n                   delete buffer[p];\n                 }\n\n                 return ret;\n               }\n             },\n           },\n         },\n         \"9,9\": {\n           transitions: mhchemParser.createTransitions({\n             empty: {\n               \"*\": {},\n             },\n             \",\": {\n               \"*\": {\n                 action_: \"comma\",\n               },\n             },\n             else: {\n               \"*\": {\n                 action_: \"copy\",\n               },\n             },\n           }),\n           actions: {\n             comma: function comma() {\n               return {\n                 type_: \"commaDecimal\",\n               };\n             },\n           },\n         },\n         //#endregion\n         //\n         // \\pu state machines\n         //\n         //#region pu\n         pu: {\n           transitions: mhchemParser.createTransitions({\n             empty: {\n               \"*\": {\n                 action_: \"output\",\n               },\n             },\n             space$: {\n               \"*\": {\n                 action_: [\"output\", \"space\"],\n               },\n             },\n             \"{[(|)]}\": {\n               \"0|a\": {\n                 action_: \"copy\",\n               },\n             },\n             \"(-)(9)^(-9)\": {\n               0: {\n                 action_: \"number^\",\n                 nextState: \"a\",\n               },\n             },\n             \"(-)(9.,9)(e)(99)\": {\n               0: {\n                 action_: \"enumber\",\n                 nextState: \"a\",\n               },\n             },\n             space: {\n               \"0|a\": {},\n             },\n             \"pm-operator\": {\n               \"0|a\": {\n                 action_: {\n                   type_: \"operator\",\n                   option: \"\\\\pm\",\n                 },\n                 nextState: \"0\",\n               },\n             },\n             operator: {\n               \"0|a\": {\n                 action_: \"copy\",\n                 nextState: \"0\",\n               },\n             },\n             \"//\": {\n               d: {\n                 action_: \"o=\",\n                 nextState: \"/\",\n               },\n             },\n             \"/\": {\n               d: {\n                 action_: \"o=\",\n                 nextState: \"/\",\n               },\n             },\n             \"{...}|else\": {\n               \"0|d\": {\n                 action_: \"d=\",\n                 nextState: \"d\",\n               },\n               a: {\n                 action_: [\"space\", \"d=\"],\n                 nextState: \"d\",\n               },\n               \"/|q\": {\n                 action_: \"q=\",\n                 nextState: \"q\",\n               },\n             },\n           }),\n           actions: {\n             enumber: function enumber(buffer, m) {\n               /** @type {ParserOutput[]} */\n               var ret = [];\n\n               if (m[0] === \"+-\" || m[0] === \"+/-\") {\n                 ret.push(\"\\\\pm \");\n               } else if (m[0]) {\n                 ret.push(m[0]);\n               }\n\n               if (m[1]) {\n                 mhchemParser.concatArray(ret, mhchemParser.go(m[1], \"pu-9,9\"));\n\n                 if (m[2]) {\n                   if (m[2].match(/[,.]/)) {\n                     mhchemParser.concatArray(ret, mhchemParser.go(m[2], \"pu-9,9\"));\n                   } else {\n                     ret.push(m[2]);\n                   }\n                 }\n\n                 m[3] = m[4] || m[3];\n\n                 if (m[3]) {\n                   m[3] = m[3].trim();\n\n                   if (m[3] === \"e\" || m[3].substr(0, 1) === \"*\") {\n                     ret.push({\n                       type_: \"cdot\",\n                     });\n                   } else {\n                     ret.push({\n                       type_: \"times\",\n                     });\n                   }\n                 }\n               }\n\n               if (m[3]) {\n                 ret.push(\"10^{\" + m[5] + \"}\");\n               }\n\n               return ret;\n             },\n             \"number^\": function number(buffer, m) {\n               /** @type {ParserOutput[]} */\n               var ret = [];\n\n               if (m[0] === \"+-\" || m[0] === \"+/-\") {\n                 ret.push(\"\\\\pm \");\n               } else if (m[0]) {\n                 ret.push(m[0]);\n               }\n\n               mhchemParser.concatArray(ret, mhchemParser.go(m[1], \"pu-9,9\"));\n               ret.push(\"^{\" + m[2] + \"}\");\n               return ret;\n             },\n             operator: function operator(buffer, m, p1) {\n               return {\n                 type_: \"operator\",\n                 kind_: p1 || m,\n               };\n             },\n             space: function space() {\n               return {\n                 type_: \"pu-space-1\",\n               };\n             },\n             output: function output(buffer) {\n               /** @type {ParserOutput | ParserOutput[]} */\n               var ret;\n               var md = mhchemParser.patterns.match_(\"{(...)}\", buffer.d || \"\");\n\n               if (md && md.remainder === \"\") {\n                 buffer.d = md.match_;\n               }\n\n               var mq = mhchemParser.patterns.match_(\"{(...)}\", buffer.q || \"\");\n\n               if (mq && mq.remainder === \"\") {\n                 buffer.q = mq.match_;\n               }\n\n               if (buffer.d) {\n                 buffer.d = buffer.d.replace(/\\u00B0C|\\^oC|\\^{o}C/g, \"{}^{\\\\circ}C\");\n                 buffer.d = buffer.d.replace(/\\u00B0F|\\^oF|\\^{o}F/g, \"{}^{\\\\circ}F\");\n               }\n\n               if (buffer.q) {\n                 // fraction\n                 buffer.q = buffer.q.replace(/\\u00B0C|\\^oC|\\^{o}C/g, \"{}^{\\\\circ}C\");\n                 buffer.q = buffer.q.replace(/\\u00B0F|\\^oF|\\^{o}F/g, \"{}^{\\\\circ}F\");\n                 var b5 = {\n                   d: mhchemParser.go(buffer.d, \"pu\"),\n                   q: mhchemParser.go(buffer.q, \"pu\"),\n                 };\n\n                 if (buffer.o === \"//\") {\n                   ret = {\n                     type_: \"pu-frac\",\n                     p1: b5.d,\n                     p2: b5.q,\n                   };\n                 } else {\n                   ret = b5.d;\n\n                   if (b5.d.length > 1 || b5.q.length > 1) {\n                     ret.push({\n                       type_: \" / \",\n                     });\n                   } else {\n                     ret.push({\n                       type_: \"/\",\n                     });\n                   }\n\n                   mhchemParser.concatArray(ret, b5.q);\n                 }\n               } else {\n                 // no fraction\n                 ret = mhchemParser.go(buffer.d, \"pu-2\");\n               }\n\n               for (var p in buffer) {\n                 delete buffer[p];\n               }\n\n               return ret;\n             },\n           },\n         },\n         \"pu-2\": {\n           transitions: mhchemParser.createTransitions({\n             empty: {\n               \"*\": {\n                 action_: \"output\",\n               },\n             },\n             \"*\": {\n               \"*\": {\n                 action_: [\"output\", \"cdot\"],\n                 nextState: \"0\",\n               },\n             },\n             \"\\\\x\": {\n               \"*\": {\n                 action_: \"rm=\",\n               },\n             },\n             space: {\n               \"*\": {\n                 action_: [\"output\", \"space\"],\n                 nextState: \"0\",\n               },\n             },\n             \"^{(...)}|^(-1)\": {\n               1: {\n                 action_: \"^(-1)\",\n               },\n             },\n             \"-9.,9\": {\n               0: {\n                 action_: \"rm=\",\n                 nextState: \"0\",\n               },\n               1: {\n                 action_: \"^(-1)\",\n                 nextState: \"0\",\n               },\n             },\n             \"{...}|else\": {\n               \"*\": {\n                 action_: \"rm=\",\n                 nextState: \"1\",\n               },\n             },\n           }),\n           actions: {\n             cdot: function cdot() {\n               return {\n                 type_: \"tight cdot\",\n               };\n             },\n             \"^(-1)\": function _(buffer, m) {\n               buffer.rm += \"^{\" + m + \"}\";\n             },\n             space: function space() {\n               return {\n                 type_: \"pu-space-2\",\n               };\n             },\n             output: function output(buffer) {\n               /** @type {ParserOutput | ParserOutput[]} */\n               var ret = [];\n\n               if (buffer.rm) {\n                 var mrm = mhchemParser.patterns.match_(\"{(...)}\", buffer.rm || \"\");\n\n                 if (mrm && mrm.remainder === \"\") {\n                   ret = mhchemParser.go(mrm.match_, \"pu\");\n                 } else {\n                   ret = {\n                     type_: \"rm\",\n                     p1: buffer.rm,\n                   };\n                 }\n               }\n\n               for (var p in buffer) {\n                 delete buffer[p];\n               }\n\n               return ret;\n             },\n           },\n         },\n         \"pu-9,9\": {\n           transitions: mhchemParser.createTransitions({\n             empty: {\n               0: {\n                 action_: \"output-0\",\n               },\n               o: {\n                 action_: \"output-o\",\n               },\n             },\n             \",\": {\n               0: {\n                 action_: [\"output-0\", \"comma\"],\n                 nextState: \"o\",\n               },\n             },\n             \".\": {\n               0: {\n                 action_: [\"output-0\", \"copy\"],\n                 nextState: \"o\",\n               },\n             },\n             else: {\n               \"*\": {\n                 action_: \"text=\",\n               },\n             },\n           }),\n           actions: {\n             comma: function comma() {\n               return {\n                 type_: \"commaDecimal\",\n               };\n             },\n             \"output-0\": function output0(buffer) {\n               /** @type {ParserOutput[]} */\n               var ret = [];\n               buffer.text_ = buffer.text_ || \"\";\n\n               if (buffer.text_.length > 4) {\n                 var a = buffer.text_.length % 3;\n\n                 if (a === 0) {\n                   a = 3;\n                 }\n\n                 for (var i = buffer.text_.length - 3; i > 0; i -= 3) {\n                   ret.push(buffer.text_.substr(i, 3));\n                   ret.push({\n                     type_: \"1000 separator\",\n                   });\n                 }\n\n                 ret.push(buffer.text_.substr(0, a));\n                 ret.reverse();\n               } else {\n                 ret.push(buffer.text_);\n               }\n\n               for (var p in buffer) {\n                 delete buffer[p];\n               }\n\n               return ret;\n             },\n             \"output-o\": function outputO(buffer) {\n               /** @type {ParserOutput[]} */\n               var ret = [];\n               buffer.text_ = buffer.text_ || \"\";\n\n               if (buffer.text_.length > 4) {\n                 var a = buffer.text_.length - 3;\n\n                 for (var i = 0; i < a; i += 3) {\n                   ret.push(buffer.text_.substr(i, 3));\n                   ret.push({\n                     type_: \"1000 separator\",\n                   });\n                 }\n\n                 ret.push(buffer.text_.substr(i));\n               } else {\n                 ret.push(buffer.text_);\n               }\n\n               for (var p in buffer) {\n                 delete buffer[p];\n               }\n\n               return ret;\n             },\n           },\n         }, //#endregion\n       }; //\n       // texify: Take MhchemParser output and convert it to TeX\n       //\n\n       /** @type {Texify} */\n\n       var texify = {\n         go: function go(input, isInner) {\n           // (recursive, max 4 levels)\n           if (!input) {\n             return \"\";\n           }\n\n           var res = \"\";\n           var cee = false;\n\n           for (var i = 0; i < input.length; i++) {\n             var inputi = input[i];\n\n             if (typeof inputi === \"string\") {\n               res += inputi;\n             } else {\n               res += texify._go2(inputi);\n\n               if (inputi.type_ === \"1st-level escape\") {\n                 cee = true;\n               }\n             }\n           }\n\n           if (!isInner && !cee && res) {\n             res = \"{\" + res + \"}\";\n           }\n\n           return res;\n         },\n         _goInner: function _goInner(input) {\n           if (!input) {\n             return input;\n           }\n\n           return texify.go(input, true);\n         },\n         _go2: function _go2(buf) {\n           /** @type {undefined | string} */\n           var res;\n\n           switch (buf.type_) {\n             case \"chemfive\":\n               res = \"\";\n               var b5 = {\n                 a: texify._goInner(buf.a),\n                 b: texify._goInner(buf.b),\n                 p: texify._goInner(buf.p),\n                 o: texify._goInner(buf.o),\n                 q: texify._goInner(buf.q),\n                 d: texify._goInner(buf.d),\n               }; //\n               // a\n               //\n\n               if (b5.a) {\n                 if (b5.a.match(/^[+\\-]/)) {\n                   b5.a = \"{\" + b5.a + \"}\";\n                 }\n\n                 res += b5.a + \"\\\\,\";\n               } //\n               // b and p\n               //\n\n               if (b5.b || b5.p) {\n                 res += \"{\\\\vphantom{X}}\";\n                 res += \"^{\\\\hphantom{\" + (b5.b || \"\") + \"}}_{\\\\hphantom{\" + (b5.p || \"\") + \"}}\";\n                 res += \"{\\\\vphantom{X}}\";\n                 res += \"^{\\\\smash[t]{\\\\vphantom{2}}\\\\mathllap{\" + (b5.b || \"\") + \"}}\";\n                 res += \"_{\\\\vphantom{2}\\\\mathllap{\\\\smash[t]{\" + (b5.p || \"\") + \"}}}\";\n               } //\n               // o\n               //\n\n               if (b5.o) {\n                 if (b5.o.match(/^[+\\-]/)) {\n                   b5.o = \"{\" + b5.o + \"}\";\n                 }\n\n                 res += b5.o;\n               } //\n               // q and d\n               //\n\n               if (buf.dType === \"kv\") {\n                 if (b5.d || b5.q) {\n                   res += \"{\\\\vphantom{X}}\";\n                 }\n\n                 if (b5.d) {\n                   res += \"^{\" + b5.d + \"}\";\n                 }\n\n                 if (b5.q) {\n                   res += \"_{\\\\smash[t]{\" + b5.q + \"}}\";\n                 }\n               } else if (buf.dType === \"oxidation\") {\n                 if (b5.d) {\n                   res += \"{\\\\vphantom{X}}\";\n                   res += \"^{\" + b5.d + \"}\";\n                 }\n\n                 if (b5.q) {\n                   res += \"{\\\\vphantom{X}}\";\n                   res += \"_{\\\\smash[t]{\" + b5.q + \"}}\";\n                 }\n               } else {\n                 if (b5.q) {\n                   res += \"{\\\\vphantom{X}}\";\n                   res += \"_{\\\\smash[t]{\" + b5.q + \"}}\";\n                 }\n\n                 if (b5.d) {\n                   res += \"{\\\\vphantom{X}}\";\n                   res += \"^{\" + b5.d + \"}\";\n                 }\n               }\n\n               break;\n\n             case \"rm\":\n               res = \"\\\\mathrm{\" + buf.p1 + \"}\";\n               break;\n\n             case \"text\":\n               if (buf.p1.match(/[\\^_]/)) {\n                 buf.p1 = buf.p1.replace(\" \", \"~\").replace(\"-\", \"\\\\text{-}\");\n                 res = \"\\\\mathrm{\" + buf.p1 + \"}\";\n               } else {\n                 res = \"\\\\text{\" + buf.p1 + \"}\";\n               }\n\n               break;\n\n             case \"roman numeral\":\n               res = \"\\\\mathrm{\" + buf.p1 + \"}\";\n               break;\n\n             case \"state of aggregation\":\n               res = \"\\\\mskip2mu \" + texify._goInner(buf.p1);\n               break;\n\n             case \"state of aggregation subscript\":\n               res = \"\\\\mskip1mu \" + texify._goInner(buf.p1);\n               break;\n\n             case \"bond\":\n               res = texify._getBond(buf.kind_);\n\n               if (!res) {\n                 throw [\"MhchemErrorBond\", \"mhchem Error. Unknown bond type (\" + buf.kind_ + \")\"];\n               }\n\n               break;\n\n             case \"frac\":\n               var c = \"\\\\frac{\" + buf.p1 + \"}{\" + buf.p2 + \"}\";\n               res = \"\\\\mathchoice{\\\\textstyle\" + c + \"}{\" + c + \"}{\" + c + \"}{\" + c + \"}\";\n               break;\n\n             case \"pu-frac\":\n               var d = \"\\\\frac{\" + texify._goInner(buf.p1) + \"}{\" + texify._goInner(buf.p2) + \"}\";\n               res = \"\\\\mathchoice{\\\\textstyle\" + d + \"}{\" + d + \"}{\" + d + \"}{\" + d + \"}\";\n               break;\n\n             case \"tex-math\":\n               res = buf.p1 + \" \";\n               break;\n\n             case \"frac-ce\":\n               res = \"\\\\frac{\" + texify._goInner(buf.p1) + \"}{\" + texify._goInner(buf.p2) + \"}\";\n               break;\n\n             case \"overset\":\n               res = \"\\\\overset{\" + texify._goInner(buf.p1) + \"}{\" + texify._goInner(buf.p2) + \"}\";\n               break;\n\n             case \"underset\":\n               res = \"\\\\underset{\" + texify._goInner(buf.p1) + \"}{\" + texify._goInner(buf.p2) + \"}\";\n               break;\n\n             case \"underbrace\":\n               res =\n                 \"\\\\underbrace{\" + texify._goInner(buf.p1) + \"}_{\" + texify._goInner(buf.p2) + \"}\";\n               break;\n\n             case \"color\":\n               res = \"{\\\\color{\" + buf.color1 + \"}{\" + texify._goInner(buf.color2) + \"}}\";\n               break;\n\n             case \"color0\":\n               res = \"\\\\color{\" + buf.color + \"}\";\n               break;\n\n             case \"arrow\":\n               var b6 = {\n                 rd: texify._goInner(buf.rd),\n                 rq: texify._goInner(buf.rq),\n               };\n\n               var arrow = \"\\\\x\" + texify._getArrow(buf.r);\n\n               if (b6.rq) {\n                 arrow += \"[{\" + b6.rq + \"}]\";\n               }\n\n               if (b6.rd) {\n                 arrow += \"{\" + b6.rd + \"}\";\n               } else {\n                 arrow += \"{}\";\n               }\n\n               res = arrow;\n               break;\n\n             case \"operator\":\n               res = texify._getOperator(buf.kind_);\n               break;\n\n             case \"1st-level escape\":\n               res = buf.p1 + \" \"; // &, \\\\\\\\, \\\\hlin\n\n               break;\n\n             case \"space\":\n               res = \" \";\n               break;\n\n             case \"entitySkip\":\n               res = \"~\";\n               break;\n\n             case \"pu-space-1\":\n               res = \"~\";\n               break;\n\n             case \"pu-space-2\":\n               res = \"\\\\mkern3mu \";\n               break;\n\n             case \"1000 separator\":\n               res = \"\\\\mkern2mu \";\n               break;\n\n             case \"commaDecimal\":\n               res = \"{,}\";\n               break;\n\n             case \"comma enumeration L\":\n               res = \"{\" + buf.p1 + \"}\\\\mkern6mu \";\n               break;\n\n             case \"comma enumeration M\":\n               res = \"{\" + buf.p1 + \"}\\\\mkern3mu \";\n               break;\n\n             case \"comma enumeration S\":\n               res = \"{\" + buf.p1 + \"}\\\\mkern1mu \";\n               break;\n\n             case \"hyphen\":\n               res = \"\\\\text{-}\";\n               break;\n\n             case \"addition compound\":\n               res = \"\\\\,{\\\\cdot}\\\\,\";\n               break;\n\n             case \"electron dot\":\n               res = \"\\\\mkern1mu \\\\bullet\\\\mkern1mu \";\n               break;\n\n             case \"KV x\":\n               res = \"{\\\\times}\";\n               break;\n\n             case \"prime\":\n               res = \"\\\\prime \";\n               break;\n\n             case \"cdot\":\n               res = \"\\\\cdot \";\n               break;\n\n             case \"tight cdot\":\n               res = \"\\\\mkern1mu{\\\\cdot}\\\\mkern1mu \";\n               break;\n\n             case \"times\":\n               res = \"\\\\times \";\n               break;\n\n             case \"circa\":\n               res = \"{\\\\sim}\";\n               break;\n\n             case \"^\":\n               res = \"uparrow\";\n               break;\n\n             case \"v\":\n               res = \"downarrow\";\n               break;\n\n             case \"ellipsis\":\n               res = \"\\\\ldots \";\n               break;\n\n             case \"/\":\n               res = \"/\";\n               break;\n\n             case \" / \":\n               res = \"\\\\,/\\\\,\";\n               break;\n\n             default:\n               assertNever(buf);\n               throw [\"MhchemBugT\", \"mhchem bug T. Please report.\"];\n             // Missing texify rule or unknown MhchemParser output\n           }\n\n           assertString(res);\n           return res;\n         },\n         _getArrow: function _getArrow(a) {\n           switch (a) {\n             case \"->\":\n               return \"rightarrow\";\n\n             case \"\\u2192\":\n               return \"rightarrow\";\n\n             case \"\\u27F6\":\n               return \"rightarrow\";\n\n             case \"<-\":\n               return \"leftarrow\";\n\n             case \"<->\":\n               return \"leftrightarrow\";\n\n             case \"<-->\":\n               return \"rightleftarrows\";\n\n             case \"<=>\":\n               return \"rightleftharpoons\";\n\n             case \"\\u21CC\":\n               return \"rightleftharpoons\";\n\n             case \"<=>>\":\n               return \"rightequilibrium\";\n\n             case \"<<=>\":\n               return \"leftequilibrium\";\n\n             default:\n               assertNever(a);\n               throw [\"MhchemBugT\", \"mhchem bug T. Please report.\"];\n           }\n         },\n         _getBond: function _getBond(a) {\n           switch (a) {\n             case \"-\":\n               return \"{-}\";\n\n             case \"1\":\n               return \"{-}\";\n\n             case \"=\":\n               return \"{=}\";\n\n             case \"2\":\n               return \"{=}\";\n\n             case \"#\":\n               return \"{\\\\equiv}\";\n\n             case \"3\":\n               return \"{\\\\equiv}\";\n\n             case \"~\":\n               return \"{\\\\tripledash}\";\n\n             case \"~-\":\n               return \"{\\\\mathrlap{\\\\raisebox{-.1em}{$-$}}\\\\raisebox{.1em}{$\\\\tripledash$}}\";\n\n             case \"~=\":\n               return \"{\\\\mathrlap{\\\\raisebox{-.2em}{$-$}}\\\\mathrlap{\\\\raisebox{.2em}{$\\\\tripledash$}}-}\";\n\n             case \"~--\":\n               return \"{\\\\mathrlap{\\\\raisebox{-.2em}{$-$}}\\\\mathrlap{\\\\raisebox{.2em}{$\\\\tripledash$}}-}\";\n\n             case \"-~-\":\n               return \"{\\\\mathrlap{\\\\raisebox{-.2em}{$-$}}\\\\mathrlap{\\\\raisebox{.2em}{$-$}}\\\\tripledash}\";\n\n             case \"...\":\n               return \"{{\\\\cdot}{\\\\cdot}{\\\\cdot}}\";\n\n             case \"....\":\n               return \"{{\\\\cdot}{\\\\cdot}{\\\\cdot}{\\\\cdot}}\";\n\n             case \"->\":\n               return \"{\\\\rightarrow}\";\n\n             case \"<-\":\n               return \"{\\\\leftarrow}\";\n\n             case \"<\":\n               return \"{<}\";\n\n             case \">\":\n               return \"{>}\";\n\n             default:\n               assertNever(a);\n               throw [\"MhchemBugT\", \"mhchem bug T. Please report.\"];\n           }\n         },\n         _getOperator: function _getOperator(a) {\n           switch (a) {\n             case \"+\":\n               return \" {}+{} \";\n\n             case \"-\":\n               return \" {}-{} \";\n\n             case \"=\":\n               return \" {}={} \";\n\n             case \"<\":\n               return \" {}<{} \";\n\n             case \">\":\n               return \" {}>{} \";\n\n             case \"<<\":\n               return \" {}\\\\ll{} \";\n\n             case \">>\":\n               return \" {}\\\\gg{} \";\n\n             case \"\\\\pm\":\n               return \" {}\\\\pm{} \";\n\n             case \"\\\\approx\":\n               return \" {}\\\\approx{} \";\n\n             case \"$\\\\approx$\":\n               return \" {}\\\\approx{} \";\n\n             case \"v\":\n               return \" \\\\downarrow{} \";\n\n             case \"(v)\":\n               return \" \\\\downarrow{} \";\n\n             case \"^\":\n               return \" \\\\uparrow{} \";\n\n             case \"(^)\":\n               return \" \\\\uparrow{} \";\n\n             default:\n               assertNever(a);\n               throw [\"MhchemBugT\", \"mhchem bug T. Please report.\"];\n           }\n         },\n       }; //\n       // Helpers for code anaylsis\n       // Will show type error at calling position\n       //\n\n       /** @param {number} a */\n\n       function assertNever(a) {}\n       /** @param {string} a */\n\n       function assertString(a) {}\n     })();\n     __webpack_exports__ = __webpack_exports__[\"default\"];\n     /******/ return __webpack_exports__;\n     /******/\n   })();\n });\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  '../katex.js': _req,\n  '../katex.js': _req0,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}