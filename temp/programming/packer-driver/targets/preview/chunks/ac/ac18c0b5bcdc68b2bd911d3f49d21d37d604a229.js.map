{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/extensions/as_framework/framework/assets/scripts/UIDrag.ts"],"names":["Component","EventHandler","Intersection2D","Mat4","Node","PolygonCollider2D","rect","UITransform","v2","v3","Vec2","Vec3","_decorator","AS","error","UIDrop","findParentCanvas","ccclass","property","disallowMultiple","requireComponent","matrixCached","worldMatrixCached","UIDrag","type","tooltip","displayOrder","_thisUITransform","_targetPosition","_previousTargetPosition","_validUIDrop","_resetPosition","_lerpTime","_parentCanvas","_canvasCamera","_collider","_isBeginValid","_actualParent","_isDragging","_isMoving","interactable","_interactable","dragSpeed","_dragSpeed","enableResetPosition","_enableResetPosition","target","_target","usePolygonCollider","_usePolygonCollider","targetPosition","resetScreenPoint","validUIDrop","checkUIDrop","previousTargetPosition","isMoving","isDragging","value","_addInputListeners","_removeInputListeners","set","__removeDrag","reset","forceSetPosition","convertToWorldSpaceAR","resetDrop","_setTargetPositionInternal","worldPosition","convertToNodeSpaceAR","node","targetWorldPosition","_checkUIDropInternal","x","y","awake","getComponent","canvas","name","cameraComponent","currentPositionInBounds","onEnable","on","EventType","PARENT_CHANGED","_onParentChanged","onDisable","off","update","dt","currPosition","equals","lerp","TOUCH_START","_onTouchStart","TOUCH_MOVE","_onTouchMove","TOUCH_END","_onTouchEnd","TOUCH_CANCEL","parent","NODE_DESTROYED","destroy","event","mouseWorld","screenToWorld","getLocationX","getLocationY","pointInPolygon","worldPoints","emitEvents","dragDidBeganEvents","emit","DRAG_DID_BEGAN","_getTargetBounds","contains","enableSnap","dragDidEndedEvents","DRAG_DID_END","touchLocation","enabledInHierarchy","oldUIDrop","getComponentsInChildren","find","uiDrop","__isInside","boundsType","BoundsType","CIRCLE","radius","circleRadius","center","dragBounds","getBoundingBoxToWorld","distances","distance","xMin","yMin","yMax","xMax","some","curr","__addDrag","position","dragMoveEvents","DRAG_MOVE","fromRTS","getRotation","getPosition","getScale","width","contentSize","height","localRect","anchorPoint","getWorldMatrix","multiply","transformMat4","Array"],"mappings":"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","sourcesContent":["import {\n  Camera,\n  Component,\n  EventHandler,\n  EventTouch,\n  Intersection2D,\n  Mat4,\n  Node,\n  PolygonCollider2D,\n  rect,\n  UITransform,\n  v2,\n  v3,\n  Vec2,\n  Vec3,\n  _decorator,\n} from \"cc\";\nimport { AS } from \"./ASComponent\";\nimport { error } from \"./Logger\";\nimport { UIDrop } from \"./UIDrop\";\nimport { findParentCanvas } from \"./Utils\";\n\nconst { ccclass, property, disallowMultiple, requireComponent } = _decorator;\n\nconst matrixCached = new Mat4();\nconst worldMatrixCached = new Mat4();\n\n@ccclass(\"UIDrag\")\n@disallowMultiple\n@requireComponent(UITransform)\nexport class UIDrag extends AS(Component) {\n  static readonly EventType = {\n    DRAG_DID_BEGAN: \"drag-did-began\",\n    DRAG_DID_END: \"drag-did-ended\",\n    DRAG_MOVE: \"drag-move\",\n  };\n\n  @property({\n    type: [EventHandler],\n    tooltip: \"The event handler to be triggered when drag begins.\",\n    displayOrder: 30,\n  })\n  dragDidBeganEvents = new Array<EventHandler>();\n\n  @property({\n    type: [EventHandler],\n    tooltip: \"The event handler to be triggered when drag ends.\",\n    displayOrder: 31,\n  })\n  dragDidEndedEvents = new Array<EventHandler>();\n\n  @property({\n    type: [EventHandler],\n    tooltip: \"The event handler to be triggered when drag target position changes.\",\n    displayOrder: 32,\n  })\n  dragMoveEvents = new Array<EventHandler>();\n\n  @property private _target: UITransform | null = null;\n\n  @property private _enableResetPosition = true;\n\n  @property private _usePolygonCollider = false;\n\n  @property private _interactable = true;\n\n  @property private _dragSpeed = 100;\n\n  private _thisUITransform: UITransform | null = null;\n\n  private _targetPosition: Vec3 = v3();\n\n  private _previousTargetPosition: Vec3 = v3();\n\n  private _validUIDrop: UIDrop | null | undefined = null;\n\n  private _resetPosition: Vec3 = v3();\n\n  private _lerpTime = 0;\n\n  private _parentCanvas: UITransform | null = null;\n\n  private _canvasCamera: Camera | null = null;\n\n  private _collider: PolygonCollider2D | null = null;\n\n  private _isBeginValid = false;\n\n  private _actualParent: Node | null = null;\n\n  private _isDragging = false;\n\n  private _isMoving = false;\n\n  @property get interactable() {\n    return this._interactable;\n  }\n\n  @property get dragSpeed() {\n    return this._dragSpeed;\n  }\n\n  @property({ tooltip: \"Enable to reset position on mouse up if not inside a UIDrop.\" })\n  get enableResetPosition() {\n    return this._enableResetPosition;\n  }\n\n  @property({\n    type: UITransform,\n    tooltip:\n      \"The node to use as area for dragging. This drag will be limited to the bounds of the \" +\n      \"target node. NOTE: Do not use a parent (or grandparents) of this drag as target!\",\n  })\n  get target(): UITransform | null {\n    return this._target;\n  }\n\n  @property get usePolygonCollider() {\n    return this._usePolygonCollider;\n  }\n\n  get targetPosition() {\n    return this._targetPosition;\n  }\n\n  get resetScreenPoint() {\n    return this._resetPosition;\n  }\n\n  get validUIDrop() {\n    return this.checkUIDrop();\n  }\n\n  get previousTargetPosition() {\n    return this._previousTargetPosition;\n  }\n\n  get isMoving() {\n    return this._isMoving;\n  }\n\n  get isDragging() {\n    return this._isDragging;\n  }\n\n  set interactable(value) {\n    if (this._interactable === value) return;\n    this._interactable = value;\n\n    if (this._interactable) this._addInputListeners();\n    else this._removeInputListeners();\n  }\n\n  set dragSpeed(value: number) {\n    this._dragSpeed = value;\n  }\n\n  set enableResetPosition(value) {\n    this._enableResetPosition = value;\n  }\n\n  set target(value: UITransform | null) {\n    this._target = value;\n  }\n\n  set usePolygonCollider(value) {\n    this._usePolygonCollider = value;\n  }\n\n  set targetPosition(value: Vec3) {\n    this._lerpTime = 0;\n    this._previousTargetPosition.set(this._targetPosition);\n    this._targetPosition.set(value);\n\n    this._validUIDrop?.__removeDrag(this);\n    this._validUIDrop = null;\n  }\n\n  set resetScreenPoint(value: Vec3) {\n    this._resetPosition.set(value);\n  }\n\n  reset() {\n    if (this._resetPosition) {\n      this.forceSetPosition(this._parentCanvas!.convertToWorldSpaceAR(this._resetPosition));\n    }\n\n    this._validUIDrop?.__removeDrag(this);\n    this._validUIDrop = null;\n  }\n\n  resetDrop() {\n    this._validUIDrop?.__removeDrag(this);\n    this._validUIDrop = null;\n    if (this._resetPosition) {\n      this._setTargetPositionInternal(this._resetPosition);\n    }\n  }\n\n  forceSetPosition(worldPosition: Vec3) {\n    if (worldPosition == null) return;\n    this.targetPosition = this._parentCanvas!.convertToNodeSpaceAR(worldPosition);\n    this.node.worldPosition = worldPosition;\n    this._validUIDrop?.__removeDrag(this);\n    this._validUIDrop = null;\n  }\n\n  checkUIDrop() {\n    const targetWorldPosition = this._parentCanvas!.convertToWorldSpaceAR(this._targetPosition);\n    this._checkUIDropInternal(v2(targetWorldPosition.x, targetWorldPosition.y));\n\n    // If valid UI Drop doesn't allow multiple drag's in them, reset.\n    return this._validUIDrop;\n  }\n\n  awake() {\n    this._thisUITransform = this.getComponent(UITransform);\n\n    const canvas = findParentCanvas(this.node);\n    if (canvas == null) {\n      error(`UIDrag: ${this.node.name} has no canvas parent.`);\n      return;\n    }\n\n    this._canvasCamera = canvas.cameraComponent;\n    this._parentCanvas = canvas.getComponent(UITransform);\n    if (this.target == null) {\n      this.target = this._parentCanvas;\n    }\n    this._collider = this.getComponent(PolygonCollider2D);\n\n    const currentPositionInBounds = this._parentCanvas!.convertToNodeSpaceAR(\n      this.node.worldPosition,\n    );\n    this.resetScreenPoint = this.targetPosition = currentPositionInBounds;\n    this._previousTargetPosition.set(currentPositionInBounds);\n  }\n\n  onEnable() {\n    if (this._interactable) this._addInputListeners();\n    this.node.on(Node.EventType.PARENT_CHANGED, this._onParentChanged, this);\n    this._onParentChanged();\n  }\n\n  onDisable() {\n    this._removeInputListeners();\n    this.node.off(Node.EventType.PARENT_CHANGED, this._onParentChanged, this);\n  }\n\n  update(dt: number) {\n    let currPosition = this._parentCanvas!.convertToNodeSpaceAR(this.node.worldPosition);\n    if (Vec3.equals(currPosition, this._targetPosition)) {\n      this._isMoving = false;\n      return;\n    }\n    this._lerpTime += this.dragSpeed * dt;\n    if (this._lerpTime > 1) this._lerpTime = 1;\n    currPosition = currPosition.lerp(this._targetPosition, this._lerpTime);\n    this.node.worldPosition = this._parentCanvas!.convertToWorldSpaceAR(currPosition);\n    this._isMoving = true;\n  }\n\n  private _addInputListeners() {\n    this.node.on(Node.EventType.TOUCH_START, this._onTouchStart, this);\n    this.node.on(Node.EventType.TOUCH_MOVE, this._onTouchMove, this);\n    this.node.on(Node.EventType.TOUCH_END, this._onTouchEnd, this);\n    this.node.on(Node.EventType.TOUCH_CANCEL, this._onTouchEnd, this);\n  }\n\n  private _removeInputListeners() {\n    this.node.off(Node.EventType.TOUCH_START, this._onTouchStart, this);\n    this.node.off(Node.EventType.TOUCH_MOVE, this._onTouchMove, this);\n    this.node.off(Node.EventType.TOUCH_END, this._onTouchEnd, this);\n    this.node.off(Node.EventType.TOUCH_CANCEL, this._onTouchEnd, this);\n  }\n\n  private _onParentChanged() {\n    if (this._isDragging || this._actualParent === this.node.parent) return;\n    this._actualParent?.off(Node.EventType.NODE_DESTROYED, this.node.destroy, this);\n    this._actualParent = this.node.parent;\n    // Ensure this is also destroyed when parent is destroyed.\n    this._actualParent?.on(Node.EventType.NODE_DESTROYED, this.node.destroy, this);\n  }\n\n  private _onTouchStart(event: EventTouch) {\n    if (this._canvasCamera == null || this._parentCanvas == null) return;\n    const mouseWorld = this._canvasCamera.screenToWorld(\n      v3(event.getLocationX(), event.getLocationY()),\n    );\n    if (this._usePolygonCollider && this._collider) {\n      this._isBeginValid = Intersection2D.pointInPolygon(\n        v2(mouseWorld.x, mouseWorld.y),\n        this._collider.worldPoints,\n      );\n    } else {\n      this._isBeginValid = true;\n    }\n\n    this._isDragging = true;\n    this.node.parent = this._parentCanvas.node;\n    EventHandler.emitEvents(this.dragDidBeganEvents, this);\n    this.node.emit(UIDrag.EventType.DRAG_DID_BEGAN, this);\n  }\n\n  private _onTouchMove(event: EventTouch) {\n    if (this._canvasCamera == null || !this._isBeginValid) return;\n    // Convert mouse location from screen to world coords.\n    const mouseWorld = this._canvasCamera.screenToWorld(\n      v3(event.getLocationX(), event.getLocationY()),\n    );\n\n    // If outside target stop move.\n    if (!this._getTargetBounds().contains(v2(mouseWorld.x, mouseWorld.y))) {\n      return;\n    }\n\n    this._setTargetPositionInternal(this._parentCanvas!.convertToNodeSpaceAR(mouseWorld));\n  }\n\n  private _onTouchEnd(event: EventTouch) {\n    if (!this._isBeginValid) return;\n    if (this._canvasCamera != null) {\n      // Convert mouse location from screen to world coords.\n      const mouseWorld = this._canvasCamera.screenToWorld(\n        v3(event.getLocationX(), event.getLocationY()),\n      );\n\n      // Check to see if inside any valid uidrop under target.\n      this._checkUIDropInternal(v2(mouseWorld.x, mouseWorld.y));\n    }\n\n    if (this._validUIDrop != null && this._validUIDrop.enableSnap) {\n      this._setTargetPositionInternal(\n        this._parentCanvas!.convertToNodeSpaceAR(this._validUIDrop.node.worldPosition),\n      );\n    }\n\n    if (this.enableResetPosition && this._validUIDrop == null) {\n      this._setTargetPositionInternal(this._resetPosition);\n    }\n\n    this.node.parent = this._actualParent;\n    this._isDragging = false;\n    EventHandler.emitEvents(this.dragDidEndedEvents, this);\n    this.node.emit(UIDrag.EventType.DRAG_DID_END, this);\n  }\n\n  private _checkUIDropInternal(touchLocation: Vec2) {\n    if (!this._parentCanvas || !this.enabledInHierarchy) return;\n    const oldUIDrop = this._validUIDrop;\n    this._validUIDrop = this._parentCanvas\n      .getComponentsInChildren(UIDrop)\n      .find((uiDrop: UIDrop) => uiDrop.enabledInHierarchy && uiDrop.__isInside(touchLocation));\n\n    // Check and see if valid if drop is circle type.\n    if (\n      this._thisUITransform &&\n      this._validUIDrop &&\n      this._validUIDrop.boundsType === UIDrop.BoundsType.CIRCLE\n    ) {\n      const radius = this._validUIDrop.circleRadius;\n      const center = this._validUIDrop.node.worldPosition;\n      const dragBounds = this._thisUITransform.getBoundingBoxToWorld();\n\n      const distances = [\n        Vec2.distance(v2(center.x, center.y), v2(dragBounds.xMin, dragBounds.yMin)),\n        Vec2.distance(v2(center.x, center.y), v2(dragBounds.xMin, dragBounds.yMax)),\n        Vec2.distance(v2(center.x, center.y), v2(dragBounds.xMax, dragBounds.yMin)),\n        Vec2.distance(v2(center.x, center.y), v2(dragBounds.xMax, dragBounds.yMax)),\n      ];\n\n      if (distances.some((curr) => curr >= radius)) {\n        // If any corner outside the circle radius set as invalid.\n        this._validUIDrop = null;\n      }\n    }\n\n    if (oldUIDrop !== this._validUIDrop) {\n      oldUIDrop?.__removeDrag(this);\n      if (!this._validUIDrop?.__addDrag(this)) this._validUIDrop = null;\n    }\n  }\n\n  private _setTargetPositionInternal(position: Vec3) {\n    this._previousTargetPosition.set(this._targetPosition);\n    this._targetPosition.set(position);\n    this._lerpTime = 0;\n    EventHandler.emitEvents(this.dragMoveEvents, this);\n    this.node.emit(UIDrag.EventType.DRAG_MOVE, this);\n  }\n\n  private _getTargetBounds() {\n    if (this.target == null) return rect();\n    Mat4.fromRTS(\n      matrixCached,\n      this.target.node.getRotation(),\n      this.target.node.getPosition(),\n      this.target.node.getScale(),\n    );\n    const width = this.target.contentSize.width;\n    const height = this.target.contentSize.height;\n    const localRect = rect(\n      -this.target.anchorPoint.x * width,\n      -this.target.anchorPoint.y * height,\n      width,\n      height,\n    );\n    this.target.node.parent?.getWorldMatrix(worldMatrixCached);\n    Mat4.multiply(worldMatrixCached, worldMatrixCached, matrixCached);\n    return localRect.transformMat4(worldMatrixCached);\n  }\n}\n"]}