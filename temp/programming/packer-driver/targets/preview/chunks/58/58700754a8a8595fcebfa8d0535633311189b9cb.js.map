{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/extensions/as_framework/framework/assets/scripts/ReplicatedEditBox.ts"],"names":["Component","EditBox","EventHandler","_decorator","AS","error","networkReplicator","ccclass","disallowMultiple","requireComponent","ReplicatedEditBox","constructor","_replicationIndex","_editBox","registerEvent","awake","getComponent","node","on","EventType","EDITING_DID_BEGAN","_onEditingBegan","EDITING_DID_ENDED","_onEditingEnded","TEXT_CHANGED","_onTextChanged","onActivityEvent","name","data","emitEvents","editingDidBegan","emit","editingDidEnded","string","textChanged","getStateData","updateStateData","isReplicated","sendEvent","id","editBox"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,S,OAAAA,S;AAAWC,MAAAA,O,OAAAA,O;AAASC,MAAAA,Y,OAAAA,Y;AAAcC,MAAAA,U,OAAAA,U;;AAClCC,MAAAA,E,iBAAAA,E;;AACAC,MAAAA,K,iBAAAA,K;;AACkBC,MAAAA,iB,iBAAAA,iB;;;;;;;OAErB;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,gBAAX;AAA6BC,QAAAA;AAA7B,O,GAAkDN,U;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;;mCAIaO,iB,WAHZH,OAAO,CAAC,mBAAD,C,UACPE,gBAAgB,CAACR,OAAD,C,+BAChBO,gB,UAFD,MAGaE,iBAHb,SAGuC;AAAA;AAAA,oBAAGV,SAAH,CAHvC,CAGiF;AAK/EW,QAAAA,WAAW,GAAG;AACZ;AADY,eAJNC,iBAIM;AAAA,eAFNC,QAEM,GAFqB,IAErB;AAEZ,eAAKD,iBAAL,GAAyB;AAAA;AAAA,sDAAkBE,aAAlB,CAAgC,IAAhC,CAAzB;AACD;;AAEDC,QAAAA,KAAK,GAAG;AACN,eAAKF,QAAL,GAAgB,KAAKG,YAAL,CAAkBf,OAAlB,CAAhB,CADM,CAEN;;AACA,cAAI,KAAKY,QAAL,IAAiB,IAArB,EAA2B;AACzB;AAAA;AAAA,gCAAM,mEAAN;AACA;AACD;;AACD,eAAKI,IAAL,CAAUC,EAAV,CAAajB,OAAO,CAACkB,SAAR,CAAkBC,iBAA/B,EAAkD,KAAKC,eAAvD,EAAwE,IAAxE;AACA,eAAKJ,IAAL,CAAUC,EAAV,CAAajB,OAAO,CAACkB,SAAR,CAAkBG,iBAA/B,EAAkD,KAAKC,eAAvD,EAAwE,IAAxE;AACA,eAAKN,IAAL,CAAUC,EAAV,CAAajB,OAAO,CAACkB,SAAR,CAAkBK,YAA/B,EAA6C,KAAKC,cAAlD,EAAkE,IAAlE;AACD;;AAEDC,QAAAA,eAAe,CAACC,IAAD,EAAeC,IAAf,EAA8B;AAC3C,cAAI,KAAKf,QAAL,IAAiB,IAArB,EAA2B;;AAC3B,kBAAQc,IAAR;AACE,iBAAK1B,OAAO,CAACkB,SAAR,CAAkBC,iBAAvB;AAA0C;AACxClB,gBAAAA,YAAY,CAAC2B,UAAb,CAAwB,KAAKhB,QAAL,CAAciB,eAAtC,EAAuD,KAAKjB,QAA5D;AACA,qBAAKI,IAAL,CAAUc,IAAV,CAAe9B,OAAO,CAACkB,SAAR,CAAkBC,iBAAjC,EAAoD,KAAKP,QAAzD,EAAmE,IAAnE;AACA;AACD;;AAED,iBAAKZ,OAAO,CAACkB,SAAR,CAAkBG,iBAAvB;AAA0C;AACxCpB,gBAAAA,YAAY,CAAC2B,UAAb,CAAwB,KAAKhB,QAAL,CAAcmB,eAAtC,EAAuD,KAAKnB,QAA5D;AACA,qBAAKI,IAAL,CAAUc,IAAV,CAAe9B,OAAO,CAACkB,SAAR,CAAkBG,iBAAjC,EAAoD,KAAKT,QAAzD,EAAmE,IAAnE;AACA;AACD;;AAED,iBAAKZ,OAAO,CAACkB,SAAR,CAAkBK,YAAvB;AAAqC;AACnC;AACA,oBAAII,IAAI,IAAI,IAAZ,EAAkB;AAChB;AAAA;AAAA,sCAAM,yDAAN;AACA;AACD;;AACD,qBAAKf,QAAL,CAAcoB,MAAd,GAAuBL,IAAvB;AACA1B,gBAAAA,YAAY,CAAC2B,UAAb,CAAwB,KAAKhB,QAAL,CAAcqB,WAAtC,EAAmD,KAAKrB,QAAxD;AACA,qBAAKI,IAAL,CAAUc,IAAV,CAAe9B,OAAO,CAACkB,SAAR,CAAkBK,YAAjC,EAA+C,KAAKX,QAApD,EAA8D,IAA9D;AACA;AACD;;AAED;AACE;AA1BJ;AA4BD;;AAEDsB,QAAAA,YAAY,GAAG;AAAA;;AACb,mCAAO,KAAKtB,QAAZ,qBAAO,eAAeoB,MAAtB;AACD;;AAEDG,QAAAA,eAAe,CAACR,IAAD,EAAe;AAC5B,cAAI,KAAKf,QAAL,IAAiB,IAArB,EAA2B;AAC3B,eAAKA,QAAL,CAAcoB,MAAd,GAAuBL,IAAvB;AACA1B,UAAAA,YAAY,CAAC2B,UAAb,CAAwB,KAAKhB,QAAL,CAAciB,eAAtC,EAAuD,KAAKjB,QAA5D;AACA,eAAKI,IAAL,CAAUc,IAAV,CAAe9B,OAAO,CAACkB,SAAR,CAAkBC,iBAAjC,EAAoD,KAAKP,QAAzD,EAAmE,IAAnE;AACAX,UAAAA,YAAY,CAAC2B,UAAb,CAAwB,KAAKhB,QAAL,CAAcqB,WAAtC,EAAmD,KAAKrB,QAAxD;AACA,eAAKI,IAAL,CAAUc,IAAV,CAAe9B,OAAO,CAACkB,SAAR,CAAkBK,YAAjC,EAA+C,KAAKX,QAApD,EAA8D,IAA9D;AACAX,UAAAA,YAAY,CAAC2B,UAAb,CAAwB,KAAKhB,QAAL,CAAcmB,eAAtC,EAAuD,KAAKnB,QAA5D;AACA,eAAKI,IAAL,CAAUc,IAAV,CAAe9B,OAAO,CAACkB,SAAR,CAAkBG,iBAAjC,EAAoD,KAAKT,QAAzD,EAAmE,IAAnE;AACD;;AAEOQ,QAAAA,eAAe,CAACR,QAAD,EAAoBwB,YAApB,EAA4C;AACjE,cAAIA,YAAY,IAAIxB,QAAQ,IAAI,IAAhC,EAAsC;AACtC;AAAA;AAAA,sDAAkByB,SAAlB,CAA4B;AAC1BC,YAAAA,EAAE,EAAE,KAAK3B,iBADiB;AAE1Be,YAAAA,IAAI,EAAE1B,OAAO,CAACkB,SAAR,CAAkBC;AAFE,WAA5B;AAID;;AAEOG,QAAAA,eAAe,CAACV,QAAD,EAAoBwB,YAApB,EAA4C;AACjE,cAAIA,YAAY,IAAIxB,QAAQ,IAAI,IAAhC,EAAsC;AACtC;AAAA;AAAA,sDAAkByB,SAAlB,CAA4B;AAC1BC,YAAAA,EAAE,EAAE,KAAK3B,iBADiB;AAE1Be,YAAAA,IAAI,EAAE1B,OAAO,CAACkB,SAAR,CAAkBG;AAFE,WAA5B;AAID;;AAEOG,QAAAA,cAAc,CAACe,OAAD,EAAmBH,YAAnB,EAA2C;AAC/D,cAAIA,YAAJ,EAAkB;AAClB;AAAA;AAAA,sDAAkBC,SAAlB,CAA4B;AAC1BC,YAAAA,EAAE,EAAE,KAAK3B,iBADiB;AAE1Be,YAAAA,IAAI,EAAE1B,OAAO,CAACkB,SAAR,CAAkBK,YAFE;AAG1BI,YAAAA,IAAI,EAAEY,OAAO,CAACP;AAHY,WAA5B;AAKD;;AA5F8E,O","sourcesContent":["import { Component, EditBox, EventHandler, _decorator } from \"cc\";\nimport { AS } from \"./ASComponent\";\nimport { error } from \"./Logger\";\nimport { IReplicatedEvent, networkReplicator } from \"./NetworkReplicator\";\n\nconst { ccclass, disallowMultiple, requireComponent } = _decorator;\n\n/**\n * Class to automate replication of events for the `EditBox` attached to\n * the same node using the `NetworkReplicator`.\n *\n * Here only the `text-changed` event is replicated.\n * The begin and end events are used to prevent simultaneous editing.\n */\n@ccclass(\"ReplicatedEditBox\")\n@requireComponent(EditBox)\n@disallowMultiple\nexport class ReplicatedEditBox extends AS(Component) implements IReplicatedEvent {\n  private _replicationIndex: string;\n\n  private _editBox: EditBox | null = null;\n\n  constructor() {\n    super();\n    this._replicationIndex = networkReplicator.registerEvent(this);\n  }\n\n  awake() {\n    this._editBox = this.getComponent(EditBox);\n    // TODO: Add debounce.\n    if (this._editBox == null) {\n      error(\"The replicated edit box must be attached to a node with edit box.\");\n      return;\n    }\n    this.node.on(EditBox.EventType.EDITING_DID_BEGAN, this._onEditingBegan, this);\n    this.node.on(EditBox.EventType.EDITING_DID_ENDED, this._onEditingEnded, this);\n    this.node.on(EditBox.EventType.TEXT_CHANGED, this._onTextChanged, this);\n  }\n\n  onActivityEvent(name: string, data?: string) {\n    if (this._editBox == null) return;\n    switch (name) {\n      case EditBox.EventType.EDITING_DID_BEGAN: {\n        EventHandler.emitEvents(this._editBox.editingDidBegan, this._editBox);\n        this.node.emit(EditBox.EventType.EDITING_DID_BEGAN, this._editBox, true);\n        break;\n      }\n\n      case EditBox.EventType.EDITING_DID_ENDED: {\n        EventHandler.emitEvents(this._editBox.editingDidEnded, this._editBox);\n        this.node.emit(EditBox.EventType.EDITING_DID_ENDED, this._editBox, true);\n        break;\n      }\n\n      case EditBox.EventType.TEXT_CHANGED: {\n        // Update the edit box in current user applet.\n        if (data == null) {\n          error(\"The data recieved on text-changed event cannot be null.\");\n          return;\n        }\n        this._editBox.string = data;\n        EventHandler.emitEvents(this._editBox.textChanged, this._editBox);\n        this.node.emit(EditBox.EventType.TEXT_CHANGED, this._editBox, true);\n        break;\n      }\n\n      default:\n        break;\n    }\n  }\n\n  getStateData() {\n    return this._editBox?.string;\n  }\n\n  updateStateData(data: string) {\n    if (this._editBox == null) return;\n    this._editBox.string = data;\n    EventHandler.emitEvents(this._editBox.editingDidBegan, this._editBox);\n    this.node.emit(EditBox.EventType.EDITING_DID_BEGAN, this._editBox, true);\n    EventHandler.emitEvents(this._editBox.textChanged, this._editBox);\n    this.node.emit(EditBox.EventType.TEXT_CHANGED, this._editBox, true);\n    EventHandler.emitEvents(this._editBox.editingDidEnded, this._editBox);\n    this.node.emit(EditBox.EventType.EDITING_DID_ENDED, this._editBox, true);\n  }\n\n  private _onEditingBegan(_editBox: EditBox, isReplicated?: boolean) {\n    if (isReplicated || _editBox == null) return;\n    networkReplicator.sendEvent({\n      id: this._replicationIndex,\n      name: EditBox.EventType.EDITING_DID_BEGAN,\n    });\n  }\n\n  private _onEditingEnded(_editBox: EditBox, isReplicated?: boolean) {\n    if (isReplicated || _editBox == null) return;\n    networkReplicator.sendEvent({\n      id: this._replicationIndex,\n      name: EditBox.EventType.EDITING_DID_ENDED,\n    });\n  }\n\n  private _onTextChanged(editBox: EditBox, isReplicated?: boolean) {\n    if (isReplicated) return;\n    networkReplicator.sendEvent({\n      id: this._replicationIndex,\n      name: EditBox.EventType.TEXT_CHANGED,\n      data: editBox.string,\n    });\n  }\n}\n"]}