{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/assets/GuessTheWord/GuessTheWord.ts"],"names":["_decorator","Component","instantiate","Button","Label","Sprite","Prefab","Layout","Color","AS","ReplicatedButton","ccclass","property","GuessTheWord","_iterator","_blanks","_options","awake","i","CorrectWord","length","newBlank","blank","parent","blankContainer","node","push","JumbledWord","newOption","option","optionContainer","getComponentInChildren","string","addComponent","forEach","btn","on","EventType","CLICK","getComponent","enabled","color","clear","_clear","check","C","blanks","active","scheduleOnce"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, instantiate, Button, Label, Sprite, EditBox, Prefab, Layout, color, Color} from 'cc';\nimport { AS } from \"db://as_framework/scripts//ASComponent\";\nimport { ReplicatedButton } from \"db://as_framework/scripts/ReplicatedButton\";\nconst { ccclass, property } = _decorator;\n\n@ccclass('GuessTheWord')\nexport class GuessTheWord extends AS(Component) {\n\n    @property(Layout) blankContainer : Layout | null = null;\n    @property(Layout) optionContainer : Layout | null = null;\n    @property(Prefab) blank : Prefab | null = null;\n    @property(Prefab) option : Prefab | null = null;\n\n    @property(Button) check : Button | null = null;\n    @property(Button) clear : Button | null = null;\n    @property CorrectWord = '';\n    @property JumbledWord = '';\n\n    private _iterator = 0;\n    private _blanks : Node[] | null = [];\n    private _options : Node[] | null = [];\n\n    awake(){\n\n        for(let i = 0; i < this.CorrectWord.length; i++) {\n            let newBlank = instantiate(this.blank);\n            newBlank.parent = this.blankContainer.node;\n            this._blanks.push(newBlank);\n        }\n        for(let i = 0; i < this.JumbledWord.length; i++) {\n            let newOption = instantiate(this.option);\n            newOption.parent = this.optionContainer.node;\n            newOption.getComponentInChildren(Label).string = this.JumbledWord[i];\n            newOption.addComponent(ReplicatedButton);\n            this._options.push(newOption);\n        }\n\n        this._options.forEach((btn, i) => {\n            \n            btn.on(Button.EventType.CLICK, () => {\n                if(this._iterator < this.CorrectWord.length)\n                {\n                    this._blanks[this._iterator].getComponentInChildren(Label).string = btn.getComponentInChildren(Label).string;\n                    btn.getComponent(Button).enabled = false;\n                    btn.getComponent(Sprite).color= new Color(255,255,255,180);\n                    this._iterator++;\n                }\n            })\n        \n        })\n\n\n        this.clear.node.on(Button.EventType.CLICK,this._clear,this);\n\n        this.check.node.on(Button.EventType.CLICK, () => {\n            \n            let C =''\n            this._blanks.forEach((blanks, i) => {\n                C += blanks.getComponentInChildren(Label).string;\n            })\n\n            if(C==this.CorrectWord)\n            {   this.check.node.active = false;\n                this.clear.enabled = false;\n                this.clear.getComponent(Sprite).color= new Color(255,255,255,180);\n\n                this._blanks.forEach((blanks, i) => {\n                    blanks.getComponent(Sprite).color= new Color(0,255,0,255);\n                })\n                this._options.forEach((btn, i) => {\n                    btn.getComponent(Button).enabled = false;\n                    btn.getComponent(Sprite).color= new Color(255,255,255,180);\n                })\n\n            }\n            else\n            {\n                this._blanks.forEach((blanks, i) => {\n                    blanks.getComponent(Sprite).color= new Color(255,44,44,255);\n                })\n                this.scheduleOnce(this._clear, 0.5);\n\n            }\n\n        })\n\n    }\n\n    private _clear(){\n        this._iterator = 0;\n        this._options.forEach((btn, i) => {\n            btn.getComponent(Button).enabled = true;\n            btn.getComponent(Sprite).color= new Color(255,255,255,255);\n        })\n        this._blanks.forEach((blanks, i) => {\n            blanks.getComponentInChildren(Label).string = '';\n            blanks.getComponent(Sprite).color= new Color(255,255,255,255);\n        })\n    }\n\n\n\n}\n\n"]}