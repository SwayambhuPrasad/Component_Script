{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/assets/Swap/Swap.ts"],"names":["Color","Component","Node","Sprite","SpriteFrame","_decorator","AS","UIDrag","ccclass","property","requireComponent","MCQ","type","Number","awake","_updateComponent","i","parentImage","length","DragContainer","children","addComponent","spriteFrame","dragImage","ParentImageContainer","_check","dragables","getComponentsInChildren","forEach","dragable","Answer","toString","name","_feedback","feedtype","colorarray","GREEN","RED","node","getComponent","color"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,K,OAAAA,K;AAAOC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,U,OAAAA,U;;AAC7CC,MAAAA,E,iBAAAA,E;;AACAC,MAAAA,M,iBAAAA,M;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,QAAX;AAAqBC,QAAAA;AAArB,O,GAA0CL,U;;qBAGnCM,G,WADZH,OAAO,CAAC,MAAD,C,UAELC,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAER;AAAR,OAAD,C,UACRK,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAER;AAAR,OAAD,C,UACRK,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEV;AAAR,OAAD,C,UACRO,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEV;AAAR,OAAD,C,UACRO,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEC;AAAR,OAAD,C,2BANX,MACaF,GADb,SACyB;AAAA;AAAA,oBAAGV,SAAH,CADzB,CACuC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAOrCa,QAAAA,KAAK,GAAG;AACN,eAAKC,gBAAL;AACD;;AAEDA,QAAAA,gBAAgB,GAAG;AACjB,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,WAAL,CAAiBC,MAArC,EAA6CF,CAAC,EAA9C,EAAkD;AAChD,iBAAKG,aAAL,CAAmBC,QAAnB,CAA4BJ,CAA5B,EAA+BK,YAA/B,CAA4ClB,MAA5C,EAAoDmB,WAApD,GAAkE,KAAKC,SAAL,CAAeP,CAAf,CAAlE;AACA,iBAAKG,aAAL,CAAmBC,QAAnB,CAA4BJ,CAA5B,EAA+BK,YAA/B;AAAA;AAAA;AACA,iBAAKG,oBAAL,CAA0BJ,QAA1B,CAAmCJ,CAAnC,EAAsCK,YAAtC,CAAmDlB,MAAnD,EAA2DmB,WAA3D,GAAyE,KAAKL,WAAL,CAAiBD,CAAjB,CAAzE;AACD;AACF;;AACDS,QAAAA,MAAM,GAAG;AACP,cAAMC,SAAS,GAAG,KAAKP,aAAL,CAAmBQ,uBAAnB;AAAA;AAAA,+BAAlB;AAEAD,UAAAA,SAAS,CAACE,OAAV,CAAkB,CAACC,QAAD,EAAWb,CAAX,KAAiB;AACjC,gBAAI,KAAKc,MAAL,CAAYC,QAAZ,MAA0B,KAAKZ,aAAL,CAAmBC,QAAnB,CAA4BJ,CAA5B,EAA+BgB,IAA7D,EAAmE;AACjE,mBAAKC,SAAL,CAAe,CAAf,EAAkBJ,QAAlB;AACD,aAFD,MAEO,KAAKI,SAAL,CAAe,CAAf,EAAkBJ,QAAlB;AACR,WAJD;AAKD;;AACDI,QAAAA,SAAS,CAACC,QAAD,EAAWL,QAAX,EAAqB;AAC5B,cAAMM,UAAU,GAAG,CAACnC,KAAK,CAACoC,KAAP,EAAcpC,KAAK,CAACqC,GAApB,CAAnB;AACAR,UAAAA,QAAQ,CAACS,IAAT,CAAcC,YAAd,CAA2BpC,MAA3B,EAAmCqC,KAAnC,GAA2CL,UAAU,CAACD,QAAD,CAArD;AACD;;AA9BoC,O;;;;;iBACiC,E;;;;;;;iBACF,E;;;;;;;;;;;;;;;;;iBAGb,E","sourcesContent":["import { Color, Component, Node, Sprite, SpriteFrame, _decorator } from \"cc\";\nimport { AS } from \"db://as_framework/scripts//ASComponent\";\nimport { UIDrag } from \"db://as_framework/scripts/UIDrag\";\nconst { ccclass, property, requireComponent } = _decorator;\n\n@ccclass(\"Swap\")\nexport class MCQ extends AS(Component) {\n  @property({ type: SpriteFrame }) private parentImage: SpriteFrame[] = [];\n  @property({ type: SpriteFrame }) private dragImage: SpriteFrame[] = [];\n  @property({ type: Node }) private DragContainer: Node;\n  @property({ type: Node }) private ParentImageContainer: Node;\n  @property({ type: Number }) private Answer: number[] = [];\n\n  awake() {\n    this._updateComponent();\n  }\n\n  _updateComponent() {\n    for (let i = 0; i < this.parentImage.length; i++) {\n      this.DragContainer.children[i].addComponent(Sprite).spriteFrame = this.dragImage[i];\n      this.DragContainer.children[i].addComponent(UIDrag);\n      this.ParentImageContainer.children[i].addComponent(Sprite).spriteFrame = this.parentImage[i];\n    }\n  }\n  _check() {\n    const dragables = this.DragContainer.getComponentsInChildren(UIDrag);\n\n    dragables.forEach((dragable, i) => {\n      if (this.Answer.toString() == this.DragContainer.children[i].name) {\n        this._feedback(1, dragable);\n      } else this._feedback(2, dragable);\n    });\n  }\n  _feedback(feedtype, dragable) {\n    const colorarray = [Color.GREEN, Color.RED];\n    dragable.node.getComponent(Sprite).color = colorarray[feedtype];\n  }\n}\n"]}