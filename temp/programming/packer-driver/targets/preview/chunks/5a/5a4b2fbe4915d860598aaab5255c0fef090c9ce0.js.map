{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/extensions/as_framework/framework/assets/scripts/DownloadButton.ts"],"names":["Button","director","Director","EventHandler","_decorator","networkReplicator","Screenshot","ccclass","requireComponent","DownloadButton","onEnable","node","on","EventType","CLICK","_onClickDownload","onDisable","off","setScreenshotCamera","emitEvents","beforeCaptureEvents","emit","BEFORE_CAPTURE","active","once","EVENT_AFTER_DRAW","dataURL","getImageURL","_downloadURL","sendScreenShot","unsetScreenshotCamera","afterCaptureEvents","AFTER_CAPTURE","url","name","link","document","createElement","download","href","body","appendChild","click"],"mappings":";;;;;;;;;;;;;;;;;;AAASA,MAAAA,M,OAAAA,M;AAAQC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,Y,OAAAA,Y;AAAcC,MAAAA,U,OAAAA,U;;AAC1CC,MAAAA,iB,iBAAAA,iB;;AACAC,MAAAA,U,iBAAAA,U;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAgCJ,U;;gCAIzBK,c,WAFZF,OAAO,CAAC,gBAAD,C,UACPC,gBAAgB,CAACR,MAAD,C,+BADjB,MAEaS,cAFb;AAAA;AAAA,oCAE+C;AAC7CC,QAAAA,QAAQ,GAAG;AACT,eAAKC,IAAL,CAAUC,EAAV,CAAaZ,MAAM,CAACa,SAAP,CAAiBC,KAA9B,EAAqC,KAAKC,gBAA1C,EAA4D,IAA5D;AACD;;AAEDC,QAAAA,SAAS,GAAG;AACV,eAAKL,IAAL,CAAUM,GAAV,CAAcjB,MAAM,CAACa,SAAP,CAAiBC,KAA/B,EAAsC,KAAKC,gBAA3C,EAA6D,IAA7D;AACD;;AAEOA,QAAAA,gBAAgB,GAAG;AACzB,eAAKG,mBAAL;AACAf,UAAAA,YAAY,CAACgB,UAAb,CAAwB,KAAKC,mBAA7B,EAAkD,IAAlD;AACA,eAAKT,IAAL,CAAUU,IAAV,CAAeZ,cAAc,CAACI,SAAf,CAAyBS,cAAxC,EAAwD,IAAxD;AACA,eAAKX,IAAL,CAAUY,MAAV,GAAmB,KAAnB;AACAtB,UAAAA,QAAQ,CAACuB,IAAT,CAActB,QAAQ,CAACuB,gBAAvB,EAAyC,MAAM;AAC7C,gBAAMC,OAAO,GAAG,KAAKC,WAAL,EAAhB;;AACA,iBAAKC,YAAL,CAAkBF,OAAlB,EAA2B,YAA3B,EAF6C,CAG7C;;;AACA;AAAA;AAAA,wDAAkBG,cAAlB,CAAiCH,OAAjC;AACA,iBAAKf,IAAL,CAAUY,MAAV,GAAmB,IAAnB;AACA,iBAAKO,qBAAL;AACA3B,YAAAA,YAAY,CAACgB,UAAb,CAAwB,KAAKY,kBAA7B,EAAiD,IAAjD;AACA,iBAAKpB,IAAL,CAAUU,IAAV,CAAeZ,cAAc,CAACI,SAAf,CAAyBmB,aAAxC,EAAuD,IAAvD;AACD,WATD;AAUD;;AAEOJ,QAAAA,YAAY,CAACK,GAAD,EAAcC,IAAd,EAA4B;AAC9C,cAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAb;AACAF,UAAAA,IAAI,CAACG,QAAL,GAAgBJ,IAAhB;AACAC,UAAAA,IAAI,CAACI,IAAL,GAAYN,GAAZ;AACAG,UAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BN,IAA1B;AACAA,UAAAA,IAAI,CAACO,KAAL;AACD;;AAhC4C,O","sourcesContent":["import { Button, director, Director, EventHandler, _decorator } from \"cc\";\nimport { networkReplicator } from \"./NetworkReplicator\";\nimport { Screenshot } from \"./Screenshot\";\n\nconst { ccclass, requireComponent } = _decorator;\n\n@ccclass(\"DownloadButton\")\n@requireComponent(Button)\nexport class DownloadButton extends Screenshot {\n  onEnable() {\n    this.node.on(Button.EventType.CLICK, this._onClickDownload, this);\n  }\n\n  onDisable() {\n    this.node.off(Button.EventType.CLICK, this._onClickDownload, this);\n  }\n\n  private _onClickDownload() {\n    this.setScreenshotCamera();\n    EventHandler.emitEvents(this.beforeCaptureEvents, this);\n    this.node.emit(DownloadButton.EventType.BEFORE_CAPTURE, this);\n    this.node.active = false;\n    director.once(Director.EVENT_AFTER_DRAW, () => {\n      const dataURL = this.getImageURL();\n      this._downloadURL(dataURL, \"screenshot\");\n      // Send to platform as well to ensure download on mobile devices.\n      networkReplicator.sendScreenShot(dataURL);\n      this.node.active = true;\n      this.unsetScreenshotCamera();\n      EventHandler.emitEvents(this.afterCaptureEvents, this);\n      this.node.emit(DownloadButton.EventType.AFTER_CAPTURE, this);\n    });\n  }\n\n  private _downloadURL(url: string, name: string) {\n    const link = document.createElement(\"a\");\n    link.download = name;\n    link.href = url;\n    document.body.appendChild(link);\n    link.click();\n  }\n}\n"]}