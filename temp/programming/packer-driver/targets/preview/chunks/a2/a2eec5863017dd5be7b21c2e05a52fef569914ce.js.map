{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/assets/Swap/Swap.ts"],"names":["Button","Color","Component","Node","Sprite","SpriteFrame","_decorator","AS","UIDrag","ccclass","property","requireComponent","MCQ","type","Number","_position","_draggables","awake","_updateComponent","check","addComponent","_collect","on","EventType","CLICK","_check","_dragables","DragContainer","getComponentsInChildren","forEach","dragable","i","push","parentImage","length","children","spriteFrame","dragImage","ParentImageContainer","j","getPosition","y","sort","console","log","Answer","position","getComponent","color","_feedback","feedtype","node"],"mappings":"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","sourcesContent":["import { Button, Color, Component, Node, Sprite, SpriteFrame, UITransform, _decorator } from \"cc\";\nimport { AS } from \"db://as_framework/scripts//ASComponent\";\nimport { UIDrag } from \"db://as_framework/scripts/UIDrag\";\nconst { ccclass, property, requireComponent } = _decorator;\n\n@ccclass(\"Swap\")\nexport class MCQ extends AS(Component) {\n  @property({ type: SpriteFrame }) private parentImage: SpriteFrame[] = [];\n  @property({ type: SpriteFrame }) private dragImage: SpriteFrame[] = [];\n  @property({ type: Node }) private DragContainer: Node;\n  @property({ type: Node }) private ParentImageContainer: Node;\n  @property({ type: Node }) private check: Node;\n  @property({ type: Number }) private Answer: number[] = [];\n\n  private  _position= [];\n  private _draggables = [];\n\n  awake() {\n    this._updateComponent();\n    this.check.addComponent(Button);\n    this._collect();\n    this.check.on(Button.EventType.CLICK, this._check,this);\n\n    const _dragables = this.DragContainer.getComponentsInChildren(UIDrag);\n    _dragables.forEach((dragable, i) => {\n\n      this._draggables.push(dragable)\n    });\n\n  }\n\n  _updateComponent() {\n    for (let i = 0; i < this.parentImage.length; i++) {\n      this.DragContainer.children[i].addComponent(Sprite).spriteFrame = this.dragImage[i];\n      this.DragContainer.children[i].addComponent(UIDrag);\n      this.ParentImageContainer.children[i].addComponent(Sprite).spriteFrame = this.parentImage[i];\n    }\n  }\n\n  _collect(){\n    for(let j=0;j<this.DragContainer.children.length;j++){\n      this._position.push(this.DragContainer.children[j].getPosition().y);\n      this._position.sort();\n      }\n  }\n\n\n  _check() {\n    this._draggables.forEach((dragable, i) => {\n      console.log(this.DragContainer.children[this.Answer[i]].position.y,\"comp\",this._position[i])\n      if (this._draggables[this.Answer[i]].position.y == this._position[i]) {\n        console.log(\"right ans\"+i)\n        dragable.getComponent(Sprite).color = new Color(0,255,0,255);\n      } else  {\n        console.log(dragable.getComponent(Sprite).color)\n        console.log(new Color(255,0,0,255))\n        dragable.getComponent(Sprite).color = new Color(255,0,0,255);}\n    });\n  }\n\n\n  _feedback(feedtype, dragable) {\n    console.log(\"in feedback\",feedtype);\n   // const colorarray = [new Color(0,255,0,255),new Color(255,0,0,255)];\n    dragable.node.getComponent(Sprite).color = new Color(0,255,0,255);\n  }\n}\n"]}