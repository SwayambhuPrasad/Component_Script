{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/assets/Definition/Definition.ts"],"names":["_decorator","Component","Button","AS","UIPopup","ReplicatedButton","ccclass","property","Definition","awake","button","addComponent","_addEventListeners","popup","getComponentInChildren","node","on","EventType","CLICK","isVisible","hide","_onButtonClick","show"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,M,OAAAA,M;;AACvBC,MAAAA,E,iBAAAA,E;;AACAC,MAAAA,O,iBAAAA,O;;AACAC,MAAAA,gB,iBAAAA,gB;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;4BAGjBQ,U,WADZF,OAAO,CAAC,YAAD,C,UAEHC,QAAQ;AAAA;AAAA,6B,UACRA,QAAQ,CAACL,MAAD,C,2BAHb,MACaM,UADb,SACgC;AAAA;AAAA,oBAAGP,SAAH,CADhC,CAC8C;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAI1CQ,QAAAA,KAAK,GAAE;AACH,eAAKC,MAAL,CAAYC,YAAZ;AAAA;AAAA;;AACA,eAAKC,kBAAL;;AACA,eAAKC,KAAL,CAAWC,sBAAX,CAAkCZ,MAAlC,EAA0Ca,IAA1C,CAA+CC,EAA/C,CAAkDd,MAAM,CAACe,SAAP,CAAiBC,KAAnE,EAA2E,MAAM;AAC7E,gBAAI,KAAKL,KAAL,CAAWM,SAAf,EACI,KAAKN,KAAL,CAAWO,IAAX;AACP,WAHD;AAIH;;AACOR,QAAAA,kBAAkB,GAAG;AACzB,eAAKF,MAAL,CAAYK,IAAZ,CAAiBC,EAAjB,CAAoBd,MAAM,CAACe,SAAP,CAAiBC,KAArC,EAA4C,KAAKG,cAAjD,EAAiE,IAAjE;AACH;;AACOA,QAAAA,cAAc,GAAG;AACrB,eAAKR,KAAL,CAAWS,IAAX;AACH;;AAjByC,O;;;;;iBACC,I;;;;;;;iBACD,I","sourcesContent":["import { _decorator, Component, Button} from 'cc';\nimport { AS } from \"db://as_framework/scripts//ASComponent\";\nimport { UIPopup } from \"db://as_framework/scripts/UIPopup\";\nimport { ReplicatedButton } from \"db://as_framework/scripts/ReplicatedButton\";\nconst { ccclass, property } = _decorator;\n\n@ccclass('Definition')\nexport class Definition extends AS(Component) {\n    @property(UIPopup) popup: UIPopup | null = null;\n    @property(Button) button: Button | null = null;\n\n    awake(){\n        this.button.addComponent(ReplicatedButton);\n        this._addEventListeners();\n        this.popup.getComponentInChildren(Button).node.on(Button.EventType.CLICK,  () => {\n            if (this.popup.isVisible)\n                this.popup.hide();\n        })\n    }\n    private _addEventListeners() {\n        this.button.node.on(Button.EventType.CLICK, this._onButtonClick, this);\n    }\n    private _onButtonClick() {        \n        this.popup.show();\n    }\n}\n"]}