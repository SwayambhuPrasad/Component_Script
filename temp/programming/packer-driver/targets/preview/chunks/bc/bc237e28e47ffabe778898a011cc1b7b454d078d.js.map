{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/extensions/as_framework/framework/assets/scripts/GroupTag.ts"],"names":["removeFromGroup","group","node","bin","tagNodes","has","delete","addToGroup","Set","add","Component","_decorator","EDITOR","AS","error","ccclass","property","GroupTag","tag","_tag","value","getNodes","awake","onDestroy"],"mappings":";;;;;;;;;;;AAQA,WAASA,eAAT,CAAyBC,KAAzB,EAAwCC,IAAxC,EAAoD;AAClD,QAAMC,GAAG,GAAGC,QAAQ,CAACH,KAAD,CAApB;;AACA,QAAI,CAACE,GAAL,EAAU;AACR;AAAA;AAAA,qCAAeF,KAAf;AACA;AACD;;AACD,QAAIE,GAAG,CAACE,GAAJ,CAAQH,IAAR,CAAJ,EAAmBC,GAAG,CAACG,MAAJ,CAAWJ,IAAX;AACpB;;AAED,WAASK,UAAT,CAAoBN,KAApB,EAAmCC,IAAnC,EAA+C;AAC7C,QAAI,CAACD,KAAL,EAAY;AACZ,QAAIE,GAAG,GAAGC,QAAQ,CAACH,KAAD,CAAlB;;AACA,QAAI,CAACE,GAAL,EAAU;AACRA,MAAAA,GAAG,GAAGC,QAAQ,CAACH,KAAD,CAAR,GAAkB,IAAIO,GAAJ,EAAxB;AACD;;AAED,QAAI,CAACL,GAAG,CAACE,GAAJ,CAAQH,IAAR,CAAL,EAAoBC,GAAG,CAACM,GAAJ,CAAQP,IAAR;AACrB;;;;;;;;;;;;;;;AAzBQQ,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,U,OAAAA,U;;AACjBC,MAAAA,M,UAAAA,M;;AACAC,MAAAA,E,iBAAAA,E;;AACAC,MAAAA,K,iBAAAA,K;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;AAExBP,MAAAA,Q,GAAkD,E;;0BAsB3Ca,Q,WADZF,OAAO,CAAC,UAAD,C,2BAAR,MACaE,QADb,SAC8B;AAAA;AAAA,oBAAGP,SAAH,CAD9B,CAC4C;AAAA;AAAA;;AAAA;AAAA;;AAGzB,YAAHQ,GAAG,GAAG;AAClB,iBAAO,KAAKC,IAAZ;AACD;;AAEM,YAAHD,GAAG,CAACE,KAAD,EAAQ;AACb,cAAIR,MAAJ,EAAY;AACV,iBAAKO,IAAL,GAAYC,KAAZ;AACA;AACD;;AACD,cAAI,KAAKD,IAAL,KAAcC,KAAlB,EAAyB;AACzB,cAAI,KAAKD,IAAT,EAAenB,eAAe,CAAC,KAAKmB,IAAN,EAAY,KAAKjB,IAAjB,CAAf;AACf,eAAKiB,IAAL,GAAYC,KAAZ;AACA,cAAI,KAAKD,IAAT,EAAeZ,UAAU,CAAC,KAAKY,IAAN,EAAY,KAAKjB,IAAjB,CAAV;AAChB;;AAEc,eAARmB,QAAQ,CAACH,GAAD,EAAc;AAC3B,iBAAOd,QAAQ,CAACc,GAAD,CAAf;AACD;;AAEDI,QAAAA,KAAK,GAAG;AACN,cAAI,CAAC,KAAKJ,GAAV,EAAe;AACfX,UAAAA,UAAU,CAAC,KAAKW,GAAN,EAAW,KAAKhB,IAAhB,CAAV;AACD;;AAEDqB,QAAAA,SAAS,GAAG;AACV,cAAI,CAAC,KAAKL,GAAV,EAAe;AACflB,UAAAA,eAAe,CAAC,KAAKkB,GAAN,EAAW,KAAKhB,IAAhB,CAAf;AACD;;AA9ByC,O,uEACzCc,Q;;;;;iBAA0B,E;;+DAE1BA,Q","sourcesContent":["import { Component, Node, _decorator } from \"cc\";\nimport { EDITOR } from \"cc/env\";\nimport { AS } from \"./ASComponent\";\nimport { error } from \"./Logger\";\nconst { ccclass, property } = _decorator;\n\nconst tagNodes: Record<string, Set<Node> | undefined> = {};\n\nfunction removeFromGroup(group: string, node: Node) {\n  const bin = tagNodes[group];\n  if (!bin) {\n    error(`Group ${group} does not exist`);\n    return;\n  }\n  if (bin.has(node)) bin.delete(node);\n}\n\nfunction addToGroup(group: string, node: Node) {\n  if (!group) return;\n  let bin = tagNodes[group];\n  if (!bin) {\n    bin = tagNodes[group] = new Set();\n  }\n\n  if (!bin.has(node)) bin.add(node);\n}\n\n@ccclass(\"GroupTag\")\nexport class GroupTag extends AS(Component) {\n  @property protected _tag = \"\";\n\n  @property get tag() {\n    return this._tag;\n  }\n\n  set tag(value) {\n    if (EDITOR) {\n      this._tag = value;\n      return;\n    }\n    if (this._tag === value) return;\n    if (this._tag) removeFromGroup(this._tag, this.node);\n    this._tag = value;\n    if (this._tag) addToGroup(this._tag, this.node);\n  }\n\n  static getNodes(tag: string) {\n    return tagNodes[tag];\n  }\n\n  awake() {\n    if (!this.tag) return;\n    addToGroup(this.tag, this.node);\n  }\n\n  onDestroy() {\n    if (!this.tag) return;\n    removeFromGroup(this.tag, this.node);\n  }\n}\n"]}