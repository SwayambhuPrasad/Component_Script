{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/extensions/as_framework/framework/assets/scripts/latex/virtualCanvasNodes/SvgNode.ts"],"names":["SvgNode","VirtualStretchyNode","constructor","virtualHtmlNode","minWidth","classes","type","typeId","listWidth","bounds","width","attributes","toString"],"mappings":";;;mDAUaA,O;;;;;;;;;;;;;;;;;;;;;;AARJC,MAAAA,mB,iBAAAA,mB;;;;;;;AAET;AACA;AACA;AACA;AACA;AACA;yBACaD,O,GAAN,MAAMA,OAAN;AAAA;AAAA,sDAA0C;AAK/CE,QAAAA,WAAW,CAACC,eAAD,EAA8CC,QAA9C,EAAgEC,OAAhE,EAAoF;AAC7F,gBAAMD,QAAN,EAAgBC,OAAhB;AAD6F,eAF/FF,eAE+F;AAE7F,eAAKA,eAAL,GAAuBA,eAAvB;AACD;AAED;AACF;AACA;AACA;AACA;;;AACU,YAAJG,IAAI,GAAW;AACjB,iBAAON,OAAO,CAACO,MAAf;AACD;AAED;AACF;AACA;;;AACe,YAATC,SAAS,GAAG;AACd,iBAAO,KAAKC,MAAL,CAAYC,KAAnB;AACD;;AAEY,YAATF,SAAS,CAACA,SAAD,EAAY;AACvB,eAAKC,MAAL,CAAYC,KAAZ,GAAoBF,SAApB;AACA,eAAKL,eAAL,CAAqBQ,UAArB,CAAgCD,KAAhC,GAAwCF,SAAS,CAACI,QAAV,EAAxC;AACD;;AA7B8C,O;;AAApCZ,MAAAA,O,CACKO,M,GAAS,S","sourcesContent":["import { ClassList } from \".\";\nimport KatexTypes from \"../katex/katex.d\";\nimport { VirtualStretchyNode } from \"./VirtualStretchyNode\";\n\n/**\n * An SvgNode represents an svg element, which gets converted to canvas drawing commands.\n * It's stretchy as it's size is determined by the content surrounding it.\n *\n * Examples include sqrt, overleftarrow.\n */\nexport class SvgNode extends VirtualStretchyNode {\n  static readonly typeId = \"SvgNode\";\n\n  virtualHtmlNode: KatexTypes.domTree.SvgNode;\n\n  constructor(virtualHtmlNode: KatexTypes.domTree.SvgNode, minWidth: number, classes: ClassList) {\n    super(minWidth, classes);\n    this.virtualHtmlNode = virtualHtmlNode;\n  }\n\n  /**\n   * Returns the type of the VirtualCanvasNode\n   *\n   * @return {string}\n   */\n  get type(): string {\n    return SvgNode.typeId;\n  }\n\n  /**\n   * Sets the table width for the node and adjusts the Svg attributes\n   */\n  get listWidth() {\n    return this.bounds.width;\n  }\n\n  set listWidth(listWidth) {\n    this.bounds.width = listWidth;\n    this.virtualHtmlNode.attributes.width = listWidth.toString();\n  }\n}\n"]}