{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/assets/MCQ/script/MCQ.ts"],"names":["_decorator","Component","Button","UITransform","ReplicatedButton","ccclass","property","requireComponent","MCQ","awake","insertButtonsComp","node","getComponentsInChildren","forEach","child","i","addComponent","choiceButtons","btn","click","push","on","EventType","CLICK","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAA6BC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;;AAGjDC,MAAAA,gB,iBAAAA,gB;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,QAAX;AAAqBC,QAAAA;AAArB,O,GAA0CP,U;;qBAGnCQ,G,WADZH,OAAO,CAAC,KAAD,C,gBAAR,MACaG,GADb,SACyBP,SADzB,CACmC;AAC/BQ,QAAAA,KAAK,GAAG;AAEJ,cAAMC,iBAAiB,GAAG,KAAKC,IAAL,CAAUC,uBAAV,CAAkCT,WAAlC,CAA1B;AACAO,UAAAA,iBAAiB,CAACG,OAAlB,CAA0B,CAACC,KAAD,EAAQC,CAAR,KAAc;AAChCD,YAAAA,KAAK,CAACE,YAAN,CAAmBd,MAAnB;AACAY,YAAAA,KAAK,CAACE,YAAN;AAAA;AAAA;AACP,WAHD;AAIA,cAAMC,aAAa,GAAG,KAAKN,IAAL,CAAUC,uBAAV,CAAkCV,MAAlC,CAAtB;AACAe,UAAAA,aAAa,CAACJ,OAAd,CAAsB,CAACK,GAAD,EAAKH,CAAL,KAAW;AAC7B,gBAAII,KAAK,GAAC,EAAV;AACAA,YAAAA,KAAK,CAACC,IAAN,CAAW,CAAX;AACAF,YAAAA,GAAG,CAACP,IAAJ,CAASU,EAAT,CAAYnB,MAAM,CAACoB,SAAP,CAAiBC,KAA7B,iCAAmC,aAAS;AACxCJ,cAAAA,KAAK,CAACJ,CAAD,CAAL,GAAW,CAAX,GAAa,CAAb;AACH,aAFD;AAGH,WAND;AAQH;;AAGDS,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAtB8B,O","sourcesContent":["import { _decorator, Component, Node,instantiate, Button, UITransform, UI } from 'cc';\nimport { AS } from \"db://as_framework/scripts//ASComponent\";\nimport { UIPopup } from \"db://as_framework/scripts/UIPopup\";\nimport { ReplicatedButton } from \"db://as_framework/scripts/ReplicatedButton\";\nconst { ccclass, property, requireComponent } = _decorator;\n\n@ccclass('MCQ')\nexport class MCQ extends Component {\n    awake() {\n       \n        const insertButtonsComp = this.node.getComponentsInChildren(UITransform);\n        insertButtonsComp.forEach((child, i) => {\n                child.addComponent(Button);\n                child.addComponent(ReplicatedButton);\n        })\n        const choiceButtons = this.node.getComponentsInChildren(Button);\n        choiceButtons.forEach((btn,i) => {\n            let click=[];\n            click.push(0)\n            btn.node.on(Button.EventType.CLICK,async()=>{\n                click[i] ? 0:1 ;\n            })\n        });\n        \n    }\n\n\n    update(deltaTime: number) {\n        \n    }\n}\n\n"]}