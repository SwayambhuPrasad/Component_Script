{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/extensions/as_framework/framework/assets/scripts/ResponsiveCanvas.ts"],"names":["Component","ResolutionPolicy","screen","view","_decorator","AS","ccclass","disallowMultiple","ResponsiveCanvas","makeResponsive","enabledInHierarchy","deviceResolution","windowSize","designResolution","getDesignResolutionSize","desiredRatio","width","height","deviceRatio","setResolutionPolicy","FIXED_HEIGHT","FIXED_WIDTH","awake","setResizeCallback"],"mappings":";;;;;;;;;;;;;;AAASA,MAAAA,S,OAAAA,S;AAAWC,MAAAA,gB,OAAAA,gB;AAAkBC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,U,OAAAA,U;;AAC3CC,MAAAA,E,iBAAAA,E;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAgCH,U;AAEtC;AACA;AACA;;kCAGaI,gB,WAFZF,OAAO,CAAC,kBAAD,C,gBACPC,gB,UADD,MAEaC,gBAFb,SAEsC;AAAA;AAAA,oBAAGR,SAAH,CAFtC,CAEoD;AAClDS,QAAAA,cAAc,GAAG;AACf,cAAI,CAAC,KAAKC,kBAAV,EAA8B;AAC9B,cAAMC,gBAAgB,GAAGT,MAAM,CAACU,UAAhC;AACA,cAAMC,gBAAgB,GAAGV,IAAI,CAACW,uBAAL,EAAzB,CAHe,CAKf;;AACA,cAAMC,YAAY,GAAGF,gBAAgB,CAACG,KAAjB,GAAyBH,gBAAgB,CAACI,MAA/D,CANe,CAOf;;AACA,cAAMC,WAAW,GAAGP,gBAAgB,CAACK,KAAjB,GAAyBL,gBAAgB,CAACM,MAA9D;;AAEA,cAAIC,WAAW,IAAIH,YAAnB,EAAiC;AAC/BZ,YAAAA,IAAI,CAACgB,mBAAL,CAAyBlB,gBAAgB,CAACmB,YAA1C;AACD,WAFD,MAEO,IAAIF,WAAW,GAAGH,YAAlB,EAAgC;AACrCZ,YAAAA,IAAI,CAACgB,mBAAL,CAAyBlB,gBAAgB,CAACoB,WAA1C;AACD;AACF;;AAEDC,QAAAA,KAAK,GAAG;AACNnB,UAAAA,IAAI,CAACoB,iBAAL,CAAuB,KAAKd,cAA5B;AACA,eAAKA,cAAL;AACD;;AArBiD,O","sourcesContent":["import { Component, ResolutionPolicy, screen, view, _decorator } from \"cc\";\nimport { AS } from \"./ASComponent\";\n\nconst { ccclass, disallowMultiple } = _decorator;\n\n/**\n * Make the canvas responsive for any aspect ratio.\n */\n@ccclass(\"ResponsiveCanvas\")\n@disallowMultiple\nexport class ResponsiveCanvas extends AS(Component) {\n  makeResponsive() {\n    if (!this.enabledInHierarchy) return;\n    const deviceResolution = screen.windowSize;\n    const designResolution = view.getDesignResolutionSize();\n\n    // calculte design ratio\n    const desiredRatio = designResolution.width / designResolution.height;\n    // calculte device ratio\n    const deviceRatio = deviceResolution.width / deviceResolution.height;\n\n    if (deviceRatio >= desiredRatio) {\n      view.setResolutionPolicy(ResolutionPolicy.FIXED_HEIGHT);\n    } else if (deviceRatio < desiredRatio) {\n      view.setResolutionPolicy(ResolutionPolicy.FIXED_WIDTH);\n    }\n  }\n\n  awake() {\n    view.setResizeCallback(this.makeResponsive);\n    this.makeResponsive();\n  }\n}\n"]}