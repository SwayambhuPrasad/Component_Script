{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/assets/MCQ/script/MCQ.ts"],"names":["Button","Component","find","instantiate","Label","Layout","Prefab","_decorator","AS","UIView","ReplicatedButton","UIAnimationLibrary","debug","ChangeBackground","CheckPrompt","ValidationEvent","ccclass","property","requireComponent","AnswerType","MCQ","type","Number","String","Boolean","backGround","_selection","Array","store","awake","on","_setNavStatus","bind","createRuntimeOption","insertChild","insertButtonsComp","optionsContainer","node","children","choiceButtons","map","child","btn","addComponent","EventType","CLICK","checkSelection","forEach","i","push","SingleAns","active","getComponent","ButtonClick","play","lableAssigner","onEnable","_navButtonVisibility","screen","ScreenTag","console","log","_callToVisible","Screen","optionLabel","length","addchild","optionPrefab","parent","isCorrect","reduce","check","isSelected","answer","checkFeedback","getComponentInChildren","showCorrect","showTryAgain","ev","dispatchEvent","mcqLable","getComponentsInChildren","btnLable","string","statusIndex","Promise","all","status","flash"],"mappings":"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","sourcesContent":["import { Button, Canvas, Component, find, instantiate, Label, Layout, Prefab, _decorator, Node, EventHandler, Event, SpriteFrame, bits } from \"cc\";\nimport { AS, UIView } from \"db://as_framework/scripts\";\nimport { ReplicatedButton } from \"db://as_framework/scripts\";\nimport { UIAnimationLibrary } from \"db://as_framework/scripts/UIAnimLibrary\";\nimport { debug } from \"db://as_framework/scripts\";\n\n\nimport { ChangeBackground } from \"../../Background/ChangeBackground\";\nimport { CheckPrompt } from \"../../Background/CheckPrompt\";\nimport { ValidationEvent } from \"../../Background/ValidationEvent\";\nconst { ccclass, property, requireComponent } = _decorator;\n\nenum AnswerType {\n  SINGLE_CORRECT,\n  MULTIPLE_CORRECT,\n}\n\n@ccclass(\"MCQ\")\nexport class MCQ extends AS(Component) {\n\n  private backGround: Node = null;\n\n  @property({ type: Number }) ScreenTag: Number = -1;\n\n  @property({ type: String }) private optionLabel: string[] = [];\n\n  @property(Prefab) private optionPrefab: Prefab = null;\n\n  //@property(SpriteFrame) private optionSprite: SpriteFrame[] = [];\n\n  @property(Layout) private optionsContainer: Layout | null = null;\n\n  //@property({type: Enum(AnswerType)}) private answerType = AnswerType.SINGLE_CORRECT;\n\n  // @property({visible: function (this: MCQ) {return this.answerType === AnswerType.SINGLE_CORRECT}}) private x;\n  private _selection = Array<boolean>();\n\n  @property({ type: Boolean }) private answer = [];\n\n  @property({ type: Boolean }) private createRuntimeOption = true;\n\n  @property private changeColorAsFeedback = true;\n\n  @property private SingleAns = true;\n\n  private store = -1;\n\n\n  //private ChangeBackground;\n\n  awake() {\n    this.backGround = find(\"Canvas_new/BackGround\");\n    this.backGround.on(\"Screen\", this._setNavStatus.bind(this));\n\n    // const BackGround=new  ChangeBackground\n    // BackGround.node.on(\"Screen\",this._setNavStatus.bind(this,BackGround))\n\n    if (this.createRuntimeOption) this.insertChild();\n\n    const insertButtonsComp = this.optionsContainer.node.children;\n\n    const choiceButtons = insertButtonsComp.map((child) => {\n      const btn = child.addComponent(Button);\n      child.addComponent(ReplicatedButton);\n      return btn;\n    });\n    this.node.children[1].addComponent(Button);\n    this.node.children[1].addComponent(ReplicatedButton);\n    this.node.children[1].addComponent(UIView);\n    this.node.children[1].on(Button.EventType.CLICK, () => {\n      this.checkSelection();\n    });\n    choiceButtons.forEach((btn, i) => {\n      this._selection.push(false);\n\n      btn.node.on(Button.EventType.CLICK, async () => {\n        if (this.SingleAns)\n          if (this.store != -1) {\n            choiceButtons[this.store].node.children[0].active = false;\n            this._selection[this.store] = false;\n          }\n        this.store = i\n        this.backGround.getComponent(ChangeBackground).ButtonClick.play();\n        if (this._selection[i] === false) {\n          btn.node.children[0].active = true;\n          this._selection[i] = true;\n        } else {\n          btn.node.children[0].active = false;\n          this._selection[i] = false;\n        }\n      });\n    });\n    this.lableAssigner();\n\n  }\n\n  onEnable() {\n    this.backGround.getComponent(ChangeBackground)._navButtonVisibility(false, false, false)\n  }\n  // onDisable(){\n  //   this.backGround.getComponent(ChangeBackground)._navButtonVisibility(false,true,false)\n  // }\n\n  _setNavStatus(screen) {\n    if (this.ScreenTag == screen) {\n      console.log(\"set\", screen)\n      this.backGround.getComponent(ChangeBackground)._navButtonVisibility(false, true, false)\n    }\n  }\n\n\n\n  _callToVisible(Screen) {\n    if (this.ScreenTag == Screen) this.node.active = true;\n    else if (this.ScreenTag == -1) return;\n    else this.node.active = false;\n  }\n\n  insertChild() {\n    for (let i = 0; i < this.optionLabel.length; i++) {\n      let addchild = instantiate(this.optionPrefab);\n      addchild.parent = this.optionsContainer.node;\n    }\n  }\n\n  async checkSelection() {\n    this.backGround.getComponent(ChangeBackground).ButtonClick.play();\n    const isCorrect = this._selection.reduce((check, isSelected, i) => {\n      check &&= isSelected === this.answer[i]\n      return check;\n    }, true);\n\n    this.checkFeedback(isCorrect ? 1 : 2);\n    this.node.children[1].active = false;\n    if (isCorrect)\n      await this.backGround.getComponentInChildren(CheckPrompt).showCorrect();\n    else await this.backGround.getComponentInChildren(CheckPrompt).showTryAgain();\n    this.node.children[1].active = true;\n    const ev = new ValidationEvent(true, isCorrect)\n    this.node.dispatchEvent(ev)\n    debug(\"Dispatched event - \", ev)\n  }\n\n  lableAssigner() {\n    const mcqLable = this.node.getComponentsInChildren(Label);\n    mcqLable.forEach((btnLable, i) => {\n      if (this.optionLabel.length <= i) {\n        btnLable.node.parent.active = false;\n      } else btnLable.string = this.optionLabel[i];\n    });\n  }\n\n  async checkFeedback(statusIndex) {\n    const btn = this.optionsContainer.node.children;\n    await Promise.all(\n      this._selection.map(async (status, i) => {\n        if (status) {\n          btn[i].children[statusIndex].active = true;\n          await UIAnimationLibrary.flash(btn[i].children[statusIndex], 2);\n          btn[i].children[statusIndex].active = false;\n        }\n      }),\n    );\n  }\n}\n"]}