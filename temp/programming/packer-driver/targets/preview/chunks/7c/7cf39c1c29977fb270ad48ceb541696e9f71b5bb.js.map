{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/extensions/as_framework/framework/assets/scripts/UIDragSwap.ts"],"names":["Component","UITransform","_decorator","AS","UIDrag","intersectionPercent","ccclass","property","UIDragSwap","onEnable","_addEventListeners","onDisable","_removeEventListeners","child","node","children","drag","getComponent","on","EventType","DRAG_MOVE","_validateAndDoSwap","DRAG_DID_END","off","dragUITransform","bounds","getBoundingBoxToWorld","otherDrag","isMoving","otherDragUITransform","otherBounds","otherResetPosition","resetScreenPoint","clone","targetPosition"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,U,OAAAA,U;;AACxBC,MAAAA,E,iBAAAA,E;;AACAC,MAAAA,M,iBAAAA,M;;AACAC,MAAAA,mB,iBAAAA,mB;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;4BAGjBM,U,WADZF,OAAO,CAAC,YAAD,C,gBAAR,MACaE,UADb,SACgC;AAAA;AAAA,oBAAGR,SAAH,CADhC,CAC8C;AAC5CS,QAAAA,QAAQ,GAAG;AACT,eAAKC,kBAAL;AACD;;AAEDC,QAAAA,SAAS,GAAG;AACV,eAAKC,qBAAL;AACD;;AAEOF,QAAAA,kBAAkB,GAAG;AAC3B,eAAK,IAAMG,KAAX,IAAoB,KAAKC,IAAL,CAAUC,QAA9B,EAAwC;AACtC,gBAAMC,IAAI,GAAGH,KAAK,CAACI,YAAN;AAAA;AAAA,iCAAb;;AACA,gBAAID,IAAJ,EAAU;AACRH,cAAAA,KAAK,CAACK,EAAN,CAAS;AAAA;AAAA,oCAAOC,SAAP,CAAiBC,SAA1B,EAAqC,KAAKC,kBAA1C,EAA8D,IAA9D;AACAR,cAAAA,KAAK,CAACK,EAAN,CAAS;AAAA;AAAA,oCAAOC,SAAP,CAAiBG,YAA1B,EAAwC,KAAKD,kBAA7C,EAAiE,IAAjE;AACD;AACF;AACF;;AAEOT,QAAAA,qBAAqB,GAAG;AAC9B,eAAK,IAAMC,KAAX,IAAoB,KAAKC,IAAL,CAAUC,QAA9B,EAAwC;AACtC,gBAAMC,IAAI,GAAGH,KAAK,CAACI,YAAN;AAAA;AAAA,iCAAb;;AACA,gBAAID,IAAJ,EAAU;AACRH,cAAAA,KAAK,CAACU,GAAN,CAAU;AAAA;AAAA,oCAAOJ,SAAP,CAAiBC,SAA3B,EAAsC,KAAKC,kBAA3C,EAA+D,IAA/D;AACAR,cAAAA,KAAK,CAACU,GAAN,CAAU;AAAA;AAAA,oCAAOJ,SAAP,CAAiBG,YAA3B,EAAyC,KAAKD,kBAA9C,EAAkE,IAAlE;AACD;AACF;AACF;;AAEOA,QAAAA,kBAAkB,CAACL,IAAD,EAAe;AACvC,cAAMQ,eAAe,GAAGR,IAAI,CAACC,YAAL,CAAkBhB,WAAlB,CAAxB;AACA,cAAMwB,MAAM,GAAGD,eAAe,CAACE,qBAAhB,EAAf;;AACA,eAAK,IAAMb,KAAX,IAAoB,KAAKC,IAAL,CAAUC,QAA9B,EAAwC;AACtC,gBAAMY,SAAS,GAAGd,KAAK,CAACI,YAAN;AAAA;AAAA,iCAAlB;;AACA,gBAAIU,SAAS,IAAIA,SAAS,KAAKX,IAA/B,EAAqC;AACnC,kBAAIW,SAAS,CAACC,QAAd,EAAwB;AACxB,kBAAMC,oBAAoB,GAAGF,SAAS,CAACV,YAAV,CAAuBhB,WAAvB,CAA7B;AACA,kBAAM6B,WAAW,GAAGD,oBAAoB,CAACH,qBAArB,EAApB;;AACA,kBAAI;AAAA;AAAA,8DAAoBD,MAApB,EAA4BK,WAA5B,IAA2C,GAA/C,EAAoD;AAClD;AACA,oBAAMC,kBAAkB,GAAGJ,SAAS,CAACK,gBAAV,CAA2BC,KAA3B,EAA3B;AACAN,gBAAAA,SAAS,CAACK,gBAAV,GAA6BhB,IAAI,CAACgB,gBAAL,CAAsBC,KAAtB,EAA7B;AACAN,gBAAAA,SAAS,CAACO,cAAV,GAA2BlB,IAAI,CAACgB,gBAAL,CAAsBC,KAAtB,EAA3B;AACAjB,gBAAAA,IAAI,CAACgB,gBAAL,GAAwBD,kBAAxB,CALkD,CAMlD;;AACA;AACD;AACF;AACF;AACF;;AAjD2C,O","sourcesContent":["import { Component, UITransform, _decorator } from \"cc\";\nimport { AS } from \"./ASComponent\";\nimport { UIDrag } from \"./UIDrag\";\nimport { intersectionPercent } from \"./Utils\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"UIDragSwap\")\nexport class UIDragSwap extends AS(Component) {\n  onEnable() {\n    this._addEventListeners();\n  }\n\n  onDisable() {\n    this._removeEventListeners();\n  }\n\n  private _addEventListeners() {\n    for (const child of this.node.children) {\n      const drag = child.getComponent(UIDrag);\n      if (drag) {\n        child.on(UIDrag.EventType.DRAG_MOVE, this._validateAndDoSwap, this);\n        child.on(UIDrag.EventType.DRAG_DID_END, this._validateAndDoSwap, this);\n      }\n    }\n  }\n\n  private _removeEventListeners() {\n    for (const child of this.node.children) {\n      const drag = child.getComponent(UIDrag);\n      if (drag) {\n        child.off(UIDrag.EventType.DRAG_MOVE, this._validateAndDoSwap, this);\n        child.off(UIDrag.EventType.DRAG_DID_END, this._validateAndDoSwap, this);\n      }\n    }\n  }\n\n  private _validateAndDoSwap(drag: UIDrag) {\n    const dragUITransform = drag.getComponent(UITransform)!;\n    const bounds = dragUITransform.getBoundingBoxToWorld();\n    for (const child of this.node.children) {\n      const otherDrag = child.getComponent(UIDrag);\n      if (otherDrag && otherDrag !== drag) {\n        if (otherDrag.isMoving) continue;\n        const otherDragUITransform = otherDrag.getComponent(UITransform)!;\n        const otherBounds = otherDragUITransform.getBoundingBoxToWorld();\n        if (intersectionPercent(bounds, otherBounds) > 0.5) {\n          // swap reset position of drags\n          const otherResetPosition = otherDrag.resetScreenPoint.clone();\n          otherDrag.resetScreenPoint = drag.resetScreenPoint.clone();\n          otherDrag.targetPosition = drag.resetScreenPoint.clone();\n          drag.resetScreenPoint = otherResetPosition;\n          // drag.targetPosition = otherResetPosition;\n          break;\n        }\n      }\n    }\n  }\n}\n"]}