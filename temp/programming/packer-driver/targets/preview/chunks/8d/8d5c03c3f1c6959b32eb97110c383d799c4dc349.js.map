{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/extensions/as_framework/framework/assets/scripts/UIDrag.ts"],"names":["Component","EventHandler","Intersection2D","Mat4","Node","PolygonCollider2D","rect","UITransform","v2","v3","Vec2","Vec3","_decorator","AS","UIDrop","findParentCanvas","ccclass","property","disallowMultiple","requireComponent","DRAG_SPEED","matrixCached","worldMatrixCached","UIDrag","type","tooltip","displayOrder","_thisUITransform","_targetPosition","_validUIDrop","_resetPosition","_lerpTime","_parentCanvas","_canvasCamera","_collider","_isBeginValid","_actualParent","_isDragging","enableResetPosition","_enableResetPosition","target","_target","usePolygonCollider","_usePolygonCollider","targetPosition","resetScreenPoint","validUIDrop","checkUIDrop","value","__removeDrag","reset","forceSetPosition","resetDrop","_setTargetPositionInternal","position","node","worldPosition","_checkUIDropInternal","x","y","onLoad","getComponent","cameraComponent","onEnable","on","EventType","TOUCH_START","_onTouchStart","TOUCH_MOVE","_onTouchMove","TOUCH_END","_onTouchEnd","TOUCH_CANCEL","PARENT_CHANGED","_onParentChanged","onDisable","off","update","dt","currPosition","equals","lerp","awake","clone","parent","event","mouseWorld","screenToWorld","getLocationX","getLocationY","pointInPolygon","worldPoints","emitEvents","dragDidBeganEvents","emit","DRAG_DID_BEGAN","_getTargetBounds","contains","enableSnap","dragDidEndedEvents","DRAG_DID_END","touchLocation","enabledInHierarchy","oldUIDrop","getComponentsInChildren","find","uiDrop","__isInside","boundsType","BoundsType","CIRCLE","radius","circleRadius","center","dragBounds","getBoundingBoxToWorld","distances","distance","xMin","yMin","yMax","xMax","some","curr","__addDrag","dragMoveEvents","DRAG_MOVE","fromRTS","getRotation","getPosition","getScale","width","contentSize","height","localRect","anchorPoint","getWorldMatrix","multiply","transformMat4","Array"],"mappings":"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","sourcesContent":["import {\n  Camera,\n  Canvas,\n  Component,\n  EventHandler,\n  EventTouch,\n  Intersection2D,\n  Mat4,\n  Node,\n  PolygonCollider2D,\n  rect,\n  UITransform,\n  v2,\n  v3,\n  Vec2,\n  Vec3,\n  _decorator,\n} from \"cc\";\nimport { AS } from \"./ASComponent\";\nimport { UIDrop } from \"./UIDrop\";\nimport { findParentCanvas } from \"./Utils\";\n\nconst { ccclass, property, disallowMultiple, requireComponent } = _decorator;\n\nconst DRAG_SPEED = 25;\nconst matrixCached = new Mat4();\nconst worldMatrixCached = new Mat4();\n\n@ccclass(\"UIDrag\")\n@disallowMultiple\n@requireComponent(UITransform)\nexport class UIDrag extends AS(Component) {\n  static readonly EventType = {\n    DRAG_DID_BEGAN: \"drag-did-began\",\n    DRAG_DID_END: \"drag-did-ended\",\n    DRAG_MOVE: \"drag-move\",\n  };\n\n  @property({\n    type: [EventHandler],\n    tooltip: \"The event handler to be triggered when drag begins.\",\n    displayOrder: 30,\n  })\n  dragDidBeganEvents = new Array<EventHandler>();\n\n  @property({\n    type: [EventHandler],\n    tooltip: \"The event handler to be triggered when drag ends.\",\n    displayOrder: 31,\n  })\n  dragDidEndedEvents = new Array<EventHandler>();\n\n  @property({\n    type: [EventHandler],\n    tooltip: \"The event handler to be triggered when drag target position changes.\",\n    displayOrder: 32,\n  })\n  dragMoveEvents = new Array<EventHandler>();\n\n  @property private _target: UITransform | null = null;\n\n  @property private _enableResetPosition = true;\n\n  @property private _usePolygonCollider = false;\n\n  private _thisUITransform: UITransform | null = null;\n\n  private _targetPosition: Vec3 = v3();\n\n  private _validUIDrop: UIDrop | null | undefined = null;\n\n  private _resetPosition: Vec3 = v3();\n\n  private _lerpTime = 0;\n\n  private _parentCanvas: Canvas | null = null;\n\n  private _canvasCamera: Camera | null = null;\n\n  private _collider: PolygonCollider2D | null = null;\n\n  private _isBeginValid = false;\n\n  private _actualParent: Node | null = null;\n\n  private _isDragging = false;\n\n  @property({ tooltip: \"Enable to reset position on mouse up if not inside a UIDrop.\" })\n  get enableResetPosition() {\n    return this._enableResetPosition;\n  }\n\n  @property({\n    type: UITransform,\n    tooltip:\n      \"The node to use as area for dragging. This drag will be limited to the bounds of the \" +\n      \"target node. NOTE: Do not use a parent (or grandparents) of this drag as target!\",\n  })\n  get target(): UITransform | null {\n    return this._target;\n  }\n\n  @property get usePolygonCollider() {\n    return this._usePolygonCollider;\n  }\n\n  get targetPosition() {\n    return this._targetPosition;\n  }\n\n  get resetScreenPoint() {\n    return this._resetPosition;\n  }\n\n  get validUIDrop() {\n    return this.checkUIDrop();\n  }\n\n  set enableResetPosition(value) {\n    this._enableResetPosition = value;\n  }\n\n  set target(value: UITransform | null) {\n    this._target = value;\n  }\n\n  set usePolygonCollider(value) {\n    this._usePolygonCollider = value;\n  }\n\n  set targetPosition(value: Vec3) {\n    this._lerpTime = 0;\n    this._targetPosition = value;\n\n    this._validUIDrop?.__removeDrag(this);\n    this._validUIDrop = null;\n  }\n\n  set resetScreenPoint(value: Vec3) {\n    this._resetPosition = value;\n  }\n\n  reset() {\n    if (this._resetPosition) {\n      this.forceSetPosition(this._resetPosition);\n    }\n\n    this._validUIDrop?.__removeDrag(this);\n    this._validUIDrop = null;\n  }\n\n  resetDrop() {\n    this._validUIDrop?.__removeDrag(this);\n    this._validUIDrop = null;\n    if (this._resetPosition) {\n      this._setTargetPositionInternal(this._resetPosition);\n    }\n  }\n\n  forceSetPosition(position: Vec3) {\n    if (position == null) return;\n    this._targetPosition = position;\n    this.node.worldPosition = position;\n    this._validUIDrop?.__removeDrag(this);\n    this._validUIDrop = null;\n  }\n\n  checkUIDrop() {\n    this._checkUIDropInternal(v2(this.node.worldPosition.x, this.node.worldPosition.y));\n\n    // If valid UI Drop doesn't allow multiple drag's in them, reset.\n\n    return this._validUIDrop;\n  }\n\n  onLoad() {\n    this._thisUITransform = this.getComponent(UITransform);\n    this._parentCanvas = findParentCanvas(this.node);\n    if (this._parentCanvas == null) return;\n    this._canvasCamera = this._parentCanvas.cameraComponent;\n    if (this.target == null) {\n      this.target = this._parentCanvas.getComponent(UITransform);\n    }\n    this._collider = this.getComponent(PolygonCollider2D);\n  }\n\n  onEnable() {\n    this.node.on(Node.EventType.TOUCH_START, this._onTouchStart, this);\n    this.node.on(Node.EventType.TOUCH_MOVE, this._onTouchMove, this);\n    this.node.on(Node.EventType.TOUCH_END, this._onTouchEnd, this);\n    this.node.on(Node.EventType.TOUCH_CANCEL, this._onTouchEnd, this);\n    this.node.on(Node.EventType.PARENT_CHANGED, this._onParentChanged, this);\n    this._onParentChanged();\n  }\n\n  onDisable() {\n    this.node.off(Node.EventType.TOUCH_START, this._onTouchStart, this);\n    this.node.off(Node.EventType.TOUCH_MOVE, this._onTouchMove, this);\n    this.node.off(Node.EventType.TOUCH_END, this._onTouchEnd, this);\n    this.node.off(Node.EventType.TOUCH_CANCEL, this._onTouchEnd, this);\n    this.node.off(Node.EventType.PARENT_CHANGED, this._onParentChanged, this);\n  }\n\n  update(dt: number) {\n    const currPosition = this.node.worldPosition;\n    if (Vec3.equals(currPosition, this._targetPosition)) return;\n    this._lerpTime += DRAG_SPEED * dt;\n    if (this._lerpTime > 1) this._lerpTime = 1;\n    this.node.worldPosition = currPosition.lerp(this._targetPosition, this._lerpTime);\n  }\n\n  awake() {\n    // At awake set the target to current position.\n    this._targetPosition = this.node.worldPosition.clone();\n    this._resetPosition = this.node.worldPosition.clone();\n  }\n\n  private _onParentChanged() {\n    if (this._isDragging) return;\n    this._actualParent = this.node.parent;\n  }\n\n  private _onTouchStart(event: EventTouch) {\n    if (this._canvasCamera == null || this._parentCanvas == null) return;\n    const mouseWorld = this._canvasCamera.screenToWorld(\n      v3(event.getLocationX(), event.getLocationY()),\n    );\n    if (this._usePolygonCollider && this._collider) {\n      this._isBeginValid = Intersection2D.pointInPolygon(\n        v2(mouseWorld.x, mouseWorld.y),\n        this._collider.worldPoints,\n      );\n    } else {\n      this._isBeginValid = true;\n    }\n\n    this._isDragging = true;\n    this.node.parent = this._parentCanvas.node;\n    EventHandler.emitEvents(this.dragDidBeganEvents, this);\n    this.node.emit(UIDrag.EventType.DRAG_DID_BEGAN, this);\n  }\n\n  private _onTouchMove(event: EventTouch) {\n    if (this._canvasCamera == null || !this._isBeginValid) return;\n    // Convert mouse location from screen to world coords.\n    const mouseWorld = this._canvasCamera.screenToWorld(\n      v3(event.getLocationX(), event.getLocationY()),\n    );\n\n    // If outside target stop move.\n    if (!this._getTargetBounds().contains(v2(mouseWorld.x, mouseWorld.y))) {\n      return;\n    }\n\n    this._setTargetPositionInternal(mouseWorld);\n  }\n\n  private _onTouchEnd(event: EventTouch) {\n    if (!this._isBeginValid) return;\n    if (this._canvasCamera != null) {\n      // Convert mouse location from screen to world coords.\n      const mouseWorld = this._canvasCamera.screenToWorld(\n        v3(event.getLocationX(), event.getLocationY()),\n      );\n\n      // Check to see if inside any valid uidrop under target.\n      this._checkUIDropInternal(v2(mouseWorld.x, mouseWorld.y));\n    }\n\n    if (this._validUIDrop != null && this._validUIDrop.enableSnap) {\n      this._setTargetPositionInternal(this._validUIDrop.node.worldPosition);\n    }\n\n    if (this.enableResetPosition && this._validUIDrop == null) {\n      this._setTargetPositionInternal(this._resetPosition);\n    }\n\n    this.node.parent = this._actualParent;\n    this._isDragging = false;\n    EventHandler.emitEvents(this.dragDidEndedEvents, this);\n    this.node.emit(UIDrag.EventType.DRAG_DID_END, this);\n  }\n\n  private _checkUIDropInternal(touchLocation: Vec2) {\n    if (!this._parentCanvas || !this.enabledInHierarchy) return;\n    const oldUIDrop = this._validUIDrop;\n    this._validUIDrop = this._parentCanvas\n      .getComponentsInChildren(UIDrop)\n      .find((uiDrop: UIDrop) => uiDrop.enabledInHierarchy && uiDrop.__isInside(touchLocation));\n\n    // Check and see if valid if drop is circle type.\n    if (\n      this._thisUITransform &&\n      this._validUIDrop &&\n      this._validUIDrop.boundsType === UIDrop.BoundsType.CIRCLE\n    ) {\n      const radius = this._validUIDrop.circleRadius;\n      const center = this._validUIDrop.node.worldPosition;\n      const dragBounds = this._thisUITransform.getBoundingBoxToWorld();\n\n      const distances = [\n        Vec2.distance(v2(center.x, center.y), v2(dragBounds.xMin, dragBounds.yMin)),\n        Vec2.distance(v2(center.x, center.y), v2(dragBounds.xMin, dragBounds.yMax)),\n        Vec2.distance(v2(center.x, center.y), v2(dragBounds.xMax, dragBounds.yMin)),\n        Vec2.distance(v2(center.x, center.y), v2(dragBounds.xMax, dragBounds.yMax)),\n      ];\n\n      if (distances.some((curr) => curr >= radius)) {\n        // If any corner outside the circle radius set as invalid.\n        this._validUIDrop = null;\n      }\n    }\n\n    if (oldUIDrop !== this._validUIDrop) {\n      oldUIDrop?.__removeDrag(this);\n      if (!this._validUIDrop?.__addDrag(this)) this._validUIDrop = null;\n    }\n  }\n\n  private _setTargetPositionInternal(position: Vec3) {\n    this._targetPosition = position;\n    this._lerpTime = 0;\n    EventHandler.emitEvents(this.dragMoveEvents, this);\n    this.node.emit(UIDrag.EventType.DRAG_MOVE, this);\n  }\n\n  private _getTargetBounds() {\n    if (this.target == null) return rect();\n    Mat4.fromRTS(\n      matrixCached,\n      this.target.node.getRotation(),\n      this.target.node.getPosition(),\n      this.target.node.getScale(),\n    );\n    const width = this.target.contentSize.width;\n    const height = this.target.contentSize.height;\n    const localRect = rect(\n      -this.target.anchorPoint.x * width,\n      -this.target.anchorPoint.y * height,\n      width,\n      height,\n    );\n    this.target.node.parent?.getWorldMatrix(worldMatrixCached);\n    Mat4.multiply(worldMatrixCached, worldMatrixCached, matrixCached);\n    return localRect.transformMat4(worldMatrixCached);\n  }\n}\n"]}