{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/assets/SnapRearrange/SnapRearrange.ts"],"names":["Button","Color","Component","Node","Sprite","_decorator","AS","UIDragSort","UIDrag","ccclass","property","requireComponent","SnapRearrange","_container","_white","_red","_green","_dragOptions","awake","slot","container","node","children","forEach","option","i","push","on","EventType","DRAG_DID_BEGAN","drag","j","_colorHilight","check","active","CLICK","length","_check","console","log","correctCount","name","answer","color","getComponent"],"mappings":"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","sourcesContent":["import { Button, Color, Component, Layout, Node, Sprite, SpriteFrame, _decorator } from \"cc\";\nimport { AS } from \"db://as_framework/scripts//ASComponent\";\nimport { UIDragSort } from \"db://as_framework/scripts/UIDragSort\";\nimport { UIDrag } from \"db://as_framework/scripts/UIDrag\";\nconst { ccclass, property, requireComponent } = _decorator;\n\n@ccclass('SnapRearrange')\nexport class SnapRearrange extends AS(Component) {\n    @property(UIDragSort) slot : UIDragSort | null = null;\n    @property(Node) check : Node | null = null;\n    @property answer = '';\n    \n    private _container : Layout | null = null;\n    private _white = new Color(255,255,255,255);\n    private _red = new Color(255,0,0,255);\n    private _green = new Color(0,255,0,255);\n    private _dragOptions = [];\n\n    awake(){\n        this._container = this.slot.container;\n        this.slot.node.children.forEach((option, i)=>{\n            if(i>0){\n                this._dragOptions.push(option)\n                option.on(UIDrag.EventType.DRAG_DID_BEGAN, ()=>{\n                    this._dragOptions.forEach((drag,j)=>{\n                        this._colorHilight(drag, this._white)\n                    })\n                    this.check.active = true;\n                })\n            }\n        })\n        this.check.on(Button.EventType.CLICK, ()=>{\n            if(this._container.node.children.length == this.slot.node.children.length-1){   this._check();\n                console.log(\"check\")\n            }\n        },this);\n    }\n    private _check() {\n        let correctCount = 0;\n        this._container.node.children.forEach((option, i)=>{\n        if(option.name == this._dragOptions[this.answer[i]].name+\"-shadow\"){\n            this._colorHilight(this._dragOptions[this.answer[i]], this._green)\n            correctCount++\n        }\n        else\n            this._colorHilight(this._dragOptions[this.answer[i]], this._red)  \n        })\n        if(correctCount == this._dragOptions.length)\n            this.check.active = false;\n    }\n    private _colorHilight(option, color) {\n        option.getComponent(Sprite).color = color;\n    }\n}\n\n"]}