{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/extensions/as_framework/framework/assets/scripts/UIElement.ts"],"names":["pixelToPercent","currentPixels","parentPixels","isNaN","percentToPixel","currentPercent","Canvas","CCBoolean","ccenum","CCFloat","CCObject","Component","Director","director","Node","UITransform","v3","_decorator","EDITOR","AS","error","info","yoga","ccclass","property","requireComponent","executeInEditMode","Alignment","Direction","Display","Edge","ExperimentalFeature","FlexDirection","JustifyContent","MeasureMode","Overflow","PositionType","Unit","SizeUnit","MarginUnit","MinMaxUnit","PaddingUnit","PositionUnit","Wrap","UIElement","type","readonly","tooltip","group","id","name","displayOrder","visible","isRoot","min","displayName","_hasCanvas","unit","heightUnit","PIXEL","PERCENT","marginUnitTop","marginUnitBottom","marginUnitLeft","marginUnitRight","maxHeightUnit","maxWidthUnit","minHeightUnit","minWidthUnit","paddingTopUnit","paddingBottomUnit","paddingLeftUnit","paddingRightUnit","positionTopUnit","positionBottomUnit","positionLeftUnit","positionRightUnit","widthUnit","_yogaNode","createDefault","_committedChildren","Array","_layoutDirty","_isFloating","getParent","alignContent","_alignContent","alignItems","_alignItems","alignSelf","_alignSelf","aspectRatio","_aspectRatio","borderTop","_borderTop","borderBottom","_borderBottom","borderLeft","_borderLeft","borderRight","_borderRight","display","_display","flexDirection","_flexDirection","flexGrow","_flexGrow","flexShrink","_flexShrink","flexWrap","_flexWrap","_heightUnit","heightValue","_heightValue","heightValuePercentage","justifyContent","_justifyContent","_marginUnitTop","marginValueTop","_marginValueTop","marginValuePercentageTop","_marginUnitBottom","marginValueBottom","_marginValueBottom","marginValuePercentageBottom","_marginUnitLeft","marginValueLeft","_marginValueLeft","marginValuePercentageLeft","_marginUnitRight","marginValueRight","_marginValueRight","marginValuePercentageRight","_maxHeightUnit","maxHeightValue","_maxHeightValue","maxHeightValuePercentage","_maxWidthUnit","maxWidthValue","_maxWidthValue","maxWidthValuePercentage","_minHeightUnit","minHeightValue","_minHeightValue","minHeightValuePercentage","_minWidthUnit","minWidthValue","_minWidthValue","minWidthValuePercentage","_paddingTopUnit","paddingTopValue","_paddingTopValue","paddingTopValuePercentage","_paddingBottomUnit","paddingBottomValue","_paddingBottomValue","paddingBottomValuePercentage","_paddingLeftUnit","paddingLeftValue","_paddingLeftValue","paddingLeftValuePercentage","_paddingRightUnit","paddingRightValue","_paddingRightValue","paddingRightValuePercentage","_positionTopUnit","positionTopValue","_positionTopValue","positionTopValuePercentage","_positionBottomUnit","positionBottomValue","_positionBottomValue","positionBottomValuePercentage","_positionLeftUnit","positionLeftValue","_positionLeftValue","positionLeftValuePercentage","_positionRightUnit","positionRightValue","_positionRightValue","positionRightValuePercentage","positionType","_positionType","_widthUnit","widthValue","_widthValue","widthValuePercentage","getComponent","value","setAlignContent","setAlignItems","setAlignSelf","setAspectRatio","setBorder","TOP","BOTTOM","LEFT","RIGHT","setDisplay","setFlexDirection","setFlexGrow","setFlexShrink","setFlexWrap","parent","AUTO","setHeightAuto","getComputedHeight","setHeightPercent","setHeight","setJustifyContent","setMarginAuto","setMarginPercent","setMargin","getComputedWidth","setMaxHeightPercent","setMaxHeight","undefined","setMaxWidthPercent","setMaxWidth","setMinHeightPercent","setMinHeight","setMinWidthPercent","setMinWidth","setPaddingPercent","setPadding","setPositionPercent","setPosition","setPositionType","setWidthAuto","setWidthPercent","setWidth","_setIsFloating","updateLayout","force","_markLayoutDirty","isDirty","_isAnimating","calculateLayout","err","node","_updateLayoutInternal","awake","_canvasSizeChanged","_updateYogaNode","_notifyParent","_objFlags","Flags","IsPositionLocked","IsSizeLocked","IsAnchorLocked","onEnable","_addEventListeners","_commitChildren","onDisable","_removeEventListeners","parentElement","removeChild","onDestroy","free","onRestore","actualChildrenCount","getChildCount","children","map","child","filter","element","enabledInHierarchy","length","every","index","i","Math","max","oldChild","correctChild","insertChild","getChild","on","EVENT_AFTER_UPDATE","EventType","TRANSFORM_CHANGED","_transformChanged","ANCHOR_CHANGED","CHILD_ADDED","CHILD_REMOVED","PARENT_CHANGED","SIBLING_ORDER_CHANGED","SIZE_CHANGED","off","TransformBit","POSITION","uiTransform","_uiProps","uiTransformComp","height","width","getComputedLayout","toString","top","getComputedTop","left","getComputedLeft","setContentSize","yogaParent","position","anchorX","anchorY","parentUiTransform","parentLeft","parentTop","localLeft","localTop","forEach","uiElement","FLEX_START","STRETCH","FLEX","ROW","WRAP_NO_WRAP","UNDEFINED","RELATIVE"],"mappings":"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","sourcesContent":["import {\n  Canvas,\n  CCBoolean,\n  ccenum,\n  CCFloat,\n  CCObject,\n  Component,\n  Director,\n  director,\n  Node,\n  UITransform,\n  v3,\n  _decorator,\n} from \"cc\";\nimport { EDITOR } from \"cc/env\";\nimport { AS } from \"./ASComponent\";\nimport { error, info } from \"./Logger\";\nimport yoga from \"./yoga-layout/index.js\";\nconst { ccclass, property, requireComponent, executeInEditMode } = _decorator;\n\n//#region enum defines\nenum Alignment {\n  AUTO = 0,\n  FLEX_START = 1,\n  CENTER = 2,\n  FLEX_END = 3,\n  STRETCH = 4,\n  BASELINE = 5,\n  SPACE_BETWEEN = 6,\n  SPACE_AROUND = 7,\n}\nccenum(Alignment);\n\nenum Direction {\n  INHERIT = 0,\n  LTR = 1,\n  RTL = 2,\n}\nccenum(Direction);\n\nenum Display {\n  FLEX = 0,\n  NONE = 1,\n}\nccenum(Display);\n\nenum Edge {\n  LEFT = 0,\n  TOP = 1,\n  RIGHT = 2,\n  BOTTOM = 3,\n  START = 4,\n  END = 5,\n  HORIZONTAL = 6,\n  VERTICAL = 7,\n  ALL = 8,\n}\nccenum(Edge);\n\nenum ExperimentalFeature {\n  WEB_FLEX_BASIS = 0,\n}\n\nenum FlexDirection {\n  COLUMN = 0,\n  COLUMN_REVERSE = 1,\n  ROW = 2,\n  ROW_REVERSE = 3,\n}\nccenum(FlexDirection);\n\nenum JustifyContent {\n  FLEX_START = 0,\n  CENTER = 1,\n  FLEX_END = 2,\n  SPACE_BETWEEN = 3,\n  SPACE_AROUND = 4,\n  SPACE_EVENLY = 5,\n}\nccenum(JustifyContent);\n\nenum MeasureMode {\n  UNDEFINED = 0,\n  EXACTLY = 1,\n  AT_MOST = 2,\n}\nccenum(MeasureMode);\n\nenum Overflow {\n  VISIBLE = 0,\n  HIDDEN = 1,\n  SCROLL = 2,\n}\nccenum(Overflow);\n\nenum PositionType {\n  RELATIVE = 0,\n  ABSOLUTE = 1,\n}\nccenum(PositionType);\n\nenum Unit {\n  UNDEFINED = 0,\n  PIXEL = 1,\n  PERCENT = 2,\n  AUTO = 3,\n}\nccenum(Unit);\n\nenum SizeUnit {\n  PIXEL = 1,\n  PERCENT = 2,\n  AUTO = 3,\n}\nccenum(SizeUnit);\n\nconst MarginUnit = SizeUnit;\nenum MinMaxUnit {\n  UNDEFINED = 0,\n  PIXEL = 1,\n  PERCENT = 2,\n}\nccenum(MinMaxUnit);\n\nenum PaddingUnit {\n  PIXEL = 1,\n  PERCENT = 2,\n}\nccenum(PaddingUnit);\n\nconst PositionUnit = PaddingUnit;\n\nenum Wrap {\n  WRAP_NO_WRAP = 0,\n  WRAP_WRAP = 1,\n  WRAP_WRAP_REVERSE = 2,\n}\nccenum(Wrap);\n//#endregion\n\nfunction pixelToPercent(currentPixels: number, parentPixels: number) {\n  if (isNaN(parentPixels)) return 0;\n  return (currentPixels / parentPixels) * 100;\n}\n\nfunction percentToPixel(currentPercent: number, parentPixels: number) {\n  if (isNaN(parentPixels)) return 0;\n  return (currentPercent / 100) * parentPixels;\n}\n\n@ccclass(\"UIElement\")\n@executeInEditMode\n@requireComponent(UITransform)\nexport class UIElement extends AS(Component) {\n  //#region Enums\n  static readonly Alignment = Alignment;\n\n  static readonly Direction = Direction;\n\n  static readonly Display = Display;\n\n  static readonly Edge = Edge;\n\n  static readonly FlexDirection = FlexDirection;\n\n  static readonly JustifyContent = JustifyContent;\n\n  static readonly MeasureMode = MeasureMode;\n\n  static readonly Overflow = Overflow;\n\n  static readonly PositionType = PositionType;\n\n  static readonly Unit = Unit;\n\n  static readonly Wrap = Wrap;\n  //#endregion\n\n  //#region protected properties\n  @property protected _alignContent = Alignment.FLEX_START;\n\n  @property protected _alignItems = Alignment.STRETCH;\n\n  @property protected _alignSelf = Alignment.AUTO;\n\n  @property protected _aspectRatio = 0;\n\n  @property protected _borderTop = 0;\n\n  @property protected _borderBottom = 0;\n\n  @property protected _borderLeft = 0;\n\n  @property protected _borderRight = 0;\n\n  @property protected _display = Display.FLEX;\n\n  @property protected _flexDirection = FlexDirection.ROW;\n\n  @property protected _flexGrow = 0;\n\n  @property protected _flexShrink = 1;\n\n  @property protected _flexWrap = Wrap.WRAP_NO_WRAP;\n\n  @property protected _heightUnit = Unit.AUTO;\n\n  @property protected _heightValue = 0;\n\n  @property protected _justifyContent = JustifyContent.FLEX_START;\n\n  @property protected _marginUnitTop = Unit.PIXEL;\n\n  @property protected _marginValueTop = 0;\n\n  @property protected _marginUnitBottom = Unit.PIXEL;\n\n  @property protected _marginValueBottom = 0;\n\n  @property protected _marginUnitLeft = Unit.PIXEL;\n\n  @property protected _marginValueLeft = 0;\n\n  @property protected _marginUnitRight = Unit.PIXEL;\n\n  @property protected _marginValueRight = 0;\n\n  @property protected _maxHeightUnit = Unit.UNDEFINED;\n\n  @property protected _maxHeightValue = 0;\n\n  @property protected _maxWidthUnit = Unit.UNDEFINED;\n\n  @property protected _maxWidthValue = 0;\n\n  @property protected _minHeightUnit = Unit.UNDEFINED;\n\n  @property protected _minHeightValue = 0;\n\n  @property protected _minWidthUnit = Unit.UNDEFINED;\n\n  @property protected _minWidthValue = 0;\n\n  @property protected _paddingTopUnit = Unit.PIXEL;\n\n  @property protected _paddingTopValue = 0;\n\n  @property protected _paddingBottomUnit = Unit.PIXEL;\n\n  @property protected _paddingBottomValue = 0;\n\n  @property protected _paddingLeftUnit = Unit.PIXEL;\n\n  @property protected _paddingLeftValue = 0;\n\n  @property protected _paddingRightUnit = Unit.PIXEL;\n\n  @property protected _paddingRightValue = 0;\n\n  @property protected _positionTopUnit = Unit.PIXEL;\n\n  @property protected _positionTopValue = 0;\n\n  @property protected _positionBottomUnit = Unit.PIXEL;\n\n  @property protected _positionBottomValue = 0;\n\n  @property protected _positionLeftUnit = Unit.PIXEL;\n\n  @property protected _positionLeftValue = 0;\n\n  @property protected _positionRightUnit = Unit.PIXEL;\n\n  @property protected _positionRightValue = 0;\n\n  @property protected _positionType = PositionType.RELATIVE;\n\n  @property protected _widthUnit = Unit.AUTO;\n\n  @property protected _widthValue = 0;\n  //#endregion\n\n  private readonly _yogaNode = yoga.Node.createDefault();\n\n  private _committedChildren = new Array<UIElement>();\n\n  private _layoutDirty = false;\n\n  private _isFloating = false;\n\n  @property({\n    type: CCBoolean,\n    readonly: true,\n    tooltip: \"Is true if this node has no parent UIElement.\",\n  })\n  get isRoot() {\n    return this._yogaNode.getParent() == null;\n  }\n\n  //#region property getters\n  @property({\n    type: Alignment,\n    group: { id: \"align\", name: \"Align\", displayOrder: 1 },\n    displayOrder: 3,\n    tooltip: `Align content defines the distribution of lines along the cross-axis.\n    This only has effect when items are wrapped to multiple lines using flex wrap.\n\n    FLEX START (DEFAULT) Align wrapped lines to the start of the container's cross axis.\n\n    FLEX END Align wrapped lines to the end of the container's cross axis.\n\n    STRETCH Stretch wrapped lines to match the height of the container's cross axis.\n\n    CENTER Align wrapped lines in the center of the container's cross axis.\n\n    SPACE BETWEEN Evenly space wrapped lines across the container's main axis,\n    distributing remaining space between the lines.\n\n    SPACE AROUND Evenly space wrapped lines across the container's main axis,\n    distributing remaining space around the lines.\n    Compared to space between using space around will result in space being\n    distributed to the begining of the first lines and end of the last line.`,\n  })\n  get alignContent() {\n    return this._alignContent;\n  }\n\n  @property({\n    type: Alignment,\n    group: { id: \"align\", name: \"Align\" },\n    displayOrder: 1,\n    tooltip: `Align items describes how to align children along the cross axis of their container.\n    Align items is very similar to justify content but instead of applying to the main axis,\n    align items applies to the cross axis.\n\n    STRETCH (DEFAULT) Stretch children of a container to match the height of the container's cross axis.\n\n    FLEX START Align children of a container to the start of the container's cross axis.\n\n    FLEX END Align children of a container to the end of the container's cross axis.\n\n    CENTER Align children of a container in the center of the container's cross axis.\n\n    BASELINE Align children of a container along a common baseline.\n    Individual children can be set to be the reference baseline for their parents.`,\n  })\n  get alignItems() {\n    return this._alignItems;\n  }\n\n  @property({\n    type: Alignment,\n    group: { id: \"align\", name: \"Align\" },\n    displayOrder: 2,\n    visible: function (this: UIElement) {\n      return !this.isRoot;\n    },\n    tooltip: `Align self has the same options and effect as align items but instead of affecting\n    the children within a container, you can apply this property to a single child to change its\n    alignment within its parent. align self overrides any option set by the parent with align items.`,\n  })\n  get alignSelf() {\n    return this._alignSelf;\n  }\n\n  @property({\n    type: CCFloat,\n    min: 0,\n    group: { id: \"align\", name: \"Align\" },\n    displayOrder: 4,\n    tooltip: `AspectRatio is a property introduced by Yoga and is not present as a settable\n    property in the css flexbox specification.\n    Flexbox does has the notion of aspect ratio though for things with intrinsic aspect ratio such as images.\n\n    The aspect ratio property in Yoga has the following properties:\n    - Accepts any floating point value > 0, the default is undefined.\n    - Defined as the ratio between the width and the height of a node e.g. if a node has an\n      aspect ratio of 2 then its width is twice the size of its height.\n    - Respects the min and max dimensions of an item.\n    - Has higher priority than flex grow\n    - If aspect ratio, width, and height are set then the cross axis dimension is overridden.`,\n  })\n  get aspectRatio() {\n    return this._aspectRatio;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout2\", name: \"Border\", displayOrder: 4 },\n    displayName: `Top`,\n    tooltip: `BORDER acts exactly like padding and only exists as a seperate property\n    to allow for any containers that also have rendering components with border.`,\n  })\n  get borderTop() {\n    return this._borderTop;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout2\", name: \"Border\" },\n    displayName: `Bottom`,\n    tooltip: `BORDER acts exactly like padding and only exists as a seperate property\n    to allow for any containers that also have rendering components with border.`,\n  })\n  get borderBottom() {\n    return this._borderBottom;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout2\", name: \"Border\" },\n    displayName: `Left`,\n    tooltip: `BORDER acts exactly like padding and only exists as a seperate property\n    to allow for any containers that also have rendering components with border.`,\n  })\n  get borderLeft() {\n    return this._borderLeft;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout2\", name: \"Border\" },\n    displayName: `Right`,\n    tooltip: `BORDER acts exactly like padding and only exists as a seperate property\n    to allow for any containers that also have rendering components with border.`,\n  })\n  get borderRight() {\n    return this._borderRight;\n  }\n\n  @property({\n    type: Display,\n    group: `Flex`,\n    displayName: `Display`,\n  })\n  get display() {\n    return this._display;\n  }\n\n  /**\n   * Flex direction controls the direction in which children of a node are laid out.\n   * This is also referred to as the main axis. The main axis is the direction in which\n   * children are laid out. The cross axis the the axis perpendicular to the main axis,\n   * or the axis which wrapping lines are laid out in.\n   *\n   * ROW (DEFAULT) Align children from left to right. If wrapping is enabled then the next\n   * line will start under the first item on the left of the container.\n   *\n   * COLUMN Align children from top to bottom. If wrapping is enabled then the next line\n   * will start to the left first item on the top of the container.\n   *\n   * ROW REVERSE Align children from right to left. If wrapping is enabled then the next\n   * line will start under the first item on the right of the container.\n   *\n   * COLUMN REVERSE Align children from bottom to top. If wrapping is enabled then the\n   * next line will start to the left first item on the bottom of the container.\n   */\n  @property({\n    type: FlexDirection,\n    group: `Flex`,\n    displayName: `Direction`,\n    tooltip: `Flex direction controls the direction in which children of a node are laid out.\n    This is also referred to as the main axis. The main axis is the direction in which\n    children are laid out. The cross axis the the axis perpendicular to the main axis,\n    or the axis which wrapping lines are laid out in.\n\n    ROW (DEFAULT) Align children from left to right. If wrapping is enabled then the next\n    line will start under the first item on the left of the container.\n\n    COLUMN Align children from top to bottom. If wrapping is enabled then the next line\n    will start to the left first item on the top of the container.\n\n    ROW REVERSE Align children from right to left. If wrapping is enabled then the next\n    line will start under the first item on the right of the container.\n\n    COLUMN REVERSE Align children from bottom to top. If wrapping is enabled then the\n    next line will start to the left first item on the bottom of the container.`,\n  })\n  get flexDirection() {\n    return this._flexDirection;\n  }\n\n  /**\n   *FLEX GROW describes how any space within a container should\n   * be distributed among its children along the main axis. After laying out its children,\n   * a container will distribute any remaining space according to the flex grow values specified\n   * by its children.\n   *\n   * Flex grow accepts any floating point value >= 0, with 0 being the default value.\n   * A container will distribute any remaining space among its children weighted by the child's\n   * flex grow value.\n   */\n  @property({\n    type: CCFloat,\n    min: 0,\n    group: `Flex`,\n    displayName: `Grow`,\n    tooltip: `FLEX GROW describes how any space within a container should\n    be distributed among its children along the main axis. After laying out its children,\n    a container will distribute any remaining space according to the flex grow values specified\n    by its children.\n\n    Flex grow accepts any floating point value >= 0, with 0 being the default value.\n    A container will distribute any remaining space among its children weighted by the child's\n    flex grow value.`,\n  })\n  get flexGrow() {\n    return this._flexGrow;\n  }\n\n  @property({\n    type: CCFloat,\n    min: 0,\n    group: `Flex`,\n    displayName: `Shrink`,\n    tooltip: `FLEX SHRINK describes how to shrink children along the main axis in the\n    case that the total size of the children overflow the size of the container on the main axis.\n    flex shrink is very similar to flex grow and can be thought of in the same way if any\n    overflowing size is considered to be negative remaining space. These two properties also work\n    well together by allowing children to grow and shrink as needed.\n\n    Flex shrink accepts any floating point value >= 0, with 1 being the default value. A container\n    will shrink its children weighted by the child's flex shrink value.`,\n  })\n  get flexShrink() {\n    return this._flexShrink;\n  }\n\n  /**\n   * The flex wrap property is set on containers and controls what happens when children\n   * overflow the size of the container along the main axis. By default children are forced into a\n   * single line (which can shrink elements).\n   *\n   * If wrapping is allowed items are wrapped into multiple lines along the main axis if needed.\n   * wrap reverse behaves the same, but the order of the lines is reversed.\n   *\n   * When wrapping lines align content can be used to specify how the lines are placed in the container.\n   */\n  @property({\n    type: Wrap,\n    group: `Flex`,\n    displayName: `Wrap`,\n    tooltip: `The flex wrap property is set on containers and controls what happens when children\n    overflow the size of the container along the main axis. By default children are forced into a\n    single line (which can shrink elements).\n\n    If wrapping is allowed items are wrapped into multiple lines along the main axis if needed.\n    wrap reverse behaves the same, but the order of the lines is reversed.\n\n    When wrapping lines align content can be used to specify how the lines are placed in the container.`,\n  })\n  get flexWrap() {\n    return this._flexWrap;\n  }\n\n  @property({\n    type: SizeUnit,\n    group: { id: \"layout\", name: \"Height\", displayOrder: 0 },\n    displayName: `Unit`,\n    displayOrder: 0,\n    visible: function (this: UIElement) {\n      return !this._hasCanvas;\n    },\n    tooltip: `The type of Unit used for height value.\n\n    AUTO Is the default Value, the engine calculates the height for the element based on its content,\n    whether that is other children, text, or an image.\n\n    PIXEL Defines the height in absolute values. Depending on other properties set on the node\n    this may or may not be the final dimension of the node.\n\n    PERCENTAGE Defines the height in percentage of its parent's height.`,\n  })\n  get heightUnit() {\n    return this._heightUnit;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout\", name: \"Height\" },\n    displayName: `Value`,\n    displayOrder: 1,\n    unit: \"px\",\n    visible: function (this: UIElement) {\n      return this.heightUnit === Unit.PIXEL && !this._hasCanvas;\n    },\n    tooltip: `The value for height in absolute units.`,\n  })\n  get heightValue() {\n    return this._heightValue;\n  }\n\n  @property({\n    type: CCFloat,\n    min: 0,\n    group: { id: \"layout\", name: \"Height\" },\n    displayName: `Value`,\n    displayOrder: 1,\n    unit: \"%\",\n    visible: function (this: UIElement) {\n      return this.heightUnit === Unit.PERCENT && !this._hasCanvas;\n    },\n    tooltip: `The value for height in percentage.`,\n  })\n  get heightValuePercentage() {\n    return this._heightValue;\n  }\n\n  /**\n   * Justify content describes how to align children within the main axis of their container.\n   * For example, you can use this property to center a child horizontally within a container with\n   * flex direction set to row or vertically within a container with flex direction set to column.\n   *\n   * FLEX START (DEFAULT) Align children of a container to the start of the container's main axis.\n   *\n   * FLEX END Align children of a container to the end of the container's main axis.\n   *\n   * CENTER Align children of a container in the center of the container's main axis.\n   *\n   * SPACE BETWEEN Evenly space of children across the container's main axis, distributing\n   * remaining space between the children.\n   *\n   * SPACE AROUND Evenly space of children across the container's main axis, distributing\n   * remaining space around the children. Compared to space between using space around will result\n   * in space being distributed to the beginning of the first child and end of the last child.\n   *\n   * SPACE EVENLY Evenly distributed within the alignment container along the main axis.\n   * The spacing between each pair of adjacent items, the main-start edge and the first item,\n   * and the main-end edge and the last item, are all exactly the same.\n   */\n  @property({\n    type: JustifyContent,\n    group: { id: \"align\", name: \"Align\" },\n    displayOrder: 0,\n    tooltip: `Justify content describes how to align children within the main axis of their container.\n    For example, you can use this property to center a child horizontally within a container with\n    flex direction set to row or vertically within a container with flex direction set to column.\n\n    FLEX START (DEFAULT) Align children of a container to the start of the container's main axis.\n\n    FLEX END Align children of a container to the end of the container's main axis.\n\n    CENTER Align children of a container in the center of the container's main axis.\n\n    SPACE BETWEEN Evenly space of children across the container's main axis, distributing\n    remaining space between the children.\n\n    SPACE AROUND Evenly space of children across the container's main axis, distributing\n    remaining space around the children. Compared to space between using space around will result\n    in space being distributed to the beginning of the first child and end of the last child.\n\n    SPACE EVENLY Evenly distributed within the alignment container along the main axis.\n    The spacing between each pair of adjacent items, the main-start edge and the first item,\n    and the main-end edge and the last item, are all exactly the same.`,\n  })\n  get justifyContent() {\n    return this._justifyContent;\n  }\n\n  @property({\n    type: MarginUnit,\n    group: { id: \"layout2\", name: \"Margin\", displayOrder: 2 },\n    displayName: `Top Unit`,\n    displayOrder: 0,\n    visible: function (this: UIElement) {\n      return !this.isRoot;\n    },\n    tooltip: `MARGIN effects the spacing around the outside of a node. A node with margin will\n    offset itself from the bounds of its parent but also offset the location of any siblings.\n    The margin of a node contributes to the total size of its parent if the parent is auto sized.`,\n  })\n  get marginUnitTop() {\n    return this._marginUnitTop;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout2\", name: \"Margin\" },\n    displayName: `Top`,\n    unit: \"px\",\n    displayOrder: 1,\n    visible: function (this: UIElement) {\n      return this.marginUnitTop === Unit.PIXEL && !this.isRoot;\n    },\n    tooltip: `MARGIN effects the spacing around the outside of a node. A node with margin will\n    offset itself from the bounds of its parent but also offset the location of any siblings.\n    The margin of a node contributes to the total size of its parent if the parent is auto sized.`,\n  })\n  get marginValueTop() {\n    return this._marginValueTop;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout2\", name: \"Margin\" },\n    displayName: `Top`,\n    unit: \"%\",\n    displayOrder: 1,\n    visible: function (this: UIElement) {\n      return this.marginUnitTop === Unit.PERCENT && !this.isRoot;\n    },\n    tooltip: `MARGIN effects the spacing around the outside of a node. A node with margin will\n    offset itself from the bounds of its parent but also offset the location of any siblings.\n    The margin of a node contributes to the total size of its parent if the parent is auto sized.`,\n  })\n  get marginValuePercentageTop() {\n    return this._marginValueTop;\n  }\n\n  @property({\n    type: MarginUnit,\n    group: { id: \"layout2\", name: \"Margin\" },\n    displayName: `Bottom Unit`,\n    displayOrder: 2,\n    visible: function (this: UIElement) {\n      return !this.isRoot;\n    },\n    tooltip: `MARGIN effects the spacing around the outside of a node. A node with margin will\n    offset itself from the bounds of its parent but also offset the location of any siblings.\n    The margin of a node contributes to the total size of its parent if the parent is auto sized.`,\n  })\n  get marginUnitBottom() {\n    return this._marginUnitBottom;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout2\", name: \"Margin\" },\n    displayName: `Bottom`,\n    unit: \"px\",\n    displayOrder: 3,\n    visible: function (this: UIElement) {\n      return this.marginUnitBottom === Unit.PIXEL && !this.isRoot;\n    },\n    tooltip: `MARGIN effects the spacing around the outside of a node. A node with margin will\n    offset itself from the bounds of its parent but also offset the location of any siblings.\n    The margin of a node contributes to the total size of its parent if the parent is auto sized.`,\n  })\n  get marginValueBottom() {\n    return this._marginValueBottom;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout2\", name: \"Margin\" },\n    displayName: `Bottom`,\n    unit: \"%\",\n    displayOrder: 3,\n    visible: function (this: UIElement) {\n      return this.marginUnitBottom === Unit.PERCENT && !this.isRoot;\n    },\n    tooltip: `MARGIN effects the spacing around the outside of a node. A node with margin will\n    offset itself from the bounds of its parent but also offset the location of any siblings.\n    The margin of a node contributes to the total size of its parent if the parent is auto sized.`,\n  })\n  get marginValuePercentageBottom() {\n    return this._marginValueBottom;\n  }\n\n  @property({\n    type: MarginUnit,\n    group: { id: \"layout2\", name: \"Margin\" },\n    displayName: `Left Unit`,\n    displayOrder: 4,\n    visible: function (this: UIElement) {\n      return !this.isRoot;\n    },\n    tooltip: `MARGIN effects the spacing around the outside of a node. A node with margin will\n    offset itself from the bounds of its parent but also offset the location of any siblings.\n    The margin of a node contributes to the total size of its parent if the parent is auto sized.`,\n  })\n  get marginUnitLeft() {\n    return this._marginUnitLeft;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout2\", name: \"Margin\" },\n    displayName: `Left`,\n    unit: \"px\",\n    displayOrder: 5,\n    visible: function (this: UIElement) {\n      return this.marginUnitLeft === Unit.PIXEL && !this.isRoot;\n    },\n    tooltip: `MARGIN effects the spacing around the outside of a node. A node with margin will\n    offset itself from the bounds of its parent but also offset the location of any siblings.\n    The margin of a node contributes to the total size of its parent if the parent is auto sized.`,\n  })\n  get marginValueLeft() {\n    return this._marginValueLeft;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout2\", name: \"Margin\" },\n    displayName: `Left`,\n    unit: \"%\",\n    displayOrder: 5,\n    visible: function (this: UIElement) {\n      return this.marginUnitLeft === Unit.PERCENT && !this.isRoot;\n    },\n    tooltip: `MARGIN effects the spacing around the outside of a node. A node with margin will\n    offset itself from the bounds of its parent but also offset the location of any siblings.\n    The margin of a node contributes to the total size of its parent if the parent is auto sized.`,\n  })\n  get marginValuePercentageLeft() {\n    return this._marginValueLeft;\n  }\n\n  @property({\n    type: MarginUnit,\n    group: { id: \"layout2\", name: \"Margin\" },\n    displayName: `Right Unit`,\n    displayOrder: 6,\n    visible: function (this: UIElement) {\n      return !this.isRoot;\n    },\n    tooltip: `MARGIN effects the spacing around the outside of a node. A node with margin will\n    offset itself from the bounds of its parent but also offset the location of any siblings.\n    The margin of a node contributes to the total size of its parent if the parent is auto sized.`,\n  })\n  get marginUnitRight() {\n    return this._marginUnitRight;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout2\", name: \"Margin\" },\n    displayName: `Right`,\n    unit: \"px\",\n    displayOrder: 7,\n    visible: function (this: UIElement) {\n      return this.marginUnitRight === Unit.PIXEL && !this.isRoot;\n    },\n    tooltip: `MARGIN effects the spacing around the outside of a node. A node with margin will\n    offset itself from the bounds of its parent but also offset the location of any siblings.\n    The margin of a node contributes to the total size of its parent if the parent is auto sized.`,\n  })\n  get marginValueRight() {\n    return this._marginValueRight;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout2\", name: \"Margin\" },\n    displayName: `Right`,\n    unit: \"%\",\n    displayOrder: 7,\n    visible: function (this: UIElement) {\n      return this.marginUnitRight === Unit.PERCENT && !this.isRoot;\n    },\n    tooltip: `MARGIN effects the spacing around the outside of a node. A node with margin will\n    offset itself from the bounds of its parent but also offset the location of any siblings.\n    The margin of a node contributes to the total size of its parent if the parent is auto sized.`,\n  })\n  get marginValuePercentageRight() {\n    return this._marginValueRight;\n  }\n\n  @property({\n    type: MinMaxUnit,\n    group: { id: \"layout\", name: \"Height\" },\n    displayName: `Max Unit`,\n    displayOrder: 2,\n    visible: function (this: UIElement) {\n      return !this._hasCanvas;\n    },\n    tooltip: `The unit type of the max height value.`,\n  })\n  get maxHeightUnit() {\n    return this._maxHeightUnit;\n  }\n\n  @property({\n    type: CCFloat,\n    min: 0,\n    group: { id: \"layout\", name: \"Height\" },\n    displayName: `Max Value`,\n    unit: \"px\",\n    displayOrder: 3,\n    visible: function (this: UIElement) {\n      return this.maxHeightUnit === Unit.PIXEL && !this._hasCanvas;\n    },\n    tooltip: `The maximum height constraints of an element.\n    These properties have higher priority than all other properties and will always be respected.`,\n  })\n  get maxHeightValue() {\n    return this._maxHeightValue;\n  }\n\n  @property({\n    type: CCFloat,\n    min: 0,\n\n    group: { id: \"layout\", name: \"Height\" },\n    displayName: `Max Value`,\n    unit: \"%\",\n    displayOrder: 3,\n    visible: function (this: UIElement) {\n      return this.maxHeightUnit === Unit.PERCENT && !this._hasCanvas;\n    },\n    tooltip: `The maximum height constraints of an element as a percent of parent height.\n    These properties have higher priority than all other properties and will always be respected.`,\n  })\n  get maxHeightValuePercentage() {\n    return this._maxHeightValue;\n  }\n\n  @property({\n    type: MinMaxUnit,\n    group: { id: \"layout\", name: \"Width\", displayOrder: 1 },\n    displayName: `Max Unit`,\n    displayOrder: 2,\n    visible: function (this: UIElement) {\n      return !this._hasCanvas;\n    },\n    tooltip: `The unit type of the max width value.`,\n  })\n  get maxWidthUnit() {\n    return this._maxWidthUnit;\n  }\n\n  @property({\n    type: CCFloat,\n    min: 0,\n    group: { id: \"layout\", name: \"Width\" },\n    displayName: `Max Value`,\n    unit: \"px\",\n    displayOrder: 3,\n    visible: function (this: UIElement) {\n      return this.maxWidthUnit === Unit.PIXEL && !this._hasCanvas;\n    },\n    tooltip: `The maximum width constraints of an element.\n    These properties have higher priority than all other properties and will always be respected.`,\n  })\n  get maxWidthValue() {\n    return this._maxWidthValue;\n  }\n\n  @property({\n    type: CCFloat,\n    min: 0,\n\n    group: { id: \"layout\", name: \"Width\" },\n    displayName: `Max Value`,\n    unit: \"%\",\n    displayOrder: 3,\n    visible: function (this: UIElement) {\n      return this.maxWidthUnit === Unit.PERCENT && !this._hasCanvas;\n    },\n    tooltip: `The maximum width constraints of an element as a percent of parent width.\n    These properties have higher priority than all other properties and will always be respected.`,\n  })\n  get maxWidthValuePercentage() {\n    return this._maxWidthValue;\n  }\n\n  @property({\n    type: MinMaxUnit,\n    group: { id: \"layout\", name: \"Height\" },\n    displayName: `Min Unit`,\n    displayOrder: 4,\n    visible: function (this: UIElement) {\n      return !this._hasCanvas;\n    },\n    tooltip: `The unit type of the min height value.`,\n  })\n  get minHeightUnit() {\n    return this._minHeightUnit;\n  }\n\n  @property({\n    type: CCFloat,\n    min: 0,\n    group: { id: \"layout\", name: \"Height\" },\n    displayName: `Min Value`,\n    unit: \"px\",\n    displayOrder: 5,\n    visible: function (this: UIElement) {\n      return this.minHeightUnit === Unit.PIXEL && !this._hasCanvas;\n    },\n    tooltip: `The minimum height constraints of an element.\n    These properties have higher priority than all other properties and will always be respected.`,\n  })\n  get minHeightValue() {\n    return this._minHeightValue;\n  }\n\n  @property({\n    type: CCFloat,\n    min: 0,\n    group: { id: \"layout\", name: \"Height\" },\n    displayName: `Min Value`,\n    unit: \"%\",\n    displayOrder: 5,\n    visible: function (this: UIElement) {\n      return this.minHeightUnit === Unit.PERCENT && !this._hasCanvas;\n    },\n    tooltip: `The minimum height constraints of an element as a percent of parent height.\n    These properties have higher priority than all other properties and will always be respected.`,\n  })\n  get minHeightValuePercentage() {\n    return this._minHeightValue;\n  }\n\n  @property({\n    type: MinMaxUnit,\n    group: { id: \"layout\", name: \"Width\" },\n    displayName: `Min Unit`,\n    displayOrder: 4,\n    visible: function (this: UIElement) {\n      return !this._hasCanvas;\n    },\n    tooltip: `The unit type of minimum width value.`,\n  })\n  get minWidthUnit() {\n    return this._minWidthUnit;\n  }\n\n  @property({\n    type: CCFloat,\n    min: 0,\n    group: { id: \"layout\", name: \"Width\" },\n    displayName: `Min Value`,\n    unit: \"px\",\n    displayOrder: 5,\n    visible: function (this: UIElement) {\n      return this.minWidthUnit === Unit.PIXEL && !this._hasCanvas;\n    },\n    tooltip: `The minimum width constraints of an element.\n    These properties have higher priority than all other properties and will always be respected.`,\n  })\n  get minWidthValue() {\n    return this._minWidthValue;\n  }\n\n  @property({\n    type: CCFloat,\n    min: 0,\n    group: { id: \"layout\", name: \"Width\" },\n    displayName: `Min Value`,\n    unit: \"%\",\n    displayOrder: 5,\n    visible: function (this: UIElement) {\n      return this.minWidthUnit === Unit.PERCENT && !this._hasCanvas;\n    },\n    tooltip: `The minimum width constraints of an element as a percent of parent width.\n    These properties have higher priority than all other properties and will always be respected.`,\n  })\n  get minWidthValuePercentage() {\n    return this._minWidthValue;\n  }\n\n  @property({\n    type: PaddingUnit,\n    group: { id: \"layout2\", name: \"Padding\", displayOrder: 1 },\n    displayName: `Top Unit`,\n    displayOrder: 0,\n    tooltip: `The unit type of top padding.`,\n  })\n  get paddingTopUnit() {\n    return this._paddingTopUnit;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout2\", name: \"Padding\" },\n    displayName: `Top Value`,\n    unit: \"px\",\n    displayOrder: 1,\n    visible: function (this: UIElement) {\n      return this.paddingTopUnit === Unit.PIXEL;\n    },\n    tooltip: `PADDING affects the size of the node it is applied to.\n    Padding acts as if box-sizing: border-box; was set. That is padding will not\n    add to the total size of an element if it has an explicit size set. For auto sized\n    nodes padding will increase the size of the node as well as offset the location of any children.`,\n  })\n  get paddingTopValue() {\n    return this._paddingTopValue;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout2\", name: \"Padding\" },\n    displayName: `Top Value`,\n    unit: \"%\",\n    displayOrder: 1,\n    visible: function (this: UIElement) {\n      return this.paddingTopUnit === Unit.PERCENT;\n    },\n    tooltip: `PADDING affects the size of the node it is applied to.\n    Padding acts as if box-sizing: border-box; was set. That is padding will not\n    add to the total size of an element if it has an explicit size set. For auto sized\n    nodes padding will increase the size of the node as well as offset the location of any children.`,\n  })\n  get paddingTopValuePercentage() {\n    return this._paddingTopValue;\n  }\n\n  @property({\n    type: PaddingUnit,\n    group: { id: \"layout2\", name: \"Padding\" },\n    displayName: `Bottom Unit`,\n    displayOrder: 2,\n    tooltip: `The unit type of bottom padding.`,\n  })\n  get paddingBottomUnit() {\n    return this._paddingBottomUnit;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout2\", name: \"Padding\" },\n    displayName: `Bottom Value`,\n    unit: \"px\",\n    displayOrder: 3,\n    visible: function (this: UIElement) {\n      return this.paddingBottomUnit === Unit.PIXEL;\n    },\n    tooltip: `PADDING affects the size of the node it is applied to.\n    Padding acts as if box-sizing: border-box; was set. That is padding will not\n    add to the total size of an element if it has an explicit size set. For auto sized\n    nodes padding will increase the size of the node as well as offset the location of any children.`,\n  })\n  get paddingBottomValue() {\n    return this._paddingBottomValue;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout2\", name: \"Padding\" },\n    displayName: `Bottom Value`,\n    unit: \"%\",\n    displayOrder: 3,\n    visible: function (this: UIElement) {\n      return this.paddingBottomUnit === Unit.PERCENT;\n    },\n    tooltip: `PADDING affects the size of the node it is applied to.\n    Padding acts as if box-sizing: border-box; was set. That is padding will not\n    add to the total size of an element if it has an explicit size set. For auto sized\n    nodes padding will increase the size of the node as well as offset the location of any children.`,\n  })\n  get paddingBottomValuePercentage() {\n    return this._paddingBottomValue;\n  }\n\n  @property({\n    type: PaddingUnit,\n    group: { id: \"layout2\", name: \"Padding\" },\n    displayName: `Left Unit`,\n    displayOrder: 4,\n    tooltip: `The unit type of left padding.`,\n  })\n  get paddingLeftUnit() {\n    return this._paddingLeftUnit;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout2\", name: \"Padding\" },\n    displayName: `Left Value`,\n    unit: \"px\",\n    displayOrder: 5,\n    visible: function (this: UIElement) {\n      return this.paddingLeftUnit === Unit.PIXEL;\n    },\n    tooltip: `PADDING affects the size of the node it is applied to.\n    Padding acts as if box-sizing: border-box; was set. That is padding will not\n    add to the total size of an element if it has an explicit size set. For auto sized\n    nodes padding will increase the size of the node as well as offset the location of any children.`,\n  })\n  get paddingLeftValue() {\n    return this._paddingLeftValue;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout2\", name: \"Padding\" },\n    displayName: `Left Value`,\n    unit: \"%\",\n    displayOrder: 5,\n    visible: function (this: UIElement) {\n      return this.paddingLeftUnit === Unit.PERCENT;\n    },\n    tooltip: `PADDING affects the size of the node it is applied to.\n    Padding acts as if box-sizing: border-box; was set. That is padding will not\n    add to the total size of an element if it has an explicit size set. For auto sized\n    nodes padding will increase the size of the node as well as offset the location of any children.`,\n  })\n  get paddingLeftValuePercentage() {\n    return this._paddingLeftValue;\n  }\n\n  @property({\n    type: PaddingUnit,\n    group: { id: \"layout2\", name: \"Padding\" },\n    displayName: `Right Unit`,\n    displayOrder: 6,\n    tooltip: `The unit type of right padding.`,\n  })\n  get paddingRightUnit() {\n    return this._paddingRightUnit;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout2\", name: \"Padding\" },\n    displayName: `Right Value`,\n    unit: \"px\",\n    displayOrder: 7,\n    visible: function (this: UIElement) {\n      return this.paddingRightUnit === Unit.PIXEL;\n    },\n    tooltip: `PADDING affects the size of the node it is applied to.\n    Padding acts as if box-sizing: border-box; was set. That is padding will not\n    add to the total size of an element if it has an explicit size set. For auto sized\n    nodes padding will increase the size of the node as well as offset the location of any children.`,\n  })\n  get paddingRightValue() {\n    return this._paddingRightValue;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout2\", name: \"Padding\" },\n    displayName: `Right Value`,\n    unit: \"%\",\n    displayOrder: 7,\n    visible: function (this: UIElement) {\n      return this.paddingRightUnit === Unit.PERCENT;\n    },\n    tooltip: `PADDING affects the size of the node it is applied to.\n    Padding acts as if box-sizing: border-box; was set. That is padding will not\n    add to the total size of an element if it has an explicit size set. For auto sized\n    nodes padding will increase the size of the node as well as offset the location of any children.`,\n  })\n  get paddingRightValuePercentage() {\n    return this._paddingRightValue;\n  }\n\n  @property({\n    type: PositionUnit,\n    group: { id: \"layout\", name: \"Position\", displayOrder: 2 },\n    displayName: `Top Unit`,\n    displayOrder: 1,\n    visible: function (this: UIElement) {\n      return !this._hasCanvas;\n    },\n    tooltip: `The unit type of top position`,\n  })\n  get positionTopUnit() {\n    return this._positionTopUnit;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout\", name: \"Position\" },\n    displayName: `Top Value`,\n    unit: \"px\",\n    displayOrder: 2,\n    visible: function (this: UIElement) {\n      return this.positionTopUnit === Unit.PIXEL && !this._hasCanvas;\n    },\n    tooltip: `The position values top, right, bottom, and left behave differently depending\n    on the position type of the element. For a relative element they offset the position of\n    the element in the direction specified. For absolute element though these properties\n    specify the offset of the element's side from the same side on the parent.`,\n  })\n  get positionTopValue() {\n    return this._positionTopValue;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout\", name: \"Position\" },\n    displayName: `Top Value`,\n    unit: \"%\",\n    displayOrder: 2,\n    visible: function (this: UIElement) {\n      return this.positionTopUnit === Unit.PERCENT && !this._hasCanvas;\n    },\n    tooltip: `The position values top, right, bottom, and left behave differently depending\n    on the position type of the element. For a relative element they offset the position of\n    the element in the direction specified. For absolute element though these properties\n    specify the offset of the element's side from the same side on the parent.`,\n  })\n  get positionTopValuePercentage() {\n    return this._positionTopValue;\n  }\n\n  @property({\n    type: PositionUnit,\n    group: { id: \"layout\", name: \"Position\" },\n    displayName: `Bottom Unit`,\n    displayOrder: 3,\n    visible: function (this: UIElement) {\n      return !this._hasCanvas;\n    },\n    tooltip: `The unit type of bottom position`,\n  })\n  get positionBottomUnit() {\n    return this._positionBottomUnit;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout\", name: \"Position\" },\n    displayName: `Top Value`,\n    unit: \"px\",\n    displayOrder: 4,\n    visible: function (this: UIElement) {\n      return this.positionBottomUnit === Unit.PIXEL && !this._hasCanvas;\n    },\n    tooltip: `The position values top, right, bottom, and left behave differently depending\n    on the position type of the element. For a relative element they offset the position of\n    the element in the direction specified. For absolute element though these properties\n    specify the offset of the element's side from the same side on the parent.`,\n  })\n  get positionBottomValue() {\n    return this._positionBottomValue;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout\", name: \"Position\" },\n    displayName: `Top Value`,\n    unit: \"%\",\n    displayOrder: 4,\n    visible: function (this: UIElement) {\n      return this.positionBottomUnit === Unit.PERCENT && !this._hasCanvas;\n    },\n    tooltip: `The position values top, right, bottom, and left behave differently depending\n    on the position type of the element. For a relative element they offset the position of\n    the element in the direction specified. For absolute element though these properties\n    specify the offset of the element's side from the same side on the parent.`,\n  })\n  get positionBottomValuePercentage() {\n    return this._positionBottomValue;\n  }\n\n  @property({\n    type: PositionUnit,\n    group: { id: \"layout\", name: \"Position\" },\n    displayName: `Left Unit`,\n    displayOrder: 5,\n    visible: function (this: UIElement) {\n      return !this._hasCanvas;\n    },\n    tooltip: `The unit type of left position`,\n  })\n  get positionLeftUnit() {\n    return this._positionLeftUnit;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout\", name: \"Position\" },\n    displayName: `Left Value`,\n    unit: \"px\",\n    displayOrder: 6,\n    visible: function (this: UIElement) {\n      return this.positionLeftUnit === Unit.PIXEL && !this._hasCanvas;\n    },\n    tooltip: `The position values top, right, bottom, and left behave differently depending\n    on the position type of the element. For a relative element they offset the position of\n    the element in the direction specified. For absolute element though these properties\n    specify the offset of the element's side from the same side on the parent.`,\n  })\n  get positionLeftValue() {\n    return this._positionLeftValue;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout\", name: \"Position\" },\n    displayName: `Left Value`,\n    unit: \"%\",\n    displayOrder: 6,\n    visible: function (this: UIElement) {\n      return this.positionLeftUnit === Unit.PERCENT && !this._hasCanvas;\n    },\n    tooltip: `The position values top, right, bottom, and left behave differently depending\n    on the position type of the element. For a relative element they offset the position of\n    the element in the direction specified. For absolute element though these properties\n    specify the offset of the element's side from the same side on the parent.`,\n  })\n  get positionLeftValuePercentage() {\n    return this._positionLeftValue;\n  }\n\n  @property({\n    type: PositionUnit,\n    group: { id: \"layout\", name: \"Position\" },\n    displayName: `Right Unit`,\n    displayOrder: 7,\n    visible: function (this: UIElement) {\n      return !this._hasCanvas;\n    },\n    tooltip: `The unit type of right position`,\n  })\n  get positionRightUnit() {\n    return this._positionRightUnit;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout\", name: \"Position\" },\n    displayName: `Right Value`,\n    unit: \"px\",\n    displayOrder: 8,\n    visible: function (this: UIElement) {\n      return this.positionRightUnit === Unit.PIXEL && !this._hasCanvas;\n    },\n    tooltip: `The position values top, right, bottom, and left behave differently depending\n    on the position type of the element. For a relative element they offset the position of\n    the element in the direction specified. For absolute element though these properties\n    specify the offset of the element's side from the same side on the parent.`,\n  })\n  get positionRightValue() {\n    return this._positionRightValue;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout\", name: \"Position\" },\n    displayName: `Right Value`,\n    unit: \"%\",\n    displayOrder: 8,\n    visible: function (this: UIElement) {\n      return this.positionRightUnit === Unit.PERCENT && !this._hasCanvas;\n    },\n    tooltip: `The position values top, right, bottom, and left behave differently depending\n    on the position type of the element. For a relative element they offset the position of\n    the element in the direction specified. For absolute element though these properties\n    specify the offset of the element's side from the same side on the parent.`,\n  })\n  get positionRightValuePercentage() {\n    return this._positionRightValue;\n  }\n\n  @property({\n    type: PositionType,\n    group: { id: \"layout\", name: \"Position\" },\n    displayName: `Type`,\n    displayOrder: 0,\n    visible: function (this: UIElement) {\n      return !this._hasCanvas;\n    },\n    tooltip: `The position type of an element defines how it is positioned within its parent.\n\n    RELATIVE (DEFAULT) By default an element is positioned relatively. This means an element\n    is positioned according to the normal flow of the layout, and then offset relative to that\n    position based on the values of top, right, bottom, and left. The offset does not affect\n    the position of any sibling or parent elements.\n\n    ABSOLUTE When positioned absolutely an element doesn't take part in the normal layout flow.\n    It is instead laid out independent of its siblings. The position is determined based on the\n    top, right, bottom, and left values.`,\n  })\n  get positionType() {\n    return this._positionType;\n  }\n\n  @property({\n    type: SizeUnit,\n    group: { id: \"layout\", name: \"Width\" },\n    displayName: `Unit`,\n    displayOrder: 0,\n    visible: function (this: UIElement) {\n      return !this._hasCanvas;\n    },\n    tooltip: `The type of Unit used for width value.\n\n    AUTO Is the default Value, the engine calculates the width for the element based on its content,\n    whether that is other children, text, or an image.\n\n    PIXEL Defines the width in absolute values. Depending on other properties set on the node\n    this may or may not be the final dimension of the node.\n\n    PERCENTAGE Defines the width in percentage of its parent's width.`,\n  })\n  get widthUnit() {\n    return this._widthUnit;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout\", name: \"Width\" },\n    displayName: `Value`,\n    unit: \"px\",\n    displayOrder: 1,\n    visible: function (this: UIElement) {\n      return this.widthUnit === Unit.PIXEL && !this._hasCanvas;\n    },\n    tooltip: `The value of width of the element in absolute units.`,\n  })\n  get widthValue() {\n    return this._widthValue;\n  }\n\n  @property({\n    type: CCFloat,\n    group: { id: \"layout\", name: \"Width\" },\n    displayName: `Value`,\n    unit: \"%\",\n    displayOrder: 1,\n    visible: function (this: UIElement) {\n      return this.widthUnit === Unit.PERCENT && !this._hasCanvas;\n    },\n    tooltip: `The value of width of the element as a percentage of the parent width.`,\n  })\n  get widthValuePercentage() {\n    return this._widthValue;\n  }\n  //#endregion\n\n  private get _hasCanvas() {\n    return this.getComponent(Canvas) != null;\n  }\n\n  //#region property setters\n  set alignContent(value) {\n    this._alignContent = value;\n    this._yogaNode.setAlignContent(value);\n  }\n\n  set alignItems(value) {\n    this._alignItems = value;\n    this._yogaNode.setAlignItems(value);\n  }\n\n  set alignSelf(value) {\n    if (this.isRoot) return;\n    this._alignSelf = value;\n    this._yogaNode.setAlignSelf(value);\n  }\n\n  set aspectRatio(value) {\n    this._aspectRatio = value;\n    if (value > 0) this._yogaNode.setAspectRatio(value);\n  }\n\n  set borderTop(value) {\n    this._borderTop = value;\n    this._yogaNode.setBorder(Edge.TOP, value);\n  }\n\n  set borderBottom(value) {\n    this._borderBottom = value;\n    this._yogaNode.setBorder(Edge.BOTTOM, value);\n  }\n\n  set borderLeft(value) {\n    this._borderLeft = value;\n    this._yogaNode.setBorder(Edge.LEFT, value);\n  }\n\n  set borderRight(value) {\n    this._borderRight = value;\n    this._yogaNode.setBorder(Edge.RIGHT, value);\n  }\n\n  set display(value) {\n    this._display = value;\n    this._yogaNode.setDisplay(value);\n  }\n\n  set flexDirection(value) {\n    this._flexDirection = value;\n    this._yogaNode.setFlexDirection(value);\n  }\n\n  set flexGrow(value) {\n    this._flexGrow = value;\n    this._yogaNode.setFlexGrow(value);\n  }\n\n  set flexShrink(value) {\n    this._flexShrink = value;\n    this._yogaNode.setFlexShrink(value);\n  }\n\n  set flexWrap(value) {\n    this._flexWrap = value;\n    this._yogaNode.setFlexWrap(value);\n  }\n\n  set heightUnit(value) {\n    if (this._hasCanvas) return;\n    const parent = this._yogaNode.getParent();\n    switch (value) {\n      case Unit.AUTO:\n        this._yogaNode.setHeightAuto();\n        break;\n      case Unit.PERCENT:\n        if (this._heightUnit === Unit.PIXEL && parent) {\n          this._heightValue = pixelToPercent(this._heightValue, parent.getComputedHeight());\n        }\n        this._yogaNode.setHeightPercent(this._heightValue);\n        break;\n      case Unit.PIXEL:\n        if (this._heightUnit === Unit.PERCENT && parent) {\n          this._heightValue = percentToPixel(this._heightValue, parent.getComputedHeight());\n        }\n        this._yogaNode.setHeight(this._heightValue);\n        break;\n      default:\n        break;\n    }\n    this._heightUnit = value;\n  }\n\n  set heightValue(value) {\n    if (this._hasCanvas || this._heightUnit !== Unit.PIXEL) return;\n    this._heightValue = value;\n    this._yogaNode.setHeight(value);\n  }\n\n  set heightValuePercentage(value) {\n    if (this._hasCanvas || this._heightUnit !== Unit.PERCENT) return;\n    this._heightValue = value;\n    this._yogaNode.setHeightPercent(value);\n  }\n\n  set justifyContent(value) {\n    this._justifyContent = value;\n    this._yogaNode.setJustifyContent(value);\n  }\n\n  set marginUnitTop(value) {\n    if (this.isRoot) return;\n    const parent = this._yogaNode.getParent();\n    switch (value) {\n      case Unit.AUTO:\n        this._yogaNode.setMarginAuto(Edge.TOP);\n        break;\n      case Unit.PERCENT:\n        if (this._marginUnitTop === Unit.PIXEL && parent) {\n          this._marginValueTop = pixelToPercent(this._marginValueTop, parent.getComputedHeight());\n        }\n        this._yogaNode.setMarginPercent(Edge.TOP, this._marginValueTop);\n        break;\n      case Unit.PIXEL:\n        if (this._marginUnitTop === Unit.PERCENT && parent) {\n          this._marginValueTop = percentToPixel(this._marginValueTop, parent.getComputedHeight());\n        }\n        this._yogaNode.setMargin(Edge.TOP, this._marginValueTop);\n        break;\n      default:\n        break;\n    }\n    this._marginUnitTop = value;\n  }\n\n  set marginValueTop(value) {\n    if (this.isRoot || this._marginUnitTop !== Unit.PIXEL) return;\n    this._marginValueTop = value;\n    this._yogaNode.setMargin(Edge.TOP, value);\n  }\n\n  set marginValuePercentageTop(value) {\n    if (this.isRoot || this._marginUnitTop !== Unit.PERCENT) return;\n    this._marginValueTop = value;\n    this._yogaNode.setMarginPercent(Edge.TOP, value);\n  }\n\n  set marginUnitBottom(value) {\n    if (this.isRoot) return;\n    const parent = this._yogaNode.getParent();\n    switch (value) {\n      case Unit.AUTO:\n        this._yogaNode.setMarginAuto(Edge.BOTTOM);\n        break;\n      case Unit.PERCENT:\n        if (this._marginUnitBottom === Unit.PIXEL && parent) {\n          this._marginValueBottom = pixelToPercent(\n            this._marginValueBottom,\n            parent.getComputedHeight(),\n          );\n        }\n        this._yogaNode.setMarginPercent(Edge.BOTTOM, this._marginValueBottom);\n        break;\n      case Unit.PIXEL:\n        if (this._marginUnitBottom === Unit.PERCENT && parent) {\n          this._marginValueBottom = percentToPixel(\n            this._marginValueBottom,\n            parent.getComputedHeight(),\n          );\n        }\n        this._yogaNode.setMargin(Edge.BOTTOM, this._marginValueBottom);\n        break;\n      default:\n        break;\n    }\n    this._marginUnitBottom = value;\n  }\n\n  set marginValueBottom(value) {\n    if (this.isRoot || this._marginUnitBottom !== Unit.PIXEL) return;\n    this._marginValueBottom = value;\n    this._yogaNode.setMargin(Edge.BOTTOM, value);\n  }\n\n  set marginValuePercentageBottom(value) {\n    if (this.isRoot || this._marginUnitBottom !== Unit.PERCENT) return;\n    this._marginValueBottom = value;\n    this._yogaNode.setMarginPercent(Edge.BOTTOM, value);\n  }\n\n  set marginUnitLeft(value) {\n    if (this.isRoot) return;\n    const parent = this._yogaNode.getParent();\n    switch (value) {\n      case Unit.AUTO:\n        this._yogaNode.setMarginAuto(Edge.LEFT);\n        break;\n      case Unit.PERCENT:\n        if (this._marginUnitLeft === Unit.PIXEL && parent) {\n          this._marginValueLeft = pixelToPercent(this._marginValueLeft, parent.getComputedWidth());\n        }\n        this._yogaNode.setMarginPercent(Edge.LEFT, this._marginValueLeft);\n        break;\n      case Unit.PIXEL:\n        if (this._marginUnitLeft === Unit.PERCENT && parent) {\n          this._marginValueLeft = percentToPixel(this._marginValueLeft, parent.getComputedWidth());\n        }\n        this._yogaNode.setMargin(Edge.LEFT, this._marginValueLeft);\n        break;\n      default:\n        break;\n    }\n    this._marginUnitLeft = value;\n  }\n\n  set marginValueLeft(value) {\n    if (this.isRoot || this._marginUnitLeft !== Unit.PIXEL) return;\n    this._marginValueLeft = value;\n    this._yogaNode.setMargin(Edge.LEFT, value);\n  }\n\n  set marginValuePercentageLeft(value) {\n    if (this.isRoot || this._marginUnitLeft !== Unit.PERCENT) return;\n    this._marginValueLeft = value;\n    this._yogaNode.setMarginPercent(Edge.LEFT, value);\n  }\n\n  set marginUnitRight(value) {\n    if (this.isRoot) return;\n    const parent = this._yogaNode.getParent();\n    switch (value) {\n      case Unit.AUTO:\n        this._yogaNode.setMarginAuto(Edge.RIGHT);\n        break;\n      case Unit.PERCENT:\n        if (this._marginUnitRight === Unit.PIXEL && parent) {\n          this._marginValueRight = pixelToPercent(\n            this._marginValueRight,\n            parent.getComputedWidth(),\n          );\n        }\n        this._yogaNode.setMarginPercent(Edge.RIGHT, this._marginValueRight);\n        break;\n      case Unit.PIXEL:\n        this._yogaNode.setMargin(Edge.RIGHT, this._marginValueRight);\n        break;\n      default:\n        break;\n    }\n    this._marginUnitRight = value;\n  }\n\n  set marginValueRight(value) {\n    if (this.isRoot || this._marginUnitRight !== Unit.PIXEL) return;\n    this._marginValueRight = value;\n    this._yogaNode.setMargin(Edge.RIGHT, value);\n  }\n\n  set marginValuePercentageRight(value) {\n    if (this.isRoot || this._marginUnitRight !== Unit.PERCENT) return;\n    this._marginValueRight = value;\n    this._yogaNode.setMarginPercent(Edge.RIGHT, value);\n  }\n\n  set maxHeightUnit(value) {\n    if (this._hasCanvas) return;\n    const parent = this._yogaNode.getParent();\n    switch (value) {\n      case Unit.PERCENT:\n        if (this._maxHeightUnit === Unit.PIXEL && parent) {\n          this._maxHeightValue = pixelToPercent(this._maxHeightValue, parent.getComputedHeight());\n        }\n        this._yogaNode.setMaxHeightPercent(this._maxHeightValue);\n        break;\n      case Unit.PIXEL:\n        if (this._maxHeightUnit === Unit.PERCENT && parent) {\n          this._maxHeightValue = percentToPixel(this._maxHeightValue, parent.getComputedHeight());\n        }\n        this._yogaNode.setMaxHeight(this._maxHeightValue);\n        break;\n      default:\n        this._yogaNode.setMaxHeight(undefined);\n        break;\n    }\n    this._maxHeightUnit = value;\n  }\n\n  set maxHeightValue(value) {\n    if (this._hasCanvas || this._maxHeightUnit !== Unit.PIXEL) return;\n    this._maxHeightValue = value;\n    this._yogaNode.setMaxHeight(value);\n  }\n\n  set maxHeightValuePercentage(value) {\n    if (this._hasCanvas || this._maxHeightUnit !== Unit.PERCENT) return;\n    this._maxHeightValue = value;\n    this._yogaNode.setMaxHeightPercent(value);\n  }\n\n  set maxWidthUnit(value) {\n    if (this._hasCanvas) return;\n    const parent = this._yogaNode.getParent();\n    switch (value) {\n      case Unit.PERCENT:\n        if (this._maxWidthUnit === Unit.PIXEL && parent) {\n          this._maxWidthValue = pixelToPercent(this._maxWidthValue, parent.getComputedWidth());\n        }\n        this._yogaNode.setMaxWidthPercent(this._maxWidthValue);\n        break;\n      case Unit.PIXEL:\n        if (this._maxWidthUnit === Unit.PERCENT && parent) {\n          this._maxWidthValue = percentToPixel(this._maxWidthValue, parent.getComputedWidth());\n        }\n        this._yogaNode.setMaxWidth(this._maxWidthValue);\n        break;\n      default:\n        this._yogaNode.setMaxWidth(undefined);\n        break;\n    }\n    this._maxWidthUnit = value;\n  }\n\n  set maxWidthValue(value) {\n    if (this._hasCanvas || this._maxWidthUnit !== Unit.PIXEL) return;\n    this._maxWidthValue = value;\n    this._yogaNode.setMaxWidth(value);\n  }\n\n  set maxWidthValuePercentage(value) {\n    if (this._hasCanvas || this._maxWidthUnit !== Unit.PERCENT) return;\n    this._maxWidthValue = value;\n    this._yogaNode.setMaxWidthPercent(value);\n  }\n\n  set minHeightUnit(value) {\n    if (this._hasCanvas) return;\n    const parent = this._yogaNode.getParent();\n    switch (value) {\n      case Unit.PERCENT:\n        if (this._minHeightUnit === Unit.PIXEL && parent) {\n          this._minHeightValue = pixelToPercent(this._minHeightValue, parent.getComputedHeight());\n        }\n        this._yogaNode.setMinHeightPercent(this._minHeightValue);\n        break;\n      case Unit.PIXEL:\n        if (this._minHeightUnit === Unit.PERCENT && parent) {\n          this._minHeightValue = percentToPixel(this._minHeightValue, parent.getComputedHeight());\n        }\n        this._yogaNode.setMinHeight(this._minHeightValue);\n        break;\n      default:\n        this._yogaNode.setMinHeight(undefined);\n        break;\n    }\n    this._minHeightUnit = value;\n  }\n\n  set minHeightValue(value) {\n    if (this._hasCanvas || this._minHeightUnit !== Unit.PIXEL) return;\n    this._minHeightValue = value;\n    this._yogaNode.setMinHeight(value);\n  }\n\n  set minHeightValuePercentage(value) {\n    if (this._hasCanvas || this._minHeightUnit !== Unit.PERCENT) return;\n    this._minHeightValue = value;\n    this._yogaNode.setMinHeightPercent(value);\n  }\n\n  set minWidthUnit(value) {\n    if (this._hasCanvas) return;\n    const parent = this._yogaNode.getParent();\n    switch (value) {\n      case Unit.PERCENT:\n        if (this._minWidthUnit === Unit.PIXEL && parent) {\n          this._minWidthValue = pixelToPercent(this._minWidthValue, parent.getComputedWidth());\n        }\n        this._yogaNode.setMinWidthPercent(this._minWidthValue);\n        break;\n      case Unit.PIXEL:\n        if (this._minWidthUnit === Unit.PERCENT && parent) {\n          this._minWidthValue = percentToPixel(this._minWidthValue, parent.getComputedWidth());\n        }\n        this._yogaNode.setMinWidth(this._minHeightValue);\n        break;\n      default:\n        this._yogaNode.setMinWidth(undefined);\n        break;\n    }\n    this._minWidthUnit = value;\n  }\n\n  set minWidthValue(value) {\n    if (this._hasCanvas || this._minWidthUnit !== Unit.PIXEL) return;\n    this._minWidthValue = value;\n    this._yogaNode.setMinWidth(value);\n  }\n\n  set minWidthValuePercentage(value) {\n    if (this._hasCanvas || this._minWidthUnit !== Unit.PERCENT) return;\n    this._minWidthValue = value;\n    this._yogaNode.setMinWidthPercent(value);\n  }\n\n  set paddingTopUnit(value) {\n    const parent = this._yogaNode.getParent();\n    switch (value) {\n      case Unit.PERCENT:\n        if (this._paddingTopUnit === Unit.PIXEL && parent) {\n          this._paddingTopValue = pixelToPercent(this._paddingTopValue, parent.getComputedHeight());\n        }\n        this._yogaNode.setPaddingPercent(Edge.TOP, this._paddingTopValue);\n        break;\n      case Unit.PIXEL:\n        if (this._paddingTopUnit === Unit.PERCENT && parent) {\n          this._paddingTopValue = percentToPixel(this._paddingTopValue, parent.getComputedHeight());\n        }\n        this._yogaNode.setPadding(Edge.TOP, this._paddingTopValue);\n        break;\n      default:\n        break;\n    }\n    this._paddingTopUnit = value;\n  }\n\n  set paddingTopValue(value) {\n    if (this._paddingTopUnit !== Unit.PIXEL) return;\n    this._paddingTopValue = value;\n    this._yogaNode.setPadding(Edge.TOP, value);\n  }\n\n  set paddingTopValuePercentage(value) {\n    if (this._paddingTopUnit !== Unit.PERCENT) return;\n    this._paddingTopValue = value;\n    this._yogaNode.setPaddingPercent(Edge.TOP, value);\n  }\n\n  set paddingBottomUnit(value) {\n    const parent = this._yogaNode.getParent();\n    switch (value) {\n      case Unit.PERCENT:\n        if (this._paddingBottomUnit === Unit.PIXEL && parent) {\n          this._paddingBottomValue = pixelToPercent(\n            +this.paddingBottomValue,\n            parent.getComputedHeight(),\n          );\n        }\n        this._yogaNode.setPaddingPercent(Edge.BOTTOM, this._paddingBottomValue);\n        break;\n      case Unit.PIXEL:\n        this._yogaNode.setPadding(Edge.BOTTOM, this._paddingBottomValue);\n        break;\n      default:\n        break;\n    }\n    this._paddingBottomUnit = value;\n  }\n\n  set paddingBottomValue(value) {\n    if (this._paddingBottomUnit !== Unit.PIXEL) return;\n    this._paddingBottomValue = value;\n    this._yogaNode.setPadding(Edge.BOTTOM, value);\n  }\n\n  set paddingBottomValuePercentage(value) {\n    if (this._paddingBottomUnit !== Unit.PERCENT) return;\n    this._paddingBottomValue = value;\n    this._yogaNode.setPaddingPercent(Edge.BOTTOM, value);\n  }\n\n  set paddingLeftUnit(value) {\n    const parent = this._yogaNode.getParent();\n    switch (value) {\n      case Unit.PERCENT:\n        if (this._paddingLeftUnit === Unit.PIXEL && parent) {\n          this._paddingLeftValue = pixelToPercent(\n            this._paddingLeftValue,\n            parent.getComputedWidth(),\n          );\n        }\n        this._yogaNode.setPaddingPercent(Edge.LEFT, this._paddingLeftValue);\n        break;\n      case Unit.PIXEL:\n        if (this._paddingLeftUnit === Unit.PERCENT && parent) {\n          this._paddingLeftValue = percentToPixel(\n            this._paddingLeftValue,\n            parent.getComputedWidth(),\n          );\n        }\n        this._yogaNode.setPadding(Edge.LEFT, this._paddingLeftValue);\n        break;\n      default:\n        break;\n    }\n    this._paddingLeftUnit = value;\n  }\n\n  set paddingLeftValue(value) {\n    if (this._paddingLeftUnit !== Unit.PIXEL) return;\n    this._paddingLeftValue = value;\n    this._yogaNode.setPadding(Edge.LEFT, value);\n  }\n\n  set paddingLeftValuePercentage(value) {\n    if (this._paddingLeftUnit !== Unit.PERCENT) return;\n    this._paddingLeftValue = value;\n    this._yogaNode.setPaddingPercent(Edge.LEFT, value);\n  }\n\n  set paddingRightUnit(value) {\n    const parent = this._yogaNode.getParent();\n    switch (value) {\n      case Unit.PERCENT:\n        if (this._paddingRightUnit === Unit.PIXEL && parent) {\n          this._paddingRightValue = pixelToPercent(\n            this._paddingRightUnit,\n            parent.getComputedWidth(),\n          );\n        }\n        this._yogaNode.setPaddingPercent(Edge.RIGHT, this._paddingRightValue);\n        break;\n      case Unit.PIXEL:\n        if (this._paddingRightUnit === Unit.PERCENT && parent) {\n          this._paddingRightValue = percentToPixel(\n            this._paddingRightUnit,\n            parent.getComputedWidth(),\n          );\n        }\n        this._yogaNode.setPadding(Edge.RIGHT, this._paddingRightValue);\n        break;\n      default:\n        break;\n    }\n    this._paddingRightUnit = value;\n  }\n\n  set paddingRightValue(value) {\n    if (this._paddingRightUnit !== Unit.PIXEL) return;\n    this._paddingRightValue = value;\n    this._yogaNode.setPadding(Edge.RIGHT, value);\n  }\n\n  set paddingRightValuePercentage(value) {\n    if (this._paddingRightUnit !== Unit.PERCENT) return;\n    this._paddingRightValue = value;\n    this._yogaNode.setPaddingPercent(Edge.RIGHT, value);\n  }\n\n  set positionTopUnit(value) {\n    if (this._hasCanvas) return;\n    const parent = this._yogaNode.getParent();\n    switch (value) {\n      case Unit.PERCENT:\n        if (this._positionTopUnit === Unit.PIXEL && parent) {\n          this._positionTopValue = pixelToPercent(\n            this._positionTopValue,\n            parent.getComputedHeight(),\n          );\n        }\n        this._yogaNode.setPositionPercent(Edge.TOP, this._positionTopValue);\n        break;\n      case Unit.PIXEL:\n        if (this._positionTopUnit === Unit.PERCENT && parent) {\n          this._positionTopValue = percentToPixel(\n            this._positionTopValue,\n            parent.getComputedHeight(),\n          );\n        }\n        this._yogaNode.setPosition(Edge.TOP, this._positionTopValue);\n        break;\n      default:\n        break;\n    }\n    this._positionTopUnit = value;\n  }\n\n  set positionTopValue(value) {\n    if (this._hasCanvas) return;\n    this._positionTopValue = value;\n    this._positionTopUnit = Unit.PIXEL;\n    this._yogaNode.setPosition(Edge.TOP, value);\n  }\n\n  set positionTopValuePercentage(value) {\n    if (this._hasCanvas || this._positionTopUnit !== Unit.PERCENT) return;\n    this._positionTopValue = value;\n    this._yogaNode.setPositionPercent(Edge.TOP, value);\n  }\n\n  set positionBottomUnit(value) {\n    if (this._hasCanvas) return;\n    const parent = this._yogaNode.getParent();\n    switch (value) {\n      case Unit.PERCENT:\n        if (this._positionBottomUnit === Unit.PIXEL && parent) {\n          this._positionBottomValue = pixelToPercent(\n            this._positionBottomValue,\n            parent.getComputedHeight(),\n          );\n        }\n        this._yogaNode.setPositionPercent(Edge.BOTTOM, this._positionBottomValue);\n        break;\n      case Unit.PIXEL:\n        if (this._positionBottomUnit === Unit.PERCENT && parent) {\n          this._positionBottomValue = percentToPixel(\n            this._positionBottomValue,\n            parent.getComputedHeight(),\n          );\n        }\n        this._yogaNode.setPosition(Edge.BOTTOM, this._positionBottomValue);\n        break;\n      default:\n        break;\n    }\n    this._positionBottomUnit = value;\n  }\n\n  set positionBottomValue(value) {\n    if (this._hasCanvas) return;\n    this._positionBottomValue = value;\n    this._positionBottomUnit = Unit.PIXEL;\n    this._yogaNode.setPosition(Edge.BOTTOM, value);\n  }\n\n  set positionBottomValuePercentage(value) {\n    if (this._hasCanvas || this._positionBottomUnit !== Unit.PERCENT) return;\n    this._positionBottomValue = value;\n    this._yogaNode.setPositionPercent(Edge.BOTTOM, value);\n  }\n\n  set positionLeftUnit(value) {\n    if (this._hasCanvas) return;\n    const parent = this._yogaNode.getParent();\n    switch (value) {\n      case Unit.PERCENT:\n        if (this._positionLeftUnit === Unit.PIXEL && parent) {\n          this._positionLeftValue = pixelToPercent(\n            this._positionLeftValue,\n            parent.getComputedWidth(),\n          );\n        }\n        this._yogaNode.setPositionPercent(Edge.LEFT, this._positionLeftValue);\n        break;\n      case Unit.PIXEL:\n        if (this._positionLeftUnit === Unit.PERCENT && parent) {\n          this._positionLeftValue = percentToPixel(\n            this._positionLeftValue,\n            parent.getComputedWidth(),\n          );\n        }\n        this._yogaNode.setPosition(Edge.LEFT, this._positionLeftValue);\n        break;\n      default:\n        break;\n    }\n    this._positionLeftUnit = value;\n  }\n\n  set positionLeftValue(value) {\n    if (this._hasCanvas) return;\n    this._positionLeftValue = value;\n    this._positionLeftUnit = Unit.PIXEL;\n    this._yogaNode.setPosition(Edge.LEFT, value);\n  }\n\n  set positionLeftValuePercentage(value) {\n    if (this._hasCanvas || this._positionLeftUnit !== Unit.PERCENT) return;\n    this._positionLeftValue = value;\n    this._yogaNode.setPositionPercent(Edge.LEFT, value);\n  }\n\n  set positionRightUnit(value) {\n    if (this._hasCanvas) return;\n    const parent = this._yogaNode.getParent();\n    switch (value) {\n      case Unit.PERCENT:\n        if (this._positionRightUnit === Unit.PIXEL && parent) {\n          this._positionRightValue = percentToPixel(\n            this._positionRightValue,\n            parent.getComputedWidth(),\n          );\n        }\n        this._yogaNode.setPositionPercent(Edge.RIGHT, this._positionRightValue);\n        break;\n      case Unit.PIXEL:\n        if (this._positionRightUnit === Unit.PERCENT && parent) {\n          this._positionRightValue = pixelToPercent(\n            this._positionRightValue,\n            parent.getComputedWidth(),\n          );\n        }\n        this._yogaNode.setPosition(Edge.RIGHT, this._positionRightValue);\n        break;\n      default:\n        break;\n    }\n    this._positionRightUnit = value;\n  }\n\n  set positionRightValue(value) {\n    if (this._hasCanvas) return;\n    this._positionRightValue = value;\n    this._positionRightUnit = Unit.PIXEL;\n    this._yogaNode.setPosition(Edge.RIGHT, value);\n  }\n\n  set positionRightValuePercentage(value) {\n    if (this._hasCanvas || this._positionRightUnit !== Unit.PERCENT) return;\n    this._positionRightValue = value;\n    this._yogaNode.setPositionPercent(Edge.RIGHT, value);\n  }\n\n  set positionType(value) {\n    if (this._hasCanvas) return;\n    this._positionType = value;\n    this._yogaNode.setPositionType(value);\n  }\n\n  set widthUnit(value) {\n    if (this._hasCanvas) return;\n    const parent = this._yogaNode.getParent();\n    switch (value) {\n      case Unit.AUTO:\n        this._yogaNode.setWidthAuto();\n        break;\n      case Unit.PERCENT:\n        if (this._widthUnit === Unit.PIXEL && parent) {\n          this._widthValue = pixelToPercent(this._widthValue, parent.getComputedWidth());\n        }\n        this._yogaNode.setWidthPercent(this._widthValue);\n        break;\n      case Unit.PIXEL:\n        if (this._widthUnit === Unit.PERCENT && parent) {\n          this._widthValue = percentToPixel(this._widthValue, parent.getComputedWidth());\n        }\n        this._yogaNode.setWidth(this._widthValue);\n        break;\n      default:\n        break;\n    }\n    this._widthUnit = value;\n  }\n\n  set widthValue(value) {\n    if (this._hasCanvas || this._widthUnit !== Unit.PIXEL) return;\n    this._widthValue = value;\n    this._yogaNode.setWidth(value);\n  }\n\n  set widthValuePercentage(value) {\n    if (this._hasCanvas || this._widthUnit !== Unit.PERCENT) return;\n    this._widthValue = value;\n    this._yogaNode.setWidthPercent(this._widthValue);\n  }\n  //#endregion\n\n  _setIsFloating(value: boolean) {\n    this._isFloating = value;\n  }\n\n  updateLayout(force = false) {\n    if (force) this._markLayoutDirty();\n    if (!this._layoutDirty && this._yogaNode.isDirty()) this._layoutDirty = true;\n    if (this._layoutDirty && this.isRoot && !this._isAnimating) {\n      try {\n        // TODO: Handle right to left.\n        this._yogaNode.calculateLayout();\n      } catch (err) {\n        error(`Error while calculating layout in ${this.node.name}\\n${err}`);\n      }\n      this._updateLayoutInternal();\n    }\n  }\n\n  awake() {\n    if (this._hasCanvas) {\n      this._canvasSizeChanged();\n    }\n    this._updateYogaNode();\n    this._notifyParent();\n    this.updateLayout(true);\n    if (EDITOR && !this.isRoot) {\n      // In Editor can not edit these attrs.\n      // (Position in Node, contentSize in uiTransform)\n      // (anchor in uiTransform, but it can edit, this is different from cocos creator)\n      this._objFlags |=\n        CCObject.Flags.IsPositionLocked |\n        CCObject.Flags.IsSizeLocked |\n        CCObject.Flags.IsAnchorLocked;\n    }\n  }\n\n  onEnable() {\n    this._addEventListeners();\n    this._commitChildren();\n    this.updateLayout(true);\n  }\n\n  onDisable() {\n    this._removeEventListeners();\n    const parentElement = this.node.parent?.getComponent(UIElement);\n    if (parentElement != null) {\n      parentElement._yogaNode.removeChild(this._yogaNode);\n    }\n  }\n\n  onDestroy() {\n    super.onDestroy?.();\n    this._yogaNode.free();\n  }\n\n  onRestore() {\n    this._updateYogaNode();\n  }\n\n  private _updateYogaNode() {\n    this._yogaNode.setAlignContent(this._alignContent);\n    this._yogaNode.setAlignItems(this._alignItems);\n    this._yogaNode.setAlignSelf(this._alignSelf);\n    if (this._aspectRatio > 0) this._yogaNode.setAspectRatio(this._aspectRatio);\n    else this._yogaNode.setAspectRatio(undefined);\n    this._yogaNode.setBorder(Edge.TOP, this._borderTop);\n    this._yogaNode.setBorder(Edge.BOTTOM, this._borderBottom);\n    this._yogaNode.setBorder(Edge.LEFT, this._borderLeft);\n    this._yogaNode.setBorder(Edge.RIGHT, this._borderRight);\n    this._yogaNode.setDisplay(this._display);\n    this._yogaNode.setFlexDirection(this._flexDirection);\n    this._yogaNode.setFlexGrow(this._flexGrow);\n    this._yogaNode.setFlexShrink(this._flexShrink);\n    this._yogaNode.setFlexWrap(this._flexWrap);\n    switch (this._heightUnit) {\n      case Unit.AUTO:\n        this._yogaNode.setHeightAuto();\n        break;\n      case Unit.PERCENT:\n        this._yogaNode.setHeightPercent(this.heightValue);\n        break;\n      case Unit.PIXEL:\n        this._yogaNode.setHeight(this.heightValue);\n        break;\n      default:\n        break;\n    }\n    this._yogaNode.setJustifyContent(this._justifyContent);\n    switch (this._marginUnitTop) {\n      case Unit.AUTO:\n        this._yogaNode.setMarginAuto(Edge.TOP);\n        break;\n      case Unit.PERCENT:\n        this._yogaNode.setMarginPercent(Edge.TOP, this._marginValueTop);\n        break;\n      case Unit.PIXEL:\n        this._yogaNode.setMargin(Edge.TOP, this._marginValueTop);\n        break;\n      default:\n        break;\n    }\n    switch (this._marginUnitBottom) {\n      case Unit.AUTO:\n        this._yogaNode.setMarginAuto(Edge.BOTTOM);\n        break;\n      case Unit.PERCENT:\n        this._yogaNode.setMarginPercent(Edge.BOTTOM, this._marginValueBottom);\n        break;\n      case Unit.PIXEL:\n        this._yogaNode.setMargin(Edge.BOTTOM, this._marginValueBottom);\n        break;\n      default:\n        break;\n    }\n    switch (this._marginUnitLeft) {\n      case Unit.AUTO:\n        this._yogaNode.setMarginAuto(Edge.LEFT);\n        break;\n      case Unit.PERCENT:\n        this._yogaNode.setMarginPercent(Edge.LEFT, this._marginValueLeft);\n        break;\n      case Unit.PIXEL:\n        this._yogaNode.setMargin(Edge.LEFT, this._marginValueLeft);\n        break;\n      default:\n        break;\n    }\n    switch (this._marginUnitRight) {\n      case Unit.AUTO:\n        this._yogaNode.setMarginAuto(Edge.RIGHT);\n        break;\n      case Unit.PERCENT:\n        this._yogaNode.setMarginPercent(Edge.RIGHT, this._marginValueRight);\n        break;\n      case Unit.PIXEL:\n        this._yogaNode.setMargin(Edge.RIGHT, this._marginValueRight);\n        break;\n      default:\n        break;\n    }\n    switch (this._maxHeightUnit) {\n      case Unit.PERCENT:\n        this._yogaNode.setMaxHeightPercent(this._maxHeightValue);\n        break;\n      case Unit.PIXEL:\n        this._yogaNode.setMaxHeight(this._maxHeightValue);\n        break;\n      default:\n        break;\n    }\n    switch (this._maxWidthUnit) {\n      case Unit.PERCENT:\n        this._yogaNode.setMaxWidthPercent(this._maxWidthValue);\n        break;\n      case Unit.PIXEL:\n        this._yogaNode.setMaxWidth(this._maxWidthValue);\n        break;\n      default:\n        break;\n    }\n    switch (this._minHeightUnit) {\n      case Unit.PERCENT:\n        this._yogaNode.setMinHeightPercent(this._minHeightValue);\n        break;\n      case Unit.PIXEL:\n        this._yogaNode.setMinHeight(this._minHeightValue);\n        break;\n      default:\n        break;\n    }\n    switch (this._minWidthUnit) {\n      case Unit.PERCENT:\n        this._yogaNode.setMinWidthPercent(this._minWidthValue);\n        break;\n      case Unit.PIXEL:\n        this._yogaNode.setMinWidth(this._minHeightValue);\n        break;\n      default:\n        break;\n    }\n    switch (this._paddingTopUnit) {\n      case Unit.PERCENT:\n        this._yogaNode.setPaddingPercent(Edge.TOP, this._paddingTopValue);\n        break;\n      case Unit.PIXEL:\n        this._yogaNode.setPadding(Edge.TOP, this._paddingTopValue);\n        break;\n      default:\n        break;\n    }\n    switch (this._paddingBottomUnit) {\n      case Unit.PERCENT:\n        this._yogaNode.setPaddingPercent(Edge.BOTTOM, this._paddingBottomValue);\n        break;\n      case Unit.PIXEL:\n        this._yogaNode.setPadding(Edge.BOTTOM, this._paddingBottomValue);\n        break;\n      default:\n        break;\n    }\n    switch (this._paddingLeftUnit) {\n      case Unit.PERCENT:\n        this._yogaNode.setPaddingPercent(Edge.LEFT, this._paddingLeftValue);\n        break;\n      case Unit.PIXEL:\n        this._yogaNode.setPadding(Edge.LEFT, this._paddingLeftValue);\n        break;\n      default:\n        break;\n    }\n    switch (this._paddingRightUnit) {\n      case Unit.PERCENT:\n        this._yogaNode.setPaddingPercent(Edge.RIGHT, this._paddingRightValue);\n        break;\n      case Unit.PIXEL:\n        this._yogaNode.setPadding(Edge.RIGHT, this._paddingRightValue);\n        break;\n      default:\n        break;\n    }\n    switch (this._positionTopUnit) {\n      case Unit.PERCENT:\n        this._yogaNode.setPositionPercent(Edge.TOP, this._positionTopValue);\n        break;\n      case Unit.PIXEL:\n        this._yogaNode.setPosition(Edge.TOP, this._positionTopValue);\n        break;\n      default:\n        break;\n    }\n    switch (this._positionBottomUnit) {\n      case Unit.PERCENT:\n        this._yogaNode.setPositionPercent(Edge.BOTTOM, this._positionBottomValue);\n        break;\n      case Unit.PIXEL:\n        this._yogaNode.setPosition(Edge.BOTTOM, this._positionBottomValue);\n        break;\n      default:\n        break;\n    }\n    switch (this._positionLeftUnit) {\n      case Unit.PERCENT:\n        this._yogaNode.setPositionPercent(Edge.LEFT, this._positionLeftValue);\n        break;\n      case Unit.PIXEL:\n        this._yogaNode.setPosition(Edge.LEFT, this._positionLeftValue);\n        break;\n      default:\n        break;\n    }\n    switch (this._positionRightUnit) {\n      case Unit.PERCENT:\n        this._yogaNode.setPositionPercent(Edge.RIGHT, this._positionRightValue);\n        break;\n      case Unit.PIXEL:\n        this._yogaNode.setPosition(Edge.RIGHT, this._positionRightValue);\n        break;\n      default:\n        break;\n    }\n    switch (this._widthUnit) {\n      case Unit.AUTO:\n        this._yogaNode.setWidthAuto();\n        break;\n      case Unit.PERCENT:\n        this._yogaNode.setWidthPercent(this._widthValue);\n        break;\n      case Unit.PIXEL:\n        this._yogaNode.setWidth(this._widthValue);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private _commitChildren() {\n    const actualChildrenCount = this._yogaNode.getChildCount();\n    const children = this.node.children\n      .map((child) => child.getComponent(UIElement))\n      .filter(\n        (element): element is UIElement =>\n          !!element && element.enabledInHierarchy && !element._hasCanvas && !element._isFloating,\n      );\n    if (\n      children.length === this._committedChildren.length &&\n      children.every((child, index) => child === this._committedChildren[index])\n    ) {\n      return;\n    }\n    for (let i = 0; i < Math.max(children.length, this._committedChildren.length); i++) {\n      const oldChild = this._committedChildren[i];\n      const correctChild = children[i];\n      if (oldChild !== correctChild) {\n        if (correctChild != null) {\n          this._yogaNode.removeChild(correctChild._yogaNode);\n          this._yogaNode.insertChild(correctChild._yogaNode, i);\n        } else if (i < actualChildrenCount) {\n          this._yogaNode.removeChild(this._yogaNode.getChild(i));\n        }\n      }\n    }\n    this._committedChildren = children;\n  }\n\n  private _notifyParent() {\n    this.node.parent?.getComponent(UIElement)?._commitChildren();\n  }\n\n  private _addEventListeners() {\n    director.on(Director.EVENT_AFTER_UPDATE, this.updateLayout, this);\n    this.node.on(Node.EventType.TRANSFORM_CHANGED, this._transformChanged, this);\n    this.node.on(Node.EventType.ANCHOR_CHANGED, this._markLayoutDirty, this);\n    this.node.on(Node.EventType.CHILD_ADDED, this._markLayoutDirty, this);\n    this.node.on(Node.EventType.CHILD_REMOVED, this._markLayoutDirty, this);\n    this.node.on(Node.EventType.PARENT_CHANGED, this._markLayoutDirty, this);\n    this.node.on(Node.EventType.SIBLING_ORDER_CHANGED, this._notifyParent, this);\n    if (this._hasCanvas) {\n      this.node.on(Node.EventType.SIZE_CHANGED, this._canvasSizeChanged, this);\n    }\n  }\n\n  private _removeEventListeners() {\n    director.off(Director.EVENT_AFTER_UPDATE, this.updateLayout, this);\n    this.node.off(Node.EventType.TRANSFORM_CHANGED, this._transformChanged, this);\n    this.node.off(Node.EventType.ANCHOR_CHANGED, this._markLayoutDirty, this);\n    this.node.off(Node.EventType.CHILD_ADDED, this._markLayoutDirty, this);\n    this.node.off(Node.EventType.CHILD_REMOVED, this._markLayoutDirty, this);\n    this.node.off(Node.EventType.PARENT_CHANGED, this._markLayoutDirty, this);\n    this.node.off(Node.EventType.SIBLING_ORDER_CHANGED, this._notifyParent, this);\n    if (this._hasCanvas) {\n      this.node.off(Node.EventType.SIZE_CHANGED, this._canvasSizeChanged, this);\n    }\n  }\n\n  private _transformChanged(type: number) {\n    if (!(type & Node.TransformBit.POSITION)) return;\n    this._markLayoutDirty();\n\n    // if (EDITOR) {\n    // }\n  }\n\n  private _canvasSizeChanged() {\n    const uiTransform = this.node._uiProps.uiTransformComp!;\n    this._heightUnit = Unit.PIXEL;\n    this._heightValue = uiTransform.height;\n    this._widthUnit = Unit.PIXEL;\n    this._widthValue = uiTransform.width;\n  }\n\n  private _markLayoutDirty() {\n    // if (!this._yogaNode.isDirty()) this._yogaNode.markDirty();\n    this._layoutDirty = true;\n  }\n\n  private _updateLayoutInternal() {\n    if (!this.enabledInHierarchy) return;\n    const uiTransform = this.node._uiProps.uiTransformComp;\n    if (uiTransform == null) {\n      error(\"Layout Update failed! UIElement needs a UITransform component attached!\");\n      return;\n    }\n\n    if (this._yogaNode.isDirty()) {\n      this._layoutDirty = true;\n      return;\n    }\n\n    info(`${this.node.name}: ${this._yogaNode.getComputedLayout().toString()}`);\n\n    // Yoga layout calculates from the top left in local coordinates.\n    const top = this._yogaNode.getComputedTop();\n    const left = this._yogaNode.getComputedLeft();\n    const height = this._yogaNode.getComputedHeight() ?? 0;\n    const width = this._yogaNode.getComputedWidth() ?? 0;\n    uiTransform.setContentSize(width, height);\n\n    const yogaParent = this._yogaNode.getParent();\n    if (yogaParent == null) {\n      // is root node -\n      if (!this._hasCanvas) this.node.position = v3(0, 0, 0);\n    } else {\n      // Cocos creator anchor of (0,0) corresponds to bottom left.\n      const anchorX = uiTransform.anchorX;\n      const anchorY = uiTransform.anchorY;\n\n      const parentUiTransform = this.node.parent?._uiProps.uiTransformComp;\n      if (parentUiTransform == null) {\n        error(\"Layout Update failed! Parent UIElement does not have a UITransform attached.\");\n        return;\n      }\n\n      // Get the top left corner of parent in parent's (local) space.\n      const parentLeft = -parentUiTransform.width * parentUiTransform.anchorX;\n      const parentTop = parentUiTransform.height * (1 - parentUiTransform.anchorY);\n      // Get the top left corner of current node using the parent's top left and the calculated\n      // top and left values from Yoga.\n      const localLeft = parentLeft + left;\n      const localTop = parentTop - top; // +ve y is bottom to top.\n      // Calculate the node position\n      this.node.position = v3(localLeft + anchorX * width, localTop - (1 - anchorY) * height, 0);\n    }\n\n    this._layoutDirty = false;\n\n    // Propagate to all children.\n    this.node.children\n      .map((child) => child.getComponent(UIElement))\n      .forEach((uiElement) => uiElement?._updateLayoutInternal());\n  }\n}\n"]}