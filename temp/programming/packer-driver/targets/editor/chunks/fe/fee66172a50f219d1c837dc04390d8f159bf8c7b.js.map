{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/extensions/as_framework/framework/assets/scripts/UIDrag.ts"],"names":["Component","EventHandler","Intersection2D","Mat4","Node","PolygonCollider2D","rect","UITransform","v2","v3","Vec2","Vec3","_decorator","AS","error","UIDrop","findParentCanvas","ccclass","property","disallowMultiple","requireComponent","matrixCached","worldMatrixCached","UIDrag","type","tooltip","displayOrder","_thisUITransform","_targetPosition","_previousTargetPosition","_validUIDrop","_resetPosition","_lerpTime","_parentCanvas","_canvasCamera","_collider","_isBeginValid","_actualParent","_isDragging","_isMoving","interactable","_interactable","dragSpeed","_dragSpeed","enableResetPosition","_enableResetPosition","target","_target","usePolygonCollider","_usePolygonCollider","targetPosition","targetWorldPosition","convertToWorldSpaceAR","resetScreenPoint","resetWorldPosition","validUIDrop","checkUIDrop","previousTargetPosition","isMoving","isDragging","value","_addInputListeners","_removeInputListeners","set","__removeDrag","convertToNodeSpaceAR","reset","forceSetPosition","resetDrop","_setTargetPositionInternal","worldPosition","node","_checkUIDropInternal","x","y","awake","getComponent","canvas","name","cameraComponent","currentPositionInBounds","onEnable","on","EventType","PARENT_CHANGED","_onParentChanged","onDisable","off","update","dt","currPosition","equals","emit","MOVE_COMPLETED","lerp","TOUCH_START","_onTouchStart","TOUCH_MOVE","_onTouchMove","TOUCH_END","_onTouchEnd","TOUCH_CANCEL","parent","NODE_DESTROYED","destroy","event","mouseWorld","screenToWorld","getLocationX","getLocationY","pointInPolygon","worldPoints","emitEvents","dragDidBeganEvents","DRAG_DID_BEGAN","_getTargetBounds","contains","enableSnap","dragDidEndedEvents","DRAG_DID_END","touchLocation","enabledInHierarchy","oldUIDrop","getComponentsInChildren","find","uiDrop","__isInside","boundsType","BoundsType","CIRCLE","radius","circleRadius","center","dragBounds","getBoundingBoxToWorld","distances","distance","xMin","yMin","yMax","xMax","some","curr","__addDrag","position","dragMoveEvents","DRAG_MOVE","fromRTS","getRotation","getPosition","getScale","width","contentSize","height","localRect","anchorPoint","getWorldMatrix","multiply","transformMat4","Array"],"mappings":"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","sourcesContent":["import {\n  Camera,\n  Component,\n  EventHandler,\n  EventTouch,\n  Intersection2D,\n  Mat4,\n  Node,\n  PolygonCollider2D,\n  rect,\n  UITransform,\n  v2,\n  v3,\n  Vec2,\n  Vec3,\n  _decorator,\n} from \"cc\";\nimport { AS } from \"./ASComponent\";\nimport { error } from \"./Logger\";\nimport { UIDrop } from \"./UIDrop\";\nimport { findParentCanvas } from \"./Utils\";\n\nconst { ccclass, property, disallowMultiple, requireComponent } = _decorator;\n\nconst matrixCached = new Mat4();\nconst worldMatrixCached = new Mat4();\n\n@ccclass(\"UIDrag\")\n@disallowMultiple\n@requireComponent(UITransform)\nexport class UIDrag extends AS(Component) {\n  static readonly EventType = {\n    DRAG_DID_BEGAN: \"drag-did-began\",\n    DRAG_DID_END: \"drag-did-ended\",\n    DRAG_MOVE: \"drag-move\",\n    MOVE_COMPLETED: \"move-completed\",\n  };\n\n  @property({\n    type: [EventHandler],\n    tooltip: \"The event handler to be triggered when drag begins.\",\n    displayOrder: 30,\n  })\n  dragDidBeganEvents = new Array<EventHandler>();\n\n  @property({\n    type: [EventHandler],\n    tooltip: \"The event handler to be triggered when drag ends.\",\n    displayOrder: 31,\n  })\n  dragDidEndedEvents = new Array<EventHandler>();\n\n  @property({\n    type: [EventHandler],\n    tooltip: \"The event handler to be triggered when drag target position changes.\",\n    displayOrder: 32,\n  })\n  dragMoveEvents = new Array<EventHandler>();\n\n  @property private _target: UITransform | null = null;\n\n  @property private _enableResetPosition = true;\n\n  @property private _usePolygonCollider = false;\n\n  @property private _interactable = true;\n\n  @property private _dragSpeed = 100;\n\n  private _thisUITransform: UITransform | null = null;\n\n  private _targetPosition: Vec3 = v3();\n\n  private _previousTargetPosition: Vec3 = v3();\n\n  private _validUIDrop: UIDrop | null | undefined = null;\n\n  private _resetPosition: Vec3 = v3();\n\n  private _lerpTime = 0;\n\n  private _parentCanvas: UITransform | null = null;\n\n  private _canvasCamera: Camera | null = null;\n\n  private _collider: PolygonCollider2D | null = null;\n\n  private _isBeginValid = false;\n\n  private _actualParent: Node | null = null;\n\n  private _isDragging = false;\n\n  private _isMoving = false;\n\n  @property get interactable() {\n    return this._interactable;\n  }\n\n  @property get dragSpeed() {\n    return this._dragSpeed;\n  }\n\n  @property({ tooltip: \"Enable to reset position on mouse up if not inside a UIDrop.\" })\n  get enableResetPosition() {\n    return this._enableResetPosition;\n  }\n\n  @property({\n    type: UITransform,\n    tooltip:\n      \"The node to use as area for dragging. This drag will be limited to the bounds of the \" +\n      \"target node. NOTE: Do not use a parent (or grandparents) of this drag as target!\",\n  })\n  get target(): UITransform | null {\n    return this._target;\n  }\n\n  @property get usePolygonCollider() {\n    return this._usePolygonCollider;\n  }\n\n  get targetPosition() {\n    return this._targetPosition;\n  }\n\n  get targetWorldPosition() {\n    return this._parentCanvas!.convertToWorldSpaceAR(this._targetPosition);\n  }\n\n  get resetScreenPoint() {\n    return this._resetPosition;\n  }\n\n  get resetWorldPosition() {\n    return this._parentCanvas!.convertToWorldSpaceAR(this._resetPosition);\n  }\n\n  get validUIDrop() {\n    return this.checkUIDrop();\n  }\n\n  get previousTargetPosition() {\n    return this._previousTargetPosition;\n  }\n\n  get isMoving() {\n    return this._isMoving;\n  }\n\n  get isDragging() {\n    return this._isDragging;\n  }\n\n  set interactable(value) {\n    if (this._interactable === value) return;\n    this._interactable = value;\n\n    if (this._interactable) this._addInputListeners();\n    else this._removeInputListeners();\n  }\n\n  set dragSpeed(value: number) {\n    this._dragSpeed = value;\n  }\n\n  set enableResetPosition(value) {\n    this._enableResetPosition = value;\n  }\n\n  set target(value: UITransform | null) {\n    this._target = value;\n  }\n\n  set usePolygonCollider(value) {\n    this._usePolygonCollider = value;\n  }\n\n  set targetPosition(value: Vec3) {\n    this._lerpTime = 0;\n    this._previousTargetPosition.set(this._targetPosition);\n    this._targetPosition.set(value);\n\n    this._validUIDrop?.__removeDrag(this);\n    this._validUIDrop = null;\n  }\n\n  set targetWorldPosition(value) {\n    this._targetPosition = this._parentCanvas!.convertToNodeSpaceAR(value);\n  }\n\n  set resetScreenPoint(value: Vec3) {\n    this._resetPosition.set(value);\n  }\n\n  set resetWorldPosition(value) {\n    this._resetPosition = this._parentCanvas!.convertToNodeSpaceAR(value);\n  }\n\n  reset() {\n    if (this._resetPosition) {\n      this.forceSetPosition(this._parentCanvas!.convertToWorldSpaceAR(this._resetPosition));\n    }\n\n    this._validUIDrop?.__removeDrag(this);\n    this._validUIDrop = null;\n  }\n\n  resetDrop() {\n    this._validUIDrop?.__removeDrag(this);\n    this._validUIDrop = null;\n    if (this._resetPosition) {\n      this._setTargetPositionInternal(this._resetPosition);\n    }\n  }\n\n  forceSetPosition(worldPosition: Vec3) {\n    if (worldPosition == null) return;\n    this.targetPosition = this._parentCanvas!.convertToNodeSpaceAR(worldPosition);\n    this.node.worldPosition = worldPosition;\n    this._validUIDrop?.__removeDrag(this);\n    this._validUIDrop = null;\n  }\n\n  checkUIDrop() {\n    const targetWorldPosition = this._parentCanvas!.convertToWorldSpaceAR(this._targetPosition);\n    this._checkUIDropInternal(v2(targetWorldPosition.x, targetWorldPosition.y));\n\n    // If valid UI Drop doesn't allow multiple drag's in them, reset.\n    return this._validUIDrop;\n  }\n\n  awake() {\n    this._thisUITransform = this.getComponent(UITransform);\n\n    const canvas = findParentCanvas(this.node);\n    if (canvas == null) {\n      error(`UIDrag: ${this.node.name} has no canvas parent.`);\n      return;\n    }\n\n    this._canvasCamera = canvas.cameraComponent;\n    this._parentCanvas = canvas.getComponent(UITransform);\n    if (this.target == null) {\n      this.target = this._parentCanvas;\n    }\n    this._collider = this.getComponent(PolygonCollider2D);\n\n    const currentPositionInBounds = this._parentCanvas!.convertToNodeSpaceAR(\n      this.node.worldPosition,\n    );\n    this.resetScreenPoint = this.targetPosition = currentPositionInBounds;\n    this._previousTargetPosition.set(currentPositionInBounds);\n  }\n\n  onEnable() {\n    if (this._interactable) this._addInputListeners();\n    this.node.on(Node.EventType.PARENT_CHANGED, this._onParentChanged, this);\n    this._onParentChanged();\n  }\n\n  onDisable() {\n    this._removeInputListeners();\n    this.node.off(Node.EventType.PARENT_CHANGED, this._onParentChanged, this);\n  }\n\n  update(dt: number) {\n    let currPosition = this._parentCanvas!.convertToNodeSpaceAR(this.node.worldPosition);\n    if (Vec3.equals(currPosition, this._targetPosition)) {\n      if (this._isMoving) {\n        this.node.emit(UIDrag.EventType.MOVE_COMPLETED, this);\n        this._isMoving = false;\n      }\n      return;\n    }\n    this._lerpTime += this.dragSpeed * dt;\n    if (this._lerpTime > 1) this._lerpTime = 1;\n    currPosition = currPosition.lerp(this._targetPosition, this._lerpTime);\n    this.node.worldPosition = this._parentCanvas!.convertToWorldSpaceAR(currPosition);\n    this._isMoving = true;\n  }\n\n  private _addInputListeners() {\n    this.node.on(Node.EventType.TOUCH_START, this._onTouchStart, this);\n    this.node.on(Node.EventType.TOUCH_MOVE, this._onTouchMove, this);\n    this.node.on(Node.EventType.TOUCH_END, this._onTouchEnd, this);\n    this.node.on(Node.EventType.TOUCH_CANCEL, this._onTouchEnd, this);\n  }\n\n  private _removeInputListeners() {\n    this.node.off(Node.EventType.TOUCH_START, this._onTouchStart, this);\n    this.node.off(Node.EventType.TOUCH_MOVE, this._onTouchMove, this);\n    this.node.off(Node.EventType.TOUCH_END, this._onTouchEnd, this);\n    this.node.off(Node.EventType.TOUCH_CANCEL, this._onTouchEnd, this);\n  }\n\n  private _onParentChanged() {\n    if (this._isDragging || this._actualParent === this.node.parent) return;\n    this._actualParent?.off(Node.EventType.NODE_DESTROYED, this.node.destroy, this);\n    this._actualParent = this.node.parent;\n    // Ensure this is also destroyed when parent is destroyed.\n    this._actualParent?.on(Node.EventType.NODE_DESTROYED, this.node.destroy, this);\n  }\n\n  private _onTouchStart(event: EventTouch) {\n    if (this._canvasCamera == null || this._parentCanvas == null) return;\n    const mouseWorld = this._canvasCamera.screenToWorld(\n      v3(event.getLocationX(), event.getLocationY()),\n    );\n    if (this._usePolygonCollider && this._collider) {\n      this._isBeginValid = Intersection2D.pointInPolygon(\n        v2(mouseWorld.x, mouseWorld.y),\n        this._collider.worldPoints,\n      );\n    } else {\n      this._isBeginValid = true;\n    }\n\n    this._isDragging = true;\n    this.node.parent = this._parentCanvas.node;\n    EventHandler.emitEvents(this.dragDidBeganEvents, this);\n    this.node.emit(UIDrag.EventType.DRAG_DID_BEGAN, this);\n  }\n\n  private _onTouchMove(event: EventTouch) {\n    if (this._canvasCamera == null || !this._isBeginValid) return;\n    // Convert mouse location from screen to world coords.\n    const mouseWorld = this._canvasCamera.screenToWorld(\n      v3(event.getLocationX(), event.getLocationY()),\n    );\n\n    // If outside target stop move.\n    if (!this._getTargetBounds().contains(v2(mouseWorld.x, mouseWorld.y))) {\n      return;\n    }\n\n    this._setTargetPositionInternal(this._parentCanvas!.convertToNodeSpaceAR(mouseWorld));\n  }\n\n  private _onTouchEnd(event: EventTouch) {\n    if (!this._isBeginValid) return;\n    if (this._canvasCamera != null) {\n      // Convert mouse location from screen to world coords.\n      const mouseWorld = this._canvasCamera.screenToWorld(\n        v3(event.getLocationX(), event.getLocationY()),\n      );\n\n      // Check to see if inside any valid uidrop under target.\n      this._checkUIDropInternal(v2(mouseWorld.x, mouseWorld.y));\n    }\n\n    if (this._validUIDrop != null && this._validUIDrop.enableSnap) {\n      this._setTargetPositionInternal(\n        this._parentCanvas!.convertToNodeSpaceAR(this._validUIDrop.node.worldPosition),\n      );\n    }\n\n    if (this.enableResetPosition && this._validUIDrop == null) {\n      this._setTargetPositionInternal(this._resetPosition);\n    }\n\n    this.node.parent = this._actualParent;\n    this._isDragging = false;\n    EventHandler.emitEvents(this.dragDidEndedEvents, this);\n    this.node.emit(UIDrag.EventType.DRAG_DID_END, this);\n  }\n\n  private _checkUIDropInternal(touchLocation: Vec2) {\n    if (!this._parentCanvas || !this.enabledInHierarchy) return;\n    const oldUIDrop = this._validUIDrop;\n    this._validUIDrop = this._parentCanvas\n      .getComponentsInChildren(UIDrop)\n      .find((uiDrop: UIDrop) => uiDrop.enabledInHierarchy && uiDrop.__isInside(touchLocation));\n\n    // Check and see if valid if drop is circle type.\n    if (\n      this._thisUITransform &&\n      this._validUIDrop &&\n      this._validUIDrop.boundsType === UIDrop.BoundsType.CIRCLE\n    ) {\n      const radius = this._validUIDrop.circleRadius;\n      const center = this._validUIDrop.node.worldPosition;\n      const dragBounds = this._thisUITransform.getBoundingBoxToWorld();\n\n      const distances = [\n        Vec2.distance(v2(center.x, center.y), v2(dragBounds.xMin, dragBounds.yMin)),\n        Vec2.distance(v2(center.x, center.y), v2(dragBounds.xMin, dragBounds.yMax)),\n        Vec2.distance(v2(center.x, center.y), v2(dragBounds.xMax, dragBounds.yMin)),\n        Vec2.distance(v2(center.x, center.y), v2(dragBounds.xMax, dragBounds.yMax)),\n      ];\n\n      if (distances.some((curr) => curr >= radius)) {\n        // If any corner outside the circle radius set as invalid.\n        this._validUIDrop = null;\n      }\n    }\n\n    if (oldUIDrop !== this._validUIDrop) {\n      oldUIDrop?.__removeDrag(this);\n      if (!this._validUIDrop?.__addDrag(this)) this._validUIDrop = null;\n    }\n  }\n\n  private _setTargetPositionInternal(position: Vec3) {\n    this._previousTargetPosition.set(this._targetPosition);\n    this._targetPosition.set(position);\n    this._lerpTime = 0;\n    EventHandler.emitEvents(this.dragMoveEvents, this);\n    this.node.emit(UIDrag.EventType.DRAG_MOVE, this);\n  }\n\n  private _getTargetBounds() {\n    if (this.target == null) return rect();\n    Mat4.fromRTS(\n      matrixCached,\n      this.target.node.getRotation(),\n      this.target.node.getPosition(),\n      this.target.node.getScale(),\n    );\n    const width = this.target.contentSize.width;\n    const height = this.target.contentSize.height;\n    const localRect = rect(\n      -this.target.anchorPoint.x * width,\n      -this.target.anchorPoint.y * height,\n      width,\n      height,\n    );\n    this.target.node.parent?.getWorldMatrix(worldMatrixCached);\n    Mat4.multiply(worldMatrixCached, worldMatrixCached, matrixCached);\n    return localRect.transformMat4(worldMatrixCached);\n  }\n}\n"]}