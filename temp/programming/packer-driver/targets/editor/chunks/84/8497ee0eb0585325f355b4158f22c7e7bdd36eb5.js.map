{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/extensions/as_framework/framework/assets/scripts/MatchTheFollowing.ts"],"names":["Component","Graphics","Node","_decorator","error","warn","UIDrag","UIDrop","ccclass","property","requireComponent","MatchTheFollowing","_tempGfx","onLoad","_gfx","getComponent","lineDragHandles","length","dropSlots","forEach","drop","behaviour","DropBehaviour","ALLOW_SINGLE","drag","node","on","EventType","DRAG_MOVE","_onDragMove","DRAG_DID_END","_updateDraw","temp","addChild","layer","addComponent","lineCap","lineJoin","lineWidth","strokeColor","checkPairs","index","validUIDrop","reset","clear","filter","xForm","_uiProps","uiTransformComp","localStart","convertToNodeSpaceAR","resetScreenPoint","localEnd","targetPosition","moveTo","x","y","lineTo","stroke"],"mappings":"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","sourcesContent":["import { Component, Graphics, Node, _decorator } from \"cc\";\nimport { error, warn } from \"./Logger\";\nimport { UIDrag } from \"./UIDrag\";\nimport { UIDrop } from \"./UIDrop\";\nconst { ccclass, property, requireComponent } = _decorator;\n\n// enum MatchType {\n//   ONE_TO_ONE,\n//   ONE_TO_MANY,\n//   MANY_TO_ONE,\n//   MANY_TO_MANY,\n// }\n\n@ccclass(\"MatchTheFollowing\")\n@requireComponent(Graphics)\nexport class MatchTheFollowing extends Component {\n  @property(UIDrag) lineDragHandles: UIDrag[] = [];\n\n  @property(UIDrop) dropSlots: UIDrop[] = [];\n\n  @property\n  private _gfx: Graphics | null = null;\n\n  private _tempGfx: Graphics | null = null;\n\n  onLoad() {\n    this._gfx = this.getComponent(Graphics);\n\n    if (this._gfx === null) {\n      error(\"MatchTheFollowing: Graphics component is null.\");\n      return;\n    }\n\n    if (this.lineDragHandles.length !== this.dropSlots.length) {\n      error(\"MatchTheFollowing: The drag handles count is not same as the slots count.\");\n      return;\n    }\n\n    this.dropSlots.forEach((drop) => (drop.behaviour = UIDrop.DropBehaviour.ALLOW_SINGLE));\n\n    this.lineDragHandles.forEach((drag) => {\n      drag.node.on(UIDrag.EventType.DRAG_MOVE, this._onDragMove, this);\n      drag.node.on(UIDrag.EventType.DRAG_DID_END, this._updateDraw, this);\n    });\n\n    const temp = new Node(\"TempDraw\");\n    this.node.addChild(temp);\n    temp.layer = this.node.layer;\n    this._tempGfx = temp.addComponent(Graphics);\n    this._tempGfx.lineCap = this._gfx.lineCap;\n    this._tempGfx.lineJoin = this._gfx.lineJoin;\n    this._tempGfx.lineWidth = this._gfx.lineWidth;\n    this._tempGfx.strokeColor = this._gfx.strokeColor;\n  }\n\n  checkPairs() {\n    if (this.lineDragHandles.length !== this.dropSlots.length) {\n      warn(\"The drag handles count is not same as the slots count.\");\n      return false;\n    }\n\n    for (let index = 0; index < this.lineDragHandles.length; index++) {\n      const drag = this.lineDragHandles[index];\n      if (drag.validUIDrop !== this.dropSlots[index]) return false;\n    }\n\n    return true;\n  }\n\n  reset() {\n    this.lineDragHandles.forEach((drag) => drag.reset());\n    this._gfx?.clear();\n    this._tempGfx?.clear();\n  }\n\n  private _updateDraw() {\n    this._gfx!.clear();\n    this._tempGfx!.clear();\n    this.lineDragHandles\n      .filter((drag) => drag.validUIDrop)\n      .forEach((drag) => {\n        const xForm = this.node._uiProps.uiTransformComp!;\n        const localStart = xForm.convertToNodeSpaceAR(drag.resetScreenPoint);\n        const localEnd = xForm.convertToNodeSpaceAR(drag.targetPosition);\n\n        this._gfx!.moveTo(localStart.x, localStart.y);\n        this._gfx!.lineTo(localEnd.x, localEnd.y);\n        this._gfx!.stroke();\n      });\n  }\n\n  private _onDragMove(drag: UIDrag) {\n    const xForm = this.node._uiProps.uiTransformComp!;\n    const localStart = xForm.convertToNodeSpaceAR(drag.resetScreenPoint);\n    const localEnd = xForm.convertToNodeSpaceAR(drag.targetPosition);\n\n    this._updateDraw();\n\n    this._tempGfx!.clear();\n    this._tempGfx!.moveTo(localStart.x, localStart.y);\n    this._tempGfx!.lineTo(localEnd.x, localEnd.y);\n    this._tempGfx!.stroke();\n  }\n}\n"]}