{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/assets/Audio/Audio.ts"],"names":["_decorator","Component","Button","AudioSourceComponent","Node","AS","ReplicatedButton","ccclass","property","Audio","awake","button","addComponent","_addEventListeners","node","on","EventType","CLICK","_onButtonClick","audioSrc","getComponent","stop","play","audioclip","clip"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,oB,OAAAA,oB;AAAsBC,MAAAA,I,OAAAA,I;;AACrDC,MAAAA,E,iBAAAA,E;;AACAC,MAAAA,gB,iBAAAA,gB;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;uBAGjBS,K,WADZF,OAAO,CAAC,OAAD,C,UAEHC,QAAQ,CAACN,MAAD,C,UACRM,QAAQ,CAACJ,IAAD,C,2BAHb,MACaK,KADb,SAC2B;AAAA;AAAA,oBAAGR,SAAH,CAD3B,CACyC;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAKrCS,QAAAA,KAAK,GAAE;AACH,eAAKC,MAAL,CAAYC,YAAZ;AAAA;AAAA;;AACA,eAAKC,kBAAL;AAEH;;AACOA,QAAAA,kBAAkB,GAAG;AACzB,eAAKF,MAAL,CAAYG,IAAZ,CAAiBC,EAAjB,CAAoBb,MAAM,CAACc,SAAP,CAAiBC,KAArC,EAA4C,KAAKC,cAAjD,EAAiE,IAAjE;AACH;;AACOA,QAAAA,cAAc,GAAG;AACrB,eAAKC,QAAL,CAAcC,YAAd,CAA2BjB,oBAA3B,EAAiDkB,IAAjD;AACA,eAAKF,QAAL,CAAcC,YAAd,CAA2BjB,oBAA3B,EAAiDmB,IAAjD;AACH;;AAEY,YAATC,SAAS,GAAE;AACX,iBAAO,KAAKJ,QAAL,CAAcC,YAAd,CAA2BjB,oBAA3B,EAAiDqB,IAAxD;AACH;;AAEY,YAATD,SAAS,CAACC,IAAD,EAAM;AACf,eAAKL,QAAL,CAAcC,YAAd,CAA2BjB,oBAA3B,EAAiDqB,IAAjD,GAAwDA,IAAxD;AACH;;AAxBoC,O;;;;;iBACK,I;;;;;;;iBACF,I","sourcesContent":["import { _decorator, Component, Button, AudioSourceComponent, Node} from 'cc';\nimport { AS } from \"db://as_framework/scripts/ASComponent\";\nimport { ReplicatedButton } from \"db://as_framework/scripts/ReplicatedButton\";\nconst { ccclass, property } = _decorator;\n\n@ccclass('Audio')\nexport class Audio extends AS(Component) {\n    @property(Button) button: Button | null = null;\n    @property(Node) audioSrc: Node | null = null;\n\n\n    awake(){\n        this.button.addComponent(ReplicatedButton);\n        this._addEventListeners();\n\n    }\n    private _addEventListeners() {\n        this.button.node.on(Button.EventType.CLICK, this._onButtonClick, this);\n    }\n    private _onButtonClick() {        \n        this.audioSrc.getComponent(AudioSourceComponent).stop();\n        this.audioSrc.getComponent(AudioSourceComponent).play();\n    }\n    \n    get audioclip(){\n        return this.audioSrc.getComponent(AudioSourceComponent).clip;\n    }\n\n    set audioclip(clip){\n        this.audioSrc.getComponent(AudioSourceComponent).clip = clip;\n    }\n\n}\n\n"]}