{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/assets/TapPop/AppletController.ts"],"names":["Button","Component","Node","_decorator","AS","ccclass","property","AppletController","q","awake","_updateVisibility","next","node","on","EventType","CLICK","_next","back","_back","Screens","active","length"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,M,OAAAA,M;AAAQC,MAAAA,S,OAAAA,S;AAAmCC,MAAAA,I,OAAAA,I;AAAYC,MAAAA,U,OAAAA,U;;AACvDC,MAAAA,E,iBAAAA,E;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;;kCAGjBI,gB,WADZF,OAAO,CAAC,kBAAD,C,UAGHC,QAAQ,CAACJ,IAAD,C,UACRI,QAAQ,CAACN,MAAD,C,UACRM,QAAQ,CAACN,MAAD,C,2BALb,MACaO,gBADb,SACsC;AAAA;AAAA,oBAAGN,SAAH,CADtC,CACoD;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAMxCO,CANwC,GAMpC,CANoC;AAAA;;AAQhDC,QAAAA,KAAK,GAAG;AAGJ,eAAKC,iBAAL;;AAEA,eAAKC,IAAL,CAAUC,IAAV,CAAeC,EAAf,CAAkBb,MAAM,CAACc,SAAP,CAAiBC,KAAnC,EAA0C,KAAKC,KAA/C,EAAsD,IAAtD;AACA,eAAKC,IAAL,CAAUL,IAAV,CAAeC,EAAf,CAAkBb,MAAM,CAACc,SAAP,CAAiBC,KAAnC,EAA0C,KAAKG,KAA/C,EAAsD,IAAtD;AAEH;;AAEOF,QAAAA,KAAK,GACb;AACI,eAAKG,OAAL,CAAa,KAAKX,CAAlB,EAAqBY,MAArB,GAA8B,KAA9B;AACA,eAAKZ,CAAL;;AACA,eAAKE,iBAAL;AAEH;;AACOQ,QAAAA,KAAK,GACb;AACI,eAAKC,OAAL,CAAa,KAAKX,CAAlB,EAAqBY,MAArB,GAA8B,KAA9B;AACA,eAAKZ,CAAL;;AACA,eAAKE,iBAAL;AACH;;AACOA,QAAAA,iBAAiB,GACzB;AACI,eAAKS,OAAL,CAAa,KAAKX,CAAlB,EAAqBY,MAArB,GAA8B,IAA9B;AACA,cAAG,KAAKZ,CAAL,IAAU,CAAb,EACI,KAAKS,IAAL,CAAUL,IAAV,CAAeQ,MAAf,GAAwB,KAAxB,CADJ,KAGI,KAAKH,IAAL,CAAUL,IAAV,CAAeQ,MAAf,GAAwB,IAAxB;AACJ,cAAG,KAAKZ,CAAL,IAAU,KAAKW,OAAL,CAAaE,MAAb,GAAqB,CAAlC,EACI,KAAKV,IAAL,CAAUC,IAAV,CAAeQ,MAAf,GAAwB,KAAxB,CADJ,KAGI,KAAKT,IAAL,CAAUC,IAAV,CAAeQ,MAAf,GAAwB,IAAxB;AAEP;;AA3C+C,O;;;;;iBAEN,E;;;;;;;iBACD,I;;;;;;;iBACA,I","sourcesContent":["import { Button, Component,ProgressBar,AudioSource, Node,tween, _decorator, Intersection2D, PolygonCollider2D, UITransform } from \"cc\";\nimport { AS } from \"db://as_framework/scripts//ASComponent\";\nconst { ccclass, property } = _decorator;\n\n@ccclass('AppletController')\nexport class AppletController extends AS(Component) {\n\n    @property(Node) Screens:  Node[] | null = [];\n    @property(Button) next : Button | null = null;\n    @property(Button) back : Button | null = null;\n\n    private q = 0;\n\n    awake() {\n\n       \n        this._updateVisibility()\n\n        this.next.node.on(Button.EventType.CLICK, this._next, this)\n        this.back.node.on(Button.EventType.CLICK, this._back, this)\n\n    }\n\n    private _next()\n    {\n        this.Screens[this.q].active = false;\n        this.q++;\n        this._updateVisibility()\n\n    }\n    private _back()\n    {\n        this.Screens[this.q].active = false;\n        this.q--;\n        this._updateVisibility()\n    }\n    private _updateVisibility()\n    {   \n        this.Screens[this.q].active = true;\n        if(this.q == 0)\n            this.back.node.active = false;\n        else\n            this.back.node.active = true;\n        if(this.q == this.Screens.length -1)\n            this.next.node.active = false;\n        else\n            this.next.node.active = true;\n\n    }\n   \n}\n\n"]}