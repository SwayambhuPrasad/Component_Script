{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/assets/MCQ/script/MCQ.ts"],"names":["Button","Component","find","instantiate","Label","Layout","Prefab","_decorator","AS","UIView","ReplicatedButton","UIAnimationLibrary","debug","ChangeBackground","ValidationEvent","CheckPrompt","ccclass","property","requireComponent","AnswerType","MCQ","type","Number","String","Boolean","backGround","_selection","Array","store","awake","on","_setNavStatus","bind","createRuntimeOption","insertChild","insertButtonsComp","optionsContainer","node","children","choiceButtons","map","child","btn","addComponent","EventType","CLICK","checkSelection","forEach","i","push","SingleAns","active","getComponent","ButtonClick","play","lableAssigner","onEnable","_navButtonVisibility","screen","ScreenTag","console","log","_callToVisible","Screen","optionLabel","length","addchild","optionPrefab","parent","isCorrect","reduce","check","isSelected","answer","checkFeedback","getComponentInChildren","showCorrect","showTryAgain","ev","dispatchEvent","mcqLable","getComponentsInChildren","btnLable","string","statusIndex","Promise","all","status","flash"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,M,OAAAA,M;AAAgBC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,U,OAAAA,U;;AACrEC,MAAAA,E,iBAAAA,E;AAAIC,MAAAA,M,iBAAAA,M;;AACJC,MAAAA,gB,iBAAAA,gB;;AACAC,MAAAA,kB,iBAAAA,kB;;AACAC,MAAAA,K,iBAAAA,K;;AACAC,MAAAA,gB,iBAAAA,gB;;AACAC,MAAAA,e,iBAAAA,e;;AACAC,MAAAA,W,iBAAAA,W;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,QAAX;AAAqBC,QAAAA;AAArB,O,GAA0CX,U;;iBAE3CY,U;AAAAA,QAAAA,U,CAAAA,U;AAAAA,QAAAA,U,CAAAA,U;SAAAA,U,KAAAA,U;;qBAMQC,G,WADZJ,OAAO,CAAC,KAAD,C,UAKLC,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAACC;AAAN,OAAD,C,UAERL,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEE;AAAR,OAAD,C,UAERN,QAAQ,CAACX,MAAD,C,UAIRW,QAAQ,CAACZ,MAAD,C,UAORY,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEG;AAAR,OAAD,C,UAERP,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEG;AAAR,OAAD,C,2BAtBX,MACaJ,GADb,SACyB;AAAA;AAAA,oBAAGnB,SAAH,CADzB,CACuC;AAAA;AAAA;AAAA,eAE7BwB,UAF6B,GAEV,IAFU;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAiB7BC,UAjB6B,GAiBhBC,KAAK,EAjBW;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eA2B7BC,KA3B6B,GA2BvB,CAAC,CA3BsB;AAAA;;AA8BrC;AAEAC,QAAAA,KAAK,GAAG;AACL,eAAKJ,UAAL,GAAiBvB,IAAI,CAAC,uBAAD,CAArB;AACD,eAAKuB,UAAL,CAAgBK,EAAhB,CAAmB,QAAnB,EAA4B,KAAKC,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAA5B,EAFM,CAIN;AACA;;AAEA,cAAG,KAAKC,mBAAR,EAA4B,KAAKC,WAAL;AAE5B,gBAAMC,iBAAiB,GAAG,KAAKC,gBAAL,CAAsBC,IAAtB,CAA2BC,QAArD;AAEA,gBAAMC,aAAa,GAAGJ,iBAAiB,CAACK,GAAlB,CAAuBC,KAAD,IAAW;AACrD,kBAAMC,GAAG,GAAGD,KAAK,CAACE,YAAN,CAAmB3C,MAAnB,CAAZ;AACAyC,YAAAA,KAAK,CAACE,YAAN;AAAA;AAAA;AACA,mBAAOD,GAAP;AACD,WAJqB,CAAtB;AAKA,eAAKL,IAAL,CAAUC,QAAV,CAAmB,CAAnB,EAAsBK,YAAtB,CAAmC3C,MAAnC;AACA,eAAKqC,IAAL,CAAUC,QAAV,CAAmB,CAAnB,EAAsBK,YAAtB;AAAA;AAAA;AACA,eAAKN,IAAL,CAAUC,QAAV,CAAmB,CAAnB,EAAsBK,YAAtB;AAAA;AAAA;AACA,eAAKN,IAAL,CAAUC,QAAV,CAAmB,CAAnB,EAAsBR,EAAtB,CAAyB9B,MAAM,CAAC4C,SAAP,CAAiBC,KAA1C,EAAiD,MAAM;AACrD,iBAAKC,cAAL;AACD,WAFD;AAGAP,UAAAA,aAAa,CAACQ,OAAd,CAAsB,CAACL,GAAD,EAAMM,CAAN,KAAY;AAChC,iBAAKtB,UAAL,CAAgBuB,IAAhB,CAAqB,KAArB;;AAEAP,YAAAA,GAAG,CAACL,IAAJ,CAASP,EAAT,CAAY9B,MAAM,CAAC4C,SAAP,CAAiBC,KAA7B,EAAoC,YAAY;AAC9C,kBAAG,KAAKK,SAAR,EACA,IAAG,KAAKtB,KAAL,IAAY,CAAC,CAAhB,EACA;AACEW,gBAAAA,aAAa,CAAC,KAAKX,KAAN,CAAb,CAA0BS,IAA1B,CAA+BC,QAA/B,CAAwC,CAAxC,EAA2Ca,MAA3C,GAAoD,KAApD;AACA,qBAAKzB,UAAL,CAAgB,KAAKE,KAArB,IAA8B,KAA9B;AACD;AACD,mBAAKA,KAAL,GAAWoB,CAAX;AACA,mBAAKvB,UAAL,CAAgB2B,YAAhB;AAAA;AAAA,wDAA+CC,WAA/C,CAA2DC,IAA3D;;AACA,kBAAI,KAAK5B,UAAL,CAAgBsB,CAAhB,MAAuB,KAA3B,EAAkC;AAChCN,gBAAAA,GAAG,CAACL,IAAJ,CAASC,QAAT,CAAkB,CAAlB,EAAqBa,MAArB,GAA8B,IAA9B;AACA,qBAAKzB,UAAL,CAAgBsB,CAAhB,IAAqB,IAArB;AACD,eAHD,MAGO;AACLN,gBAAAA,GAAG,CAACL,IAAJ,CAASC,QAAT,CAAkB,CAAlB,EAAqBa,MAArB,GAA8B,KAA9B;AACA,qBAAKzB,UAAL,CAAgBsB,CAAhB,IAAqB,KAArB;AACD;AACF,aAhBD;AAiBD,WApBD;AAqBA,eAAKO,aAAL;AAED;;AAEDC,QAAAA,QAAQ,GAAE;AACR,eAAK/B,UAAL,CAAgB2B,YAAhB;AAAA;AAAA,oDAA+CK,oBAA/C,CAAoE,KAApE,EAA0E,KAA1E,EAAgF,KAAhF;AACD,SAjFoC,CAkFrC;AACA;AACA;;;AAEA1B,QAAAA,aAAa,CAAC2B,MAAD,EAAQ;AACnB,cAAG,KAAKC,SAAL,IAAgBD,MAAnB,EAA0B;AACxBE,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBH,MAAlB;;AACA,iBAAKjC,UAAL,CAAgB2B,YAAhB;AAAA;AAAA,sDAA+CK,oBAA/C,CAAoE,KAApE,EAA0E,IAA1E,EAA+E,KAA/E;AACD;AACF;;AAIDK,QAAAA,cAAc,CAACC,MAAD,EAAQ;AACpB,cAAG,KAAKJ,SAAL,IAAkBI,MAArB,EAA6B,KAAK1B,IAAL,CAAUc,MAAV,GAAiB,IAAjB,CAA7B,KACK,IAAG,KAAKQ,SAAL,IAAgB,CAAC,CAApB,EAAuB,OAAvB,KACA,KAAKtB,IAAL,CAAUc,MAAV,GAAiB,KAAjB;AACN;;AAEDjB,QAAAA,WAAW,GAAG;AACZ,eAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKgB,WAAL,CAAiBC,MAArC,EAA6CjB,CAAC,EAA9C,EAAkD;AAChD,gBAAIkB,QAAQ,GAAG/D,WAAW,CAAC,KAAKgE,YAAN,CAA1B;AACAD,YAAAA,QAAQ,CAACE,MAAT,GAAkB,KAAKhC,gBAAL,CAAsBC,IAAxC;AACD;AACF;;AAEkB,cAAdS,cAAc,GAAG;AACtB,eAAKrB,UAAL,CAAgB2B,YAAhB;AAAA;AAAA,oDAA+CC,WAA/C,CAA2DC,IAA3D;;AACE,gBAAMe,SAAS,GAAG,KAAK3C,UAAL,CAAgB4C,MAAhB,CAAuB,CAACC,KAAD,EAAQC,UAAR,EAAoBxB,CAApB,KAA0B;AACjEuB,YAAAA,KAAK,KAALA,KAAK,GAAKC,UAAU,KAAK,KAAKC,MAAL,CAAYzB,CAAZ,CAApB,CAAL;AACA,mBAAOuB,KAAP;AACD,WAHiB,EAGf,IAHe,CAAlB;;AAKA,eAAKG,aAAL,CAAmBL,SAAS,GAAG,CAAH,GAAM,CAAlC;AACA,eAAKhC,IAAL,CAAUC,QAAV,CAAmB,CAAnB,EAAsBa,MAAtB,GAA6B,KAA7B;AACA,cAAGkB,SAAH,EACA,MAAM,KAAK5C,UAAL,CAAgBkD,sBAAhB;AAAA;AAAA,0CAAoDC,WAApD,EAAN,CADA,KAEK,MAAM,KAAKnD,UAAL,CAAgBkD,sBAAhB;AAAA;AAAA,0CAAoDE,YAApD,EAAN;AACL,eAAKxC,IAAL,CAAUC,QAAV,CAAmB,CAAnB,EAAsBa,MAAtB,GAA6B,IAA7B;AACA,gBAAM2B,EAAE,GAAG;AAAA;AAAA,kDAAoB,IAApB,EAA0BT,SAA1B,CAAX;AACA,eAAKhC,IAAL,CAAU0C,aAAV,CAAwBD,EAAxB;AACA;AAAA;AAAA,8BAAM,qBAAN,EAA6BA,EAA7B;AACD;;AAEDvB,QAAAA,aAAa,GAAG;AACd,gBAAMyB,QAAQ,GAAG,KAAK3C,IAAL,CAAU4C,uBAAV,CAAkC7E,KAAlC,CAAjB;AACA4E,UAAAA,QAAQ,CAACjC,OAAT,CAAiB,CAACmC,QAAD,EAAWlC,CAAX,KAAiB;AAChC,gBAAI,KAAKgB,WAAL,CAAiBC,MAAjB,IAA2BjB,CAA/B,EAAkC;AAChCkC,cAAAA,QAAQ,CAAC7C,IAAT,CAAc+B,MAAd,CAAqBjB,MAArB,GAA8B,KAA9B;AACD,aAFD,MAEO+B,QAAQ,CAACC,MAAT,GAAkB,KAAKnB,WAAL,CAAiBhB,CAAjB,CAAlB;AACR,WAJD;AAKD;;AAEkB,cAAb0B,aAAa,CAACU,WAAD,EAAc;AAC/B,gBAAM1C,GAAG,GAAG,KAAKN,gBAAL,CAAsBC,IAAtB,CAA2BC,QAAvC;AACA,gBAAM+C,OAAO,CAACC,GAAR,CACJ,KAAK5D,UAAL,CAAgBc,GAAhB,CAAoB,OAAO+C,MAAP,EAAevC,CAAf,KAAqB;AACvC,gBAAIuC,MAAJ,EAAY;AACV7C,cAAAA,GAAG,CAACM,CAAD,CAAH,CAAOV,QAAP,CAAgB8C,WAAhB,EAA6BjC,MAA7B,GAAsC,IAAtC;AACA,oBAAM;AAAA;AAAA,4DAAmBqC,KAAnB,CAAyB9C,GAAG,CAACM,CAAD,CAAH,CAAOV,QAAP,CAAgB8C,WAAhB,CAAzB,EAAuD,CAAvD,CAAN;AACA1C,cAAAA,GAAG,CAACM,CAAD,CAAH,CAAOV,QAAP,CAAgB8C,WAAhB,EAA6BjC,MAA7B,GAAsC,KAAtC;AACD;AACF,WAND,CADI,CAAN;AASD;;AAlJoC,O;;;;;iBAIQ,CAAC,C;;;;;;;iBAEc,E;;;;;;;iBAEX,I;;;;;;;iBAIW,I;;;;;;;iBAOb,E;;;;;;;iBAEY,I;;gGAE1DlC,Q;;;;;iBAAwC,I;;oFAExCA,Q;;;;;iBAA4B,I","sourcesContent":["import { Button, Canvas, Component, find, instantiate, Label, Layout, Prefab, _decorator,Node, EventHandler ,Event, SpriteFrame, bits} from \"cc\";\nimport { AS, UIView } from \"db://as_framework/scripts\";\nimport { ReplicatedButton } from \"db://as_framework/scripts\";\nimport { UIAnimationLibrary } from \"db://as_framework/scripts/UIAnimLibrary\";\nimport { debug } from \"db://as_framework/scripts\";\nimport { ChangeBackground } from \"../../ChangeBackground\";\nimport { ValidationEvent } from \"../../ValidationEvent\";\nimport { CheckPrompt } from \"../../../CheckPrompt\";\nconst { ccclass, property, requireComponent } = _decorator;\n\nenum AnswerType {\n  SINGLE_CORRECT,\n  MULTIPLE_CORRECT,\n}\n\n@ccclass(\"MCQ\")\nexport class MCQ extends AS(Component) {\n\n  private backGround: Node = null;\n\n  @property({type:Number}) ScreenTag: Number = -1;\n\n  @property({ type: String }) private optionLabel: string[] = [];\n\n  @property(Prefab) private optionPrefab: Prefab = null;\n\n  //@property(SpriteFrame) private optionSprite: SpriteFrame[] = [];\n\n  @property(Layout) private optionsContainer: Layout | null = null;\n\n  //@property({type: Enum(AnswerType)}) private answerType = AnswerType.SINGLE_CORRECT;\n\n  // @property({visible: function (this: MCQ) {return this.answerType === AnswerType.SINGLE_CORRECT}}) private x;\n  private _selection = Array<boolean>();\n\n  @property({ type: Boolean })  private answer = [];\n\n  @property({ type: Boolean }) private createRuntimeOption = true;\n\n  @property private changeColorAsFeedback= true;\n\n  @property private SingleAns= true;\n\n  private store=-1;\n\n\n  //private ChangeBackground;\n\n  awake() {\n     this.backGround= find(\"Canvas_new/BackGround\");\n    this.backGround.on(\"Screen\",this._setNavStatus.bind(this));\n\n    // const BackGround=new  ChangeBackground\n    // BackGround.node.on(\"Screen\",this._setNavStatus.bind(this,BackGround))\n\n    if(this.createRuntimeOption)this.insertChild();\n\n    const insertButtonsComp = this.optionsContainer.node.children;\n\n    const choiceButtons = insertButtonsComp.map((child) => {\n      const btn = child.addComponent(Button);\n      child.addComponent(ReplicatedButton);\n      return btn;\n    });\n    this.node.children[1].addComponent(Button);\n    this.node.children[1].addComponent(ReplicatedButton);\n    this.node.children[1].addComponent(UIView);\n    this.node.children[1].on(Button.EventType.CLICK, () => {\n      this.checkSelection();\n    });\n    choiceButtons.forEach((btn, i) => {\n      this._selection.push(false);\n\n      btn.node.on(Button.EventType.CLICK, async () => {\n        if(this.SingleAns)\n        if(this.store!=-1)\n        {\n          choiceButtons[this.store].node.children[0].active = false;\n          this._selection[this.store] = false;\n        }\n        this.store=i\n        this.backGround.getComponent(ChangeBackground).ButtonClick.play();\n        if (this._selection[i] === false) {\n          btn.node.children[0].active = true;\n          this._selection[i] = true;\n        } else {\n          btn.node.children[0].active = false;\n          this._selection[i] = false;\n        }\n      });\n    });\n    this.lableAssigner();\n\n  }\n\n  onEnable(){\n    this.backGround.getComponent(ChangeBackground)._navButtonVisibility(false,false,false)\n  }\n  // onDisable(){\n  //   this.backGround.getComponent(ChangeBackground)._navButtonVisibility(false,true,false)\n  // }\n\n  _setNavStatus(screen){\n    if(this.ScreenTag==screen){\n      console.log(\"set\",screen)\n      this.backGround.getComponent(ChangeBackground)._navButtonVisibility(false,true,false)\n    }\n  }\n\n\n\n  _callToVisible(Screen){\n    if(this.ScreenTag == Screen) this.node.active=true;\n    else if(this.ScreenTag==-1) return;\n    else this.node.active=false;\n  }\n\n  insertChild() {\n    for (let i = 0; i < this.optionLabel.length; i++) {\n      let addchild = instantiate(this.optionPrefab);\n      addchild.parent = this.optionsContainer.node;\n    }\n  }\n\n async checkSelection() {\n  this.backGround.getComponent(ChangeBackground).ButtonClick.play();\n    const isCorrect = this._selection.reduce((check, isSelected, i) => {\n      check &&= isSelected === this.answer[i]\n      return check;\n    }, true);\n\n    this.checkFeedback(isCorrect ? 1: 2);\n    this.node.children[1].active=false;\n    if(isCorrect)\n    await this.backGround.getComponentInChildren(CheckPrompt).showCorrect();\n    else await this.backGround.getComponentInChildren(CheckPrompt).showTryAgain();\n    this.node.children[1].active=true;\n    const ev = new ValidationEvent(true, isCorrect)\n    this.node.dispatchEvent(ev)\n    debug(\"Dispatched event - \", ev)\n  }\n\n  lableAssigner() {\n    const mcqLable = this.node.getComponentsInChildren(Label);\n    mcqLable.forEach((btnLable, i) => {\n      if (this.optionLabel.length <= i) {\n        btnLable.node.parent.active = false;\n      } else btnLable.string = this.optionLabel[i];\n    });\n  }\n\n  async checkFeedback(statusIndex) {\n    const btn = this.optionsContainer.node.children;\n    await Promise.all(\n      this._selection.map(async (status, i) => {\n        if (status) {\n          btn[i].children[statusIndex].active = true;\n          await UIAnimationLibrary.flash(btn[i].children[statusIndex], 2);\n          btn[i].children[statusIndex].active = false;\n        }\n      }),\n    );\n  }\n}\n"]}