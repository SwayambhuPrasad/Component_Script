{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/assets/MCQ/script/MCQ.ts"],"names":["Button","Component","instantiate","Label","Layout","Prefab","_decorator","AS","ReplicatedButton","UIAnimationLibrary","ccclass","property","requireComponent","AnswerType","MCQ","type","String","_selection","Array","answer","awake","insertChild","insertButtonsComp","optionsContainer","node","children","choiceButtons","map","child","btn","addComponent","forEach","i","name","on","EventType","CLICK","checkSelection","push","active","lableAssigner","optionLabel","length","addchild","optionPrefab","parent","sel","checkFeedback","console","log","mcqLable","getComponentsInChildren","btnLable","string","statusIndex","Promise","all","status","flash"],"mappings":"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","sourcesContent":["import { Button, Component, instantiate, Label, Layout, Prefab, _decorator } from \"cc\";\nimport { AS } from \"db://as_framework/scripts//ASComponent\";\nimport { ReplicatedButton } from \"db://as_framework/scripts/ReplicatedButton\";\nimport { UIAnimationLibrary } from \"db://as_framework/scripts/UIAnimLibrary\";\nconst { ccclass, property, requireComponent } = _decorator;\n\nenum AnswerType {\n  SINGLE_CORRECT,\n  MULTIPLE_CORRECT,\n}\n\n@ccclass(\"MCQ\")\nexport class MCQ extends AS(Component) {\n  @property({ type: String }) private optionLabel: string[] = [];\n\n  @property(Prefab) private optionPrefab: Prefab = null;\n\n  @property(Layout) private optionsContainer: Layout | null = null;\n\n  //@property({type: Enum(AnswerType)}) private answerType = AnswerType.SINGLE_CORRECT;\n\n  // @property({visible: function (this: MCQ) {return this.answerType === AnswerType.SINGLE_CORRECT}}) private x;\n  private _selection = Array<boolean>();\n\n  private answer = [false, true, true, false];\n\n  awake() {\n    this.insertChild();\n    const insertButtonsComp = this.optionsContainer.node.children;\n\n    const choiceButtons = insertButtonsComp.map((child) => {\n      const btn = child.addComponent(Button);\n      child.addComponent(ReplicatedButton);\n      return btn;\n    });\n    this.node.children[1].addComponent(Button);\n    this.node.children[1].addComponent(ReplicatedButton);\n\n    choiceButtons.forEach((btn, i) => {\n      if (btn.node.name === \"check\") {\n        btn.node.on(Button.EventType.CLICK, () => {\n          this.checkSelection();\n        });\n        return;\n      }\n\n      this._selection.push(false);\n\n      btn.node.on(Button.EventType.CLICK, async () => {\n        if (this._selection[i] === false) {\n          btn.node.children[0].active = true;\n          this._selection[i] = true;\n        } else {\n          btn.node.children[0].active = false;\n          this._selection[i] = false;\n        }\n      });\n    });\n    this.lableAssigner();\n  }\n\n  insertChild() {\n    // this.optionsContainer.node.destroyAllChildren();\n    for (let i = 0; i < this.optionLabel.length; i++) {\n      let addchild = instantiate(this.optionPrefab);\n      addchild.parent = this.optionsContainer.node;\n    }\n\n    // director.once(Director.EVENT_BEFORE_UPDATE, () => this.optionsContainer.updateLayout());\n  }\n\n  checkSelection() {\n    this._selection.forEach((sel, i) => {\n      if (sel != this.answer[i]) {\n        this.checkFeedback(2);\n        return;\n      }\n    });\n    this.checkFeedback(1);\n    console.log(\"running\");\n  }\n\n  lableAssigner() {\n    const mcqLable = this.node.getComponentsInChildren(Label);\n    mcqLable.forEach((btnLable, i) => {\n      if (this.optionLabel.length <= i) {\n        btnLable.node.parent.active = false;\n      } else btnLable.string = this.optionLabel[i];\n    });\n  }\n\n  async checkFeedback(statusIndex) {\n    console.log(\"running\", this._selection);\n    const btn = this.optionsContainer.node.children;\n\n    await Promise.all(\n      this._selection.map(async (status, i) => {\n        if (status) {\n          console.log(\"running\", statusIndex);\n          btn[i].children[statusIndex].active = true;\n          await UIAnimationLibrary.flash(btn[i].children[statusIndex], 2);\n          btn[i].children[statusIndex].active = false;\n        }\n      }),\n    );\n  }\n}\n"]}