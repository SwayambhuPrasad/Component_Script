{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/extensions/as_framework/framework/assets/scripts/BiDirectionalMap.ts"],"names":["BiDirectionalMap","constructor","map","forwardMap","Map","reverseMap","forEach","value","key","set","Array","isArray","entry","size","existingValue","get","delete","existingKey","clear","getValue","getKey","deleteKey","deleteValue","hasKey","has","hasValue","keys","values","entries","callbackfn","thisArg"],"mappings":"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","sourcesContent":["export class BiDirectionalMap<K, V> {\n  private readonly forwardMap = new Map<K, V>();\n\n  private readonly reverseMap = new Map<V, K>();\n\n  constructor(map?: Map<K, V> | Array<[K, V]>) {\n    if (map) {\n      if (map instanceof Map) {\n        map.forEach((value, key) => {\n          this.set(key, value);\n        });\n      } else if (Array.isArray(map)) {\n        map.forEach((entry) => {\n          this.set(entry[0], entry[1]);\n        });\n      }\n    }\n  }\n\n  get size(): number {\n    return this.forwardMap.size;\n  }\n\n  set(key: K, value: V): this {\n    const existingValue = this.forwardMap.get(key);\n    if (existingValue != null) this.reverseMap.delete(existingValue);\n\n    const existingKey = this.reverseMap.get(value);\n    if (existingKey != null) this.forwardMap.delete(existingKey);\n\n    this.forwardMap.set(key, value);\n    this.reverseMap.set(value, key);\n    return this;\n  }\n\n  clear(): void {\n    this.forwardMap.clear();\n    this.reverseMap.clear();\n  }\n\n  getValue(key: K): V | undefined {\n    return this.forwardMap.get(key);\n  }\n\n  getKey(value: V): K | undefined {\n    return this.reverseMap.get(value);\n  }\n\n  deleteKey(key: K): boolean {\n    const value = this.forwardMap.get(key);\n    if (value == null) return false;\n    this.reverseMap.delete(value);\n    return this.forwardMap.delete(key);\n  }\n\n  deleteValue(value: V): boolean {\n    const key = this.reverseMap.get(value);\n    if (key == null) return false;\n    this.forwardMap.delete(key);\n    return this.reverseMap.delete(value);\n  }\n\n  hasKey(key: K): boolean {\n    return this.forwardMap.has(key);\n  }\n\n  hasValue(value: V): boolean {\n    return this.reverseMap.has(value);\n  }\n\n  keys(): IterableIterator<K> {\n    return this.forwardMap.keys();\n  }\n\n  values(): IterableIterator<V> {\n    return this.reverseMap.keys();\n  }\n\n  entries(): IterableIterator<[K, V]> {\n    return this.forwardMap.entries();\n  }\n\n  forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: unknown): void {\n    return this.forwardMap.forEach(callbackfn, thisArg);\n  }\n}\n"]}