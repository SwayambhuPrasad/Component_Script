{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/assets/GuessTheWord/GuessTheWord.ts"],"names":["_decorator","Component","instantiate","Button","Label","Sprite","Prefab","Layout","Color","AS","ReplicatedButton","ccclass","property","GuessTheWord","_iterator","_blanks","_options","awake","check","addComponent","clear","i","correctWord","length","newBlank","blank","parent","blankContainer","node","push","jumbledWord","newOption","option","optionContainer","getComponentInChildren","string","forEach","btn","on","EventType","CLICK","_select","_clear","_check","getComponent","enabled","color","temp","checkWord","blanks","active","scheduleOnce","_clearAll"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, instantiate, Button, Label, Sprite, Prefab, Layout, Color} from 'cc';\nimport { AS } from \"db://as_framework/scripts/ASComponent\";\nimport { ReplicatedButton } from \"db://as_framework/scripts/ReplicatedButton\";\nconst { ccclass, property } = _decorator;\n\n@ccclass('GuessTheWord')\nexport class GuessTheWord extends AS(Component) {\n\n    @property(Layout) blankContainer : Layout | null = null;\n    @property(Layout) optionContainer : Layout | null = null;\n    @property(Prefab) blank : Prefab | null = null;\n    @property(Prefab) option : Prefab | null = null;\n\n    @property(Button) check : Button | null = null;\n    @property(Button) clear : Button | null = null;\n    @property correctWord = '';\n    @property jumbledWord = '';\n\n    private _iterator = 0;\n    private _blanks : Node[] | null = [];\n    private _options : Node[] | null = [];\n\n    awake(){\n\n        this.check.addComponent(ReplicatedButton);\n        this.clear.addComponent(ReplicatedButton);\n\n        for(let i = 0; i < this.correctWord.length; i++) {\n            let newBlank = instantiate(this.blank);\n            newBlank.parent = this.blankContainer.node;\n            this._blanks.push(newBlank);\n        }\n        for(let i = 0; i < this.jumbledWord.length; i++) {\n            let newOption = instantiate(this.option);\n            newOption.parent = this.optionContainer.node;\n            newOption.getComponentInChildren(Label).string = this.jumbledWord[i];\n            newOption.addComponent(ReplicatedButton);\n            this._options.push(newOption);\n        }\n\n        this._options.forEach((btn, i) => {\n            btn.on(Button.EventType.CLICK, () => {\n                this._select(btn);\n            },this)\n        })\n\n        this.clear.node.on(Button.EventType.CLICK,()=>{\n            this._clear();\n        },this);\n\n        this.check.node.on(Button.EventType.CLICK, () => {\n            this._check();\n        },this)\n\n    }\n\n    private _select(btn){\n        if(this._iterator < this.correctWord.length)\n        {\n            this._blanks[this._iterator].getComponentInChildren(Label).string = btn.getComponentInChildren(Label).string;\n            btn.getComponent(Button).enabled = false;\n            btn.getComponent(Sprite).color= new Color(255,255,255,180);\n            this._iterator++;\n        }\n    }\n\n    private _clear(){\n        if(this._iterator > 0){\n            this._iterator-- ;\n            let temp = this._blanks[this._iterator].getComponentInChildren(Label).string;\n            this._blanks[this._iterator].getComponentInChildren(Label).string = '';\n            for(let i=0; i< this._options.length; i++)\n            {\n                if(temp == this._options[i].getComponentInChildren(Label).string)\n                {\n                    this._options[i].getComponent(Button).enabled = true;\n                    this._options[i].getComponent(Sprite).color= new Color(255,255,255,255);\n                    break;\n                }\n            }\n        }\n    }\n\n    private _check(){\n        let checkWord =''\n        this._blanks.forEach((blanks, i) => {\n            checkWord += blanks.getComponentInChildren(Label).string;\n        })\n\n        if(checkWord==this.correctWord)\n        {   this.check.node.active = false;\n            this.clear.enabled = false;\n            this.clear.getComponent(Sprite).color= new Color(255,255,255,180);\n            this._blanks.forEach((blanks, i) => {\n                blanks.getComponent(Sprite).color= new Color(0,255,0,255);\n            })\n            this._options.forEach((btn, i) => {\n                btn.getComponent(Button).enabled = false;\n                btn.getComponent(Sprite).color= new Color(255,255,255,180);\n            })\n        }\n        else\n        {\n            this._blanks.forEach((blanks, i) => {\n                blanks.getComponent(Sprite).color= new Color(255,44,44,255);\n            })\n            this.scheduleOnce(this._clearAll, 0.5);\n\n        }\n    }\n\n    private _clearAll(){\n        this._iterator = 0;\n        this._options.forEach((btn, i) => {\n            btn.getComponent(Button).enabled = true;\n            btn.getComponent(Sprite).color= new Color(255,255,255,255);\n        })\n        this._blanks.forEach((blanks, i) => {\n            blanks.getComponentInChildren(Label).string = '';\n            blanks.getComponent(Sprite).color= new Color(255,255,255,255);\n        })\n    }\n\n}\n\n"]}