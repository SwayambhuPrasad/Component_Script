{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/extensions/as_framework/framework/assets/scripts/ASComponent.ts"],"names":["AS","base","WrappedComponent","constructor","_args","_isAwake","EDITOR","TEST","_executeInEditMode","director","once","Director","EVENT_AFTER_SCENE_LAUNCH","awake","_isAwakeCalled","_isAnimating","node","value","__preload"],"mappings":";;;;;AAKO,WAASA,EAAT,CAAgDC,IAAhD,EAA6D;AAClE,UAAMC,gBAAN,SAA+BD,IAA/B,CAAoC;AAGlCE,MAAAA,WAAW,CAAC,GAAGC,KAAJ,EAAkB;AAC3B,gBAD2B,CAE3B;;AAF2B,aAFrBC,QAEqB,GAFV,KAEU;AAG3B,YAAI,CAACC,MAAM,IAAIC,IAAX,KAAoB,CAACN,IAAI,CAACO,kBAA9B,EAAkD;AAClDC,QAAAA,QAAQ,CAACC,IAAT,CAAcC,QAAQ,CAACC,wBAAvB,EAAiD,MAAM;AACrD,cAAI,KAAKC,KAAL,IAAc,CAAC,KAAKR,QAAxB,EAAkC;AAChC,iBAAKQ,KAAL;AACA,iBAAKR,QAAL,GAAgB,IAAhB;AACD;AACF,SALD;AAMD;;AAE2B,UAAdS,cAAc,GAAG;AAC7B,eAAO,KAAKT,QAAZ;AACD;;AAEyB,UAAZU,YAAY,GAAG;AAC3B;AACA,eAAO,KAAKC,IAAL,CAAUD,YAAjB;AACD;;AAEyB,UAAZA,YAAY,CAACE,KAAD,EAAQ;AAChC;AACA,aAAKD,IAAL,CAAUD,YAAV,GAAyBE,KAAzB;AACD;;AAEDC,MAAAA,SAAS,GAAG;AACV,YAAI,MAAMA,SAAV,EAAqB,MAAMA,SAAN;;AACrB,YAAI,KAAKL,KAAL,IAAc,CAAC,KAAKR,QAAxB,EAAkC;AAChC,eAAKQ,KAAL;AACA,eAAKR,QAAL,GAAgB,IAAhB;AACD;AACF;AAED;AACJ;AACA;AACA;;;AAxCsC;;AA4CpC,WAAOH,gBAAP;AACD;;gBA9CeF,E;;;;;AALiBW,MAAAA,Q,OAAAA,Q;AAAUF,MAAAA,Q,OAAAA,Q;;AAClCH,MAAAA,M,UAAAA,M;AAAQC,MAAAA,I,UAAAA,I","sourcesContent":["import { Component, Constructor, Director, director } from \"cc\";\nimport { EDITOR, TEST } from \"cc/env\";\n\ntype ComponentConstructor = Constructor<Component>;\n\nexport function AS<TBase extends ComponentConstructor>(base: TBase) {\n  class WrappedComponent extends base {\n    private _isAwake = false;\n\n    constructor(..._args: any[]) {\n      super();\n      // @ts-expect-error\n      if ((EDITOR || TEST) && !base._executeInEditMode) return;\n      director.once(Director.EVENT_AFTER_SCENE_LAUNCH, () => {\n        if (this.awake && !this._isAwake) {\n          this.awake();\n          this._isAwake = true;\n        }\n      });\n    }\n\n    protected get _isAwakeCalled() {\n      return this._isAwake;\n    }\n\n    protected get _isAnimating() {\n      //@ts-expect-error\n      return this.node._isAnimating;\n    }\n\n    protected set _isAnimating(value) {\n      //@ts-expect-error\n      this.node._isAnimating = value;\n    }\n\n    __preload() {\n      if (super.__preload) super.__preload();\n      if (this.awake && !this._isAwake) {\n        this.awake();\n        this._isAwake = true;\n      }\n    }\n\n    /**\n     * This method is called at scene load regardless of active\n     * state.\n     */\n    awake?(): void;\n  }\n\n  return WrappedComponent;\n}\n"]}