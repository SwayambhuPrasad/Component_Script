{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/extensions/as_framework/framework/assets/scripts/AppletConfig.ts"],"names":["setAppletConfig","config","category","Object","prototype","hasOwnProperty","call","appletConfig","categoryConfig","key","EDITOR","loadFonts","debug","warn","rootLogger","networkReplicator","i18n","enabled","value","currentLanguage","resourcePath","collab","fonts","kits","kit","logger","level","getLevel","setLevel","response","fetch","ok","json","params","URLSearchParams","window","location","search","entries","startsWith","k","split"],"mappings":"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","sourcesContent":["import { EDITOR } from \"cc/env\";\nimport { IFontKit, loadFonts } from \"./FontManager\";\nimport { debug, warn } from \"./Logger\";\nimport rootLogger from \"./loglevel.js\";\nimport { networkReplicator } from \"./NetworkReplicator\";\nimport { i18n } from \"./Translations\";\n\nconst appletConfig = {\n  i18n: {\n    get enabled() {\n      return i18n.enabled;\n    },\n    set enabled(value) {\n      i18n.enabled = value;\n    },\n    get currentLanguage() {\n      return i18n.currentLanguage;\n    },\n    set currentLanguage(value) {\n      i18n.currentLanguage = value;\n    },\n    get resourcePath() {\n      return i18n.resourcePath;\n    },\n    set resourcePath(value) {\n      i18n.resourcePath = value;\n    },\n  },\n  collab: {\n    get enabled() {\n      return networkReplicator.enabled;\n    },\n    set enabled(value) {\n      networkReplicator.enabled = value;\n    },\n  },\n  fonts: {\n    set kits(value: IFontKit[]) {\n      for (const kit of value) {\n        loadFonts(kit);\n      }\n    },\n  },\n  logger: {\n    get level() {\n      return rootLogger.getLevel();\n    },\n    set level(value) {\n      rootLogger.setLevel(value);\n    },\n  },\n};\n\nfunction setAppletConfig(config: any) {\n  for (const category in config) {\n    if (\n      Object.prototype.hasOwnProperty.call(config, category) &&\n      Object.prototype.hasOwnProperty.call(appletConfig, category)\n    ) {\n      const categoryConfig = config[category];\n      for (const key in categoryConfig) {\n        if (\n          Object.prototype.hasOwnProperty.call(categoryConfig, key) &&\n          Object.prototype.hasOwnProperty.call((appletConfig as any)[category], key)\n        ) {\n          (appletConfig as any)[category][key] = categoryConfig[key];\n        }\n      }\n    }\n  }\n}\n\n(async function () {\n  if (EDITOR) return;\n  const response = await fetch(\"./applet.json\");\n  if (response.ok) {\n    setAppletConfig(await response.json());\n  } else {\n    warn(\"No applet.json found! Using the default config.\");\n  }\n\n  const params = new URLSearchParams(window.location.search);\n  let config = {} as any;\n  for (const [key, value] of params.entries()) {\n    if (key.startsWith(\"appletConfig.\")) {\n      const [, category, k] = key.split(\".\");\n      if (category in config) {\n        config[category][k] = value;\n      } else {\n        config[category] = { [k]: value };\n      }\n    }\n  }\n\n  debug(\"Applet config from URL:\", config);\n  setAppletConfig(config);\n})();\n"]}