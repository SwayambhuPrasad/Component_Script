{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/extensions/as_framework/framework/assets/scripts/OptionItem.ts"],"names":["Button","Component","Label","Sprite","_decorator","AS","error","ccclass","property","requireComponent","OptionItem","_button","_onClickCallback","label","_label","sprite","_sprite","button","value","setClickCallback","fn","node","on","EventType","CLICK","onEnable","onDisable","off","awake","getComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,M,OAAAA,M;AAAQC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,U,OAAAA,U;;AAClCC,MAAAA,E,iBAAAA,E;;AACAC,MAAAA,K,iBAAAA,K;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,QAAX;AAAqBC,QAAAA;AAArB,O,GAA0CL,U;;4BAMnCM,U,WAFZH,OAAO,CAAC,YAAD,C,UACPE,gBAAgB,CAACT,MAAD,C,UAQdQ,QAAQ,CAACN,KAAD,C,UAIRM,QAAQ,CAACL,MAAD,C,0CAbX,MAEaO,UAFb,SAEgC;AAAA;AAAA,oBAAGT,SAAH,CAFhC,CAE8C;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eAKpCU,OALoC,GAKX,IALW;;AAAA,eA+CpCC,gBA/CoC,GA+CM,MAAM,CAAE,CA/Cd;AAAA;;AAOlB,YAALC,KAAK,GAAG;AAC3B,iBAAO,KAAKC,MAAZ;AACD;;AAE2B,YAANC,MAAM,GAAG;AAC7B,iBAAO,KAAKC,OAAZ;AACD;;AAES,YAANC,MAAM,GAAG;AACX,iBAAO,KAAKN,OAAZ;AACD;;AAEQ,YAALE,KAAK,CAACK,KAAD,EAAQ;AACf,eAAKJ,MAAL,GAAcI,KAAd;AACD;;AAES,YAANH,MAAM,CAACG,KAAD,EAAQ;AAChB,eAAKF,OAAL,GAAeE,KAAf;AACD;;AAEDC,QAAAA,gBAAgB,CAACC,EAAD,EAA4B;AAC1C,eAAKR,gBAAL,GAAwBQ,EAAxB;AACA,eAAKC,IAAL,CAAUC,EAAV,CAAatB,MAAM,CAACuB,SAAP,CAAiBC,KAA9B,EAAqC,KAAKZ,gBAA1C;AACD;;AAEDa,QAAAA,QAAQ,GAAG;AACT,eAAKJ,IAAL,CAAUC,EAAV,CAAatB,MAAM,CAACuB,SAAP,CAAiBC,KAA9B,EAAqC,KAAKZ,gBAA1C;AACD;;AAEDc,QAAAA,SAAS,GAAG;AACV,eAAKL,IAAL,CAAUM,GAAV,CAAc3B,MAAM,CAACuB,SAAP,CAAiBC,KAA/B,EAAsC,KAAKZ,gBAA3C;AACD;;AAEDgB,QAAAA,KAAK,GAAG;AACN,eAAKjB,OAAL,GAAe,KAAKkB,YAAL,CAAkB7B,MAAlB,CAAf;;AACA,cAAI,KAAKW,OAAL,IAAgB,IAApB,EAA0B;AACxB;AAAA;AAAA,gCAAM,oCAAN;AACD;AACF;;AA7C2C,O,yEAC3CH,Q;;;;;iBAAwC,I;;kFAExCA,Q;;;;;iBAA0C,I","sourcesContent":["import { Button, Component, Label, Sprite, _decorator } from \"cc\";\nimport { AS } from \"./ASComponent\";\nimport { error } from \"./Logger\";\n\nconst { ccclass, property, requireComponent } = _decorator;\n\ntype ClickCallbackFunction = (button?: Button) => void;\n\n@ccclass(\"OptionItem\")\n@requireComponent(Button)\nexport class OptionItem extends AS(Component) {\n  @property private _label: Label | null = null;\n\n  @property private _sprite: Sprite | null = null;\n\n  private _button: Button | null = null;\n\n  @property(Label) get label() {\n    return this._label;\n  }\n\n  @property(Sprite) get sprite() {\n    return this._sprite;\n  }\n\n  get button() {\n    return this._button;\n  }\n\n  set label(value) {\n    this._label = value;\n  }\n\n  set sprite(value) {\n    this._sprite = value;\n  }\n\n  setClickCallback(fn: ClickCallbackFunction) {\n    this._onClickCallback = fn;\n    this.node.on(Button.EventType.CLICK, this._onClickCallback);\n  }\n\n  onEnable() {\n    this.node.on(Button.EventType.CLICK, this._onClickCallback);\n  }\n\n  onDisable() {\n    this.node.off(Button.EventType.CLICK, this._onClickCallback);\n  }\n\n  awake() {\n    this._button = this.getComponent(Button);\n    if (this._button == null) {\n      error(\"Option item button cannot be null.\");\n    }\n  }\n\n  private _onClickCallback: ClickCallbackFunction = () => {};\n}\n"]}