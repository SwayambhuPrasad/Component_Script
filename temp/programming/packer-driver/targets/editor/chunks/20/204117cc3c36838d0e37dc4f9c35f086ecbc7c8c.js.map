{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/assets/PickSentence/PickSentence.ts"],"names":["_decorator","Component","instantiate","Button","Label","Sprite","EditBox","Prefab","AS","UIPopup","ReplicatedButton","ccclass","property","PickSentence","String","_choices","awake","button","addComponent","_addEventListeners","questionLabel","string","questionString","toString","i","optionLabel","length","newOption","optionPrefab","parent","popup","node","getChildByName","push","editbox","getComponentInChildren","forEach","btn","_selectedOption","getComponent","str","hilight","on","EventType","CLICK","isVisible","hide","hil","j","active","label","enabled","_onButtonClick","show","sentence","question","optionLabelString"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, instantiate, Button, Label, Sprite, EditBox, Prefab} from 'cc';\nimport { AS } from \"db://as_framework/scripts//ASComponent\";\nimport { UIPopup } from \"db://as_framework/scripts/UIPopup\";\nimport { ReplicatedButton } from \"db://as_framework/scripts/ReplicatedButton\";\nconst { ccclass, property } = _decorator;\n\n@ccclass('PickSentence')\nexport class PickSentence extends AS(Component) {\n    @property(Button) button: Button | null = null;\n    @property(UIPopup) popup: UIPopup | null = null;\n    @property(Prefab) optionPrefab: Prefab | null = null;\n    @property(Label) label: Label | null = null;\n    @property(Label) questionLabel: Label | null = null;\n    @property(String) questionString: String = '';\n    @property(String) optionLabel: String[] | null = [];\n    private _choices : Node[] | null = [];\n\n    awake() {\n        this.button.addComponent(ReplicatedButton);\n        this._addEventListeners();\n        this.questionLabel.string = this.questionString.toString();\n        for(let i = 0; i < this.optionLabel.length; i++) {\n            let newOption = instantiate(this.optionPrefab);\n            newOption.parent = this.popup.node.getChildByName('Layout');\n            newOption.addComponent(ReplicatedButton);\n            this._choices.push(newOption);\n        }\n        const editbox = this.popup.getComponentInChildren(EditBox);\n        this._choices.forEach((btn, i) => {\n            let _selectedOption = btn.getChildByName('Label');\n            _selectedOption.getComponent(Label).string = this.optionLabel[i].toString();\n            let str = _selectedOption.getComponent(Label).string;\n            let hilight = btn.getChildByName('hilight');\n            btn.on(Button.EventType.CLICK, async () => {\n                if (this.popup.isVisible)\n                    await this.popup.hide();\n                this._choices.forEach((hil, j)=> { hil.getChildByName('hilight').active = false})\n                hilight.active = true;\n                this.label.string = str;\n                editbox.string = str;\n                if(this.button.getComponent(Sprite).enabled)\n                    this.button.getComponent(Sprite).enabled = false;\n            })\n        })\n       editbox.node.on('editing-did-ended', async ()=>{\n        if (this.popup.isVisible)\n            await this.popup.hide();\n        this._choices.forEach((hil, j)=> { hil.getChildByName('hilight').active = false})\n        this.label.string = editbox.string;\n        if(this.button.getComponent(Sprite).enabled)\n            this.button.getComponent(Sprite).enabled = false;\n        })\n    }\n    private _addEventListeners() {\n        this.button.node.on(Button.EventType.CLICK, this._onButtonClick, this);\n    }\n    private _onButtonClick() {        \n        this.popup.show();\n    }\n    get sentence() {\n        return this.label.string;\n    }\n    set sentence(str) {\n        this.label.string = str;\n    }\n    get question() {\n        return this.questionLabel.string;\n    }\n    set question(str) {\n        this.questionLabel.string = str;\n    }\n    set optionLabelString(str){\n        this.optionLabel = str;\n    }\n}"]}