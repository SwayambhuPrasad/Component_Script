{"version":3,"sources":["file:///Users/swayambhupanda/Documents/GitHub/applet-framework-demo/assets/Swap/Swap.ts"],"names":["Component","_decorator","Node","SpriteFrame","AS","ccclass","property","requireComponent","MCQ","type","awake","start","update","deltaTime","updateSprit","i","parentImage","length","DragContainer","children","Sprite"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAiBA,MAAAA,S,OAAAA,S;AAAuDC,MAAAA,U,OAAAA,U;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,W,OAAAA,W;;AAChFC,MAAAA,E,iBAAAA,E;;;;;;;OAGH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,QAAX;AAAqBC,QAAAA;AAArB,O,GAA0CN,U;;qBAGnCO,G,WADZH,OAAO,CAAC,MAAD,C,UAGLC,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEN;AAAR,OAAD,C,UACRG,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEN;AAAR,OAAD,C,UACRG,QAAQ,CAAC;AAACG,QAAAA,IAAI,EAACP;AAAN,OAAD,C,UACRI,QAAQ,CAAC;AAACG,QAAAA,IAAI,EAACP;AAAN,OAAD,C,2BANX,MACaM,GADb,SACyB;AAAA;AAAA,oBAAGR,SAAH,CADzB,CACwC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAQpCU,QAAAA,KAAK,GACL,CAEC;;AACDC,QAAAA,KAAK,GAAG,CAEP;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AACDC,QAAAA,WAAW,GAAE;AACX,eAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKC,WAAL,CAAiBC,MAA/B,EAAsCF,CAAC,EAAvC,EACA;AACE,iBAAKG,aAAL,CAAmBC,QAAnB,CAA4B,CAA5B,EAA+BC,MAA/B;AACD;AACF;;AAxBmC,O;;;;;iBAEgC,E;;;;;;;iBACF,E","sourcesContent":["import { Button, Component, instantiate, Label, Layout, Prefab, Sprite, _decorator,Node, SpriteFrame } from \"cc\";\nimport { AS } from \"db://as_framework/scripts//ASComponent\";\nimport { UIDrag } from \"db://as_framework/scripts/UIDrag\";\nimport { UIDrop } from \"db://as_framework/scripts/UIDrop\";\nconst { ccclass, property, requireComponent } = _decorator;\n\n@ccclass('Swap')\nexport class MCQ extends AS(Component)  {\n\n  @property({ type: SpriteFrame }) private parentImage: SpriteFrame[] = [];\n  @property({ type: SpriteFrame }) private dragImage: SpriteFrame[] = [];\n  @property({type:Node}) private DragContainer: Node ;\n  @property({type:Node}) private ParentImageContainer: Node;\n\n\n    awake()\n    {\n\n    }\n    start() {\n\n    }\n\n    update(deltaTime: number) {\n\n    }\n    updateSprit(){\n      for(let i=0;i<this.parentImage.length;i++)\n      {\n        this.DragContainer.children[0].Sprite\n      }\n    }\n}\n\n"]}